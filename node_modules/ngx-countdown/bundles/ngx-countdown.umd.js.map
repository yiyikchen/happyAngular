{"version":3,"file":"ngx-countdown.umd.js","sources":["../../lib/src/interfaces.ts","../../lib/src/countdown.timer.ts","../../lib/src/countdown.config.ts","../../lib/src/countdown.component.ts","../../lib/src/countdown.module.ts","../../lib/src/ngx-countdown.ts"],"sourcesContent":["export type CountdownFormatFn = (opt: CountdownFormatFnOption) => string;\n\nexport interface CountdownFormatFnOption {\n  date: number;\n  formatStr: string;\n  timezone?: string;\n}\n\nexport enum CountdownStatus {\n  ing,\n  pause,\n  stop,\n  done,\n}\n\nexport interface CountdownConfig {\n  /**\n   * Start the counter on demand, must call `begin()` to starting, Default: `false`\n   */\n  demand?: boolean;\n\n  /**\n   * Calculate the remaining time based on the server, e.g: `10`,`5.5`, (Unit: seconds)\n   */\n  leftTime?: number;\n\n  /**\n   * Refers to counting down from local time to end time (Unit: Milliseconds second UNIX timestamp)\n   */\n  stopTime?: number;\n\n  /**\n   * Formats a date value, pls refer to [Accepted patterns](https://angular.io/api/common/DatePipe#usage-notes), Default: `HH:mm:ss`\n   */\n  format?: string;\n\n  /**\n   * Beautify text, generally used to convert formatted time text into HTML\n   */\n  prettyText?: (text: string) => string;\n\n  /**\n   * Should be trigger type `notify` event on the x second. When values is `0` will be trigger every time.\n   */\n  notify?: number[] | number;\n\n  /**\n   * Default based on the implementation of `formatDate` in `@angular/common`\n   *\n   * You can changed to other libs, e.g: [date-fns](https://date-fns.org/v2.0.1/docs/format)\n   */\n  formatDate?: CountdownFormatFn;\n\n  /**\n   * A timezone offset (such as '+0430'), or a standard UTC/GMT.\n   * When not supplied, uses the end-user's local system timezone, Default: `+0000`\n   */\n  timezone?: string;\n}\n\nexport type CountdownEventAction = 'start' | 'stop' | 'restart' | 'pause' | 'resume' | 'notify' | 'done';\n\nexport interface CountdownEvent {\n  action: CountdownEventAction;\n  status: CountdownStatus;\n  left: number;\n  text: string;\n}\n\nexport interface CountdownItem {\n  text?: string;\n  value?: number;\n}\n","import { Injectable, NgZone } from '@angular/core';\n\n@Injectable()\nexport class CountdownTimer {\n  private fns: Array<((count: number) => number | void) | number> = [];\n  private commands: Array<() => void> = [];\n  private nextTime = 0;\n  private ing = false;\n\n  constructor(private ngZone: NgZone) {}\n\n  start(): void {\n    if (this.ing === true) {\n      return;\n    }\n\n    this.ing = true;\n    this.nextTime = +new Date();\n    this.ngZone.runOutsideAngular(() => {\n      this.process();\n    });\n  }\n\n  private process(): void {\n    while (this.commands.length) {\n      this.commands.shift()!();\n    }\n    let diff = +new Date() - this.nextTime;\n    const count = 1 + Math.floor(diff / 100);\n\n    diff = 100 - (diff % 100);\n    this.nextTime += 100 * count;\n\n    for (let i = 0, len = this.fns.length; i < len; i += 2) {\n      let frequency = this.fns[i + 1] as number;\n\n      // 100/s\n      if (0 === frequency) {\n        (this.fns[i] as (count: number) => void)(count);\n        // 1000/s\n      } else {\n        // 先把末位至0，再每次加2\n        frequency += 2 * count - 1;\n\n        const step = Math.floor(frequency / 20);\n        if (step > 0) {\n          (this.fns[i] as (count: number) => void)(step);\n        }\n\n        // 把末位还原成1\n        this.fns[i + 1] = (frequency % 20) + 1;\n      }\n    }\n\n    if (!this.ing) {\n      return;\n    }\n\n    setTimeout(() => this.process(), diff);\n  }\n\n  add(fn: () => void, frequency: number): this {\n    this.commands.push(() => {\n      this.fns.push(fn);\n      this.fns.push(frequency === 1000 ? 1 : 0);\n      this.ing = true;\n    });\n    return this;\n  }\n\n  remove(fn: () => void): this {\n    this.commands.push(() => {\n      const i = this.fns.indexOf(fn);\n      if (i !== -1) {\n        this.fns.splice(i, 2);\n      }\n      this.ing = this.fns.length > 0;\n    });\n    return this;\n  }\n}\n","// tslint:disable: no-inferrable-types\nimport { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { CountdownFormatFn, CountdownConfig } from './interfaces';\n\n@Injectable({ providedIn: 'root' })\nexport class CountdownGlobalConfig implements CountdownConfig {\n  constructor(@Inject(LOCALE_ID) private locale: string) {}\n\n  demand?: boolean = false;\n\n  leftTime?: number = 0;\n\n  format?: string = 'HH:mm:ss';\n\n  timezone?: string = '+0000';\n\n  formatDate?: CountdownFormatFn = ({ date, formatStr, timezone }) => {\n    return formatDate(new Date(date), formatStr, this.locale, timezone || this.timezone || '+0000');\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  OnInit,\n  SimpleChange,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Inject,\n  LOCALE_ID,\n  ChangeDetectorRef,\n  TemplateRef,\n  NgZone,\n} from '@angular/core';\n\nimport { CountdownConfig, CountdownStatus, CountdownEvent, CountdownEventAction, CountdownItem } from './interfaces';\nimport { CountdownTimer } from './countdown.timer';\nimport { CountdownGlobalConfig } from './countdown.config';\n\n@Component({\n  selector: 'countdown',\n  template: `\n    <ng-container *ngIf=\"!render\">\n      <span [innerHTML]=\"i.text\"></span>\n    </ng-container>\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\n  `,\n  host: { '[class.count-down]': 'true' },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CountdownComponent implements OnInit, OnChanges, OnDestroy {\n  private frequency = 1000;\n  private _notify: { [key: number]: boolean } = {};\n  private status: CountdownStatus = CountdownStatus.ing;\n  private isDestroy = false;\n  private _config!: CountdownConfig;\n  i: CountdownItem = {};\n  left = 0;\n\n  @Input()\n  set config(i: CountdownConfig) {\n    if (i.notify != null && !Array.isArray(i.notify) && i.notify > 0) {\n      i.notify = [i.notify];\n    }\n    this._config = i;\n  }\n  get config(): CountdownConfig {\n    return this._config;\n  }\n  @Input() render!: TemplateRef<void>;\n  @Output() readonly event = new EventEmitter<CountdownEvent>();\n\n  constructor(\n    @Inject(LOCALE_ID) private locale: string,\n    private timer: CountdownTimer,\n    private defCog: CountdownGlobalConfig,\n    private cdr: ChangeDetectorRef,\n    private ngZone: NgZone,\n  ) {}\n\n  /**\n   * Start countdown, you must manually call when `demand: false`\n   */\n  begin(): void {\n    this.status = CountdownStatus.ing;\n    this.callEvent('start');\n  }\n\n  /**\n   * Restart countdown\n   */\n  restart(): void {\n    if (this.status !== CountdownStatus.stop) {\n      this.destroy();\n    }\n    this.init();\n    this.callEvent('restart');\n  }\n\n  /**\n   * Stop countdown, must call `restart` when stopped, it's different from pause, unable to recover\n   */\n  stop(): void {\n    if (this.status === CountdownStatus.stop) {\n      return;\n    }\n    this.status = CountdownStatus.stop;\n    this.destroy();\n    this.callEvent('stop');\n  }\n\n  /**\n   * Pause countdown, you can use `resume` to recover again\n   */\n  pause(): void {\n    if (this.status === CountdownStatus.stop || this.status === CountdownStatus.pause) {\n      return;\n    }\n    this.status = CountdownStatus.pause;\n    this.callEvent('pause');\n  }\n\n  /**\n   * Resume countdown\n   */\n  resume(): void {\n    if (this.status === CountdownStatus.stop || this.status !== CountdownStatus.pause) {\n      return;\n    }\n    this.status = CountdownStatus.ing;\n    this.callEvent('resume');\n  }\n\n  private callEvent(action: CountdownEventAction): void {\n    this.event.emit({ action, left: this.left, status: this.status, text: this.i.text! });\n  }\n\n  private init(): void {\n    const { locale, defCog } = this;\n    const config = (this.config = {\n      ...new CountdownGlobalConfig(locale),\n      ...defCog,\n      ...this.config,\n    });\n    // tslint:disable-next-line: no-bitwise\n    const frq = (this.frequency = ~config.format!.indexOf('S') ? 100 : 1000);\n    this.status = config.demand ? CountdownStatus.pause : CountdownStatus.ing;\n\n    this.getLeft();\n\n    // bind reflow to me\n    const _reflow = this.reflow;\n    this.reflow = (count: number = 0, force: boolean = false) => _reflow.apply(this, [count, force]);\n\n    if (Array.isArray(config.notify)) {\n      config.notify.forEach((time: number) => {\n        if (time < 1) {\n          throw new Error(`The notify config must be a positive integer.`);\n        }\n\n        time = time * 1000;\n        time = time - (time % frq);\n        this._notify[time] = true;\n      });\n    }\n\n    this.timer.add(this.reflow, frq).start();\n\n    this.reflow(0, true);\n  }\n\n  private destroy(): this {\n    this.timer.remove(this.reflow);\n    return this;\n  }\n\n  /**\n   * 更新时钟\n   */\n  private reflow(count: number = 0, force: boolean = false): void {\n    if (this.isDestroy) {\n      return;\n    }\n\n    const { status, config, _notify } = this;\n    if (!force && status !== CountdownStatus.ing) {\n      return;\n    }\n\n    let value = (this.left = this.left - this.frequency * count);\n    if (value < 1) {\n      value = 0;\n    }\n    this.i = {\n      value,\n      text: config.formatDate!({ date: value, formatStr: config.format!, timezone: config.timezone }),\n    };\n    if (typeof config.prettyText === 'function') {\n      this.i.text = config.prettyText(this.i.text!);\n    }\n    this.cdr.detectChanges();\n\n    if (config.notify === 0 || _notify[value]) {\n      this.ngZone.run(() => {\n        this.callEvent('notify');\n      });\n    }\n\n    if (value === 0) {\n      this.ngZone.run(() => {\n        this.status = CountdownStatus.done;\n        this.destroy();\n        this.callEvent('done');\n      });\n    }\n  }\n\n  /**\n   * 获取倒计时剩余帧数\n   */\n  private getLeft(): void {\n    const { config, frequency } = this;\n    let left = config.leftTime! * 1000;\n    const end = config.stopTime;\n\n    if (!left && end) {\n      left = end - new Date().getTime();\n    }\n\n    this.left = left - (left % frequency);\n  }\n\n  ngOnInit(): void {\n    this.init();\n    if (!this.config.demand) {\n      this.begin();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroy = true;\n    this.destroy();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (!changes.config!.firstChange) {\n      this.restart();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CountdownComponent } from './countdown.component';\nimport { CountdownTimer } from './countdown.timer';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [CountdownTimer],\n  declarations: [CountdownComponent],\n  exports: [CountdownComponent],\n})\nexport class CountdownModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["CountdownStatus","Injectable","NgZone","formatDate","Inject","LOCALE_ID","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","ChangeDetectorRef","Input","Output","NgModule","CommonModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQYA;IAAZ,WAAY,eAAe;QACzB,mDAAG,CAAA;QACH,uDAAK,CAAA;QACL,qDAAI,CAAA;QACJ,qDAAI,CAAA;IACN,CAAC,EALWA,uBAAe,KAAfA,uBAAe;;;QCCzB,wBAAoB,MAAc;YAAd,WAAM,GAAN,MAAM,CAAQ;YAL1B,QAAG,GAAuD,EAAE,CAAC;YAC7D,aAAQ,GAAsB,EAAE,CAAC;YACjC,aAAQ,GAAG,CAAC,CAAC;YACb,QAAG,GAAG,KAAK,CAAC;SAEkB;QAEtC,8BAAK,GAAL;YAAA,iBAUC;YATC,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE;gBACrB,OAAO;aACR;YAED,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;YAChB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;gBAC5B,KAAI,CAAC,OAAO,EAAE,CAAC;aAChB,CAAC,CAAC;SACJ;QAEO,gCAAO,GAAP;YAAA,iBAoCP;YAnCC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBAC3B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAG,EAAE,CAAC;aAC1B;YACD,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;YACvC,IAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;YAEzC,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAG,KAAK,CAAC;YAE7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE;gBACtD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAW,CAAC;;gBAG1C,IAAI,CAAC,KAAK,SAAS,EAAE;oBAClB,IAAI,CAAC,GAAG,CAAC,CAAC,CAA6B,CAAC,KAAK,CAAC,CAAC;;iBAEjD;qBAAM;;oBAEL,SAAS,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;oBAE3B,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC;oBACxC,IAAI,IAAI,GAAG,CAAC,EAAE;wBACX,IAAI,CAAC,GAAG,CAAC,CAAC,CAA6B,CAAC,IAAI,CAAC,CAAC;qBAChD;;oBAGD,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,GAAG,EAAE,IAAI,CAAC,CAAC;iBACxC;aACF;YAED,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;gBACb,OAAO;aACR;YAED,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,OAAO,EAAE,GAAA,EAAE,IAAI,CAAC,CAAC;SACxC;QAED,4BAAG,GAAH,UAAI,EAAc,EAAE,SAAiB;YAArC,iBAOC;YANC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAClB,KAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC1C,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC;aACjB,CAAC,CAAC;YACH,OAAO,IAAI,CAAC;SACb;QAED,+BAAM,GAAN,UAAO,EAAc;YAArB,iBASC;YARC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACjB,IAAM,CAAC,GAAG,KAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBAC/B,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;oBACZ,KAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACvB;gBACD,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;aAChC,CAAC,CAAC;YACH,OAAO,IAAI,CAAC;SACb;;;;gBA7EFC,aAAU;;;gBAFUC,SAAM;;;ICA3B;;QAOE,+BAAuC,MAAc;YAArD,iBAAyD;YAAlB,WAAM,GAAN,MAAM,CAAQ;YAErD,WAAM,GAAa,KAAK,CAAC;YAEzB,aAAQ,GAAY,CAAC,CAAC;YAEtB,WAAM,GAAY,UAAU,CAAC;YAE7B,aAAQ,GAAY,OAAO,CAAC;YAE5B,eAAU,GAAuB,UAAC,EAA6B;oBAA3B,IAAI,UAAA,EAAE,SAAS,eAAA,EAAE,QAAQ,cAAA;gBAC3D,OAAOC,iBAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,KAAI,CAAC,MAAM,EAAE,QAAQ,IAAI,KAAI,CAAC,QAAQ,IAAI,OAAO,CAAC,CAAC;aACjG,CAAA;SAZwD;;;;;gBAF1DF,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;6CAEnBG,SAAM,SAACC,YAAS;;;;QCkD7B,4BAC6B,MAAc,EACjC,KAAqB,EACrB,MAA6B,EAC7B,GAAsB,EACtB,MAAc;YAJK,WAAM,GAAN,MAAM,CAAQ;YACjC,UAAK,GAAL,KAAK,CAAgB;YACrB,WAAM,GAAN,MAAM,CAAuB;YAC7B,QAAG,GAAH,GAAG,CAAmB;YACtB,WAAM,GAAN,MAAM,CAAQ;YA1BhB,cAAS,GAAG,IAAI,CAAC;YACjB,YAAO,GAA+B,EAAE,CAAC;YACzC,WAAM,GAAoBL,uBAAe,CAAC,GAAG,CAAC;YAC9C,cAAS,GAAG,KAAK,CAAC;YAE1B,MAAC,GAAkB,EAAE,CAAC;YACtB,SAAI,GAAG,CAAC,CAAC;YAaU,UAAK,GAAG,IAAIM,eAAY,EAAkB,CAAC;SAQ1D;QAnBJ,sBACI,sCAAM;iBAMV;gBACE,OAAO,IAAI,CAAC,OAAO,CAAC;aACrB;iBATD,UACW,CAAkB;gBAC3B,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;oBAChE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;iBACvB;gBACD,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;aAClB;;;WAAA;;;;QAkBD,kCAAK,GAAL;YACE,IAAI,CAAC,MAAM,GAAGN,uBAAe,CAAC,GAAG,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SACzB;;;;QAKD,oCAAO,GAAP;YACE,IAAI,IAAI,CAAC,MAAM,KAAKA,uBAAe,CAAC,IAAI,EAAE;gBACxC,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;YACD,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SAC3B;;;;QAKD,iCAAI,GAAJ;YACE,IAAI,IAAI,CAAC,MAAM,KAAKA,uBAAe,CAAC,IAAI,EAAE;gBACxC,OAAO;aACR;YACD,IAAI,CAAC,MAAM,GAAGA,uBAAe,CAAC,IAAI,CAAC;YACnC,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACxB;;;;QAKD,kCAAK,GAAL;YACE,IAAI,IAAI,CAAC,MAAM,KAAKA,uBAAe,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAKA,uBAAe,CAAC,KAAK,EAAE;gBACjF,OAAO;aACR;YACD,IAAI,CAAC,MAAM,GAAGA,uBAAe,CAAC,KAAK,CAAC;YACpC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SACzB;;;;QAKD,mCAAM,GAAN;YACE,IAAI,IAAI,CAAC,MAAM,KAAKA,uBAAe,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAKA,uBAAe,CAAC,KAAK,EAAE;gBACjF,OAAO;aACR;YACD,IAAI,CAAC,MAAM,GAAGA,uBAAe,CAAC,GAAG,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;SAC1B;QAEO,sCAAS,GAAT,UAAU,MAA4B;YAC5C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,QAAA,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAK,EAAE,CAAC,CAAC;SACvF;QAEO,iCAAI,GAAJ;YAAA,iBAgCP;YA/BO,IAAA,KAAqB,IAAI,EAAvB,MAAM,YAAA,EAAE,MAAM,YAAS,CAAC;YAChC,IAAM,MAAM,IAAI,IAAI,CAAC,MAAM,iDACtB,IAAI,qBAAqB,CAAC,MAAM,CAAC,GACjC,MAAM,GACN,IAAI,CAAC,MAAM,CACf,CAAC,CAAC;;YAEH,IAAM,GAAG,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,MAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;YACzE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAGA,uBAAe,CAAC,KAAK,GAAGA,uBAAe,CAAC,GAAG,CAAC;YAE1E,IAAI,CAAC,OAAO,EAAE,CAAC;;YAGf,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,MAAM,GAAG,UAAC,KAAiB,EAAE,KAAsB;gBAAzC,sBAAA,EAAA,SAAiB;gBAAE,sBAAA,EAAA,aAAsB;gBAAK,OAAA,OAAO,CAAC,KAAK,CAAC,KAAI,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAAA,CAAC;YAEjG,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;gBAChC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,IAAY;oBACjC,IAAI,IAAI,GAAG,CAAC,EAAE;wBACZ,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;qBAClE;oBAED,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;oBACnB,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC;oBAC3B,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;iBAC3B,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;YAEzC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SACtB;QAEO,oCAAO,GAAP;YACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC;SACb;;;;QAKO,mCAAM,GAAN,UAAO,KAAiB,EAAE,KAAsB;YAAhD,iBAoCP;YApCc,sBAAA,EAAA,SAAiB;YAAE,sBAAA,EAAA,aAAsB;YACtD,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,OAAO;aACR;YAEK,IAAA,KAA8B,IAAI,EAAhC,MAAM,YAAA,EAAE,MAAM,YAAA,EAAE,OAAO,aAAS,CAAC;YACzC,IAAI,CAAC,KAAK,IAAI,MAAM,KAAKA,uBAAe,CAAC,GAAG,EAAE;gBAC5C,OAAO;aACR;YAED,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;YAC7D,IAAI,KAAK,GAAG,CAAC,EAAE;gBACb,KAAK,GAAG,CAAC,CAAC;aACX;YACD,IAAI,CAAC,CAAC,GAAG;gBACP,KAAK,OAAA;gBACL,IAAI,EAAE,MAAM,CAAC,UAAW,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,CAAC,MAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC;aAChG,CAAC;YACF,IAAI,OAAO,MAAM,CAAC,UAAU,KAAK,UAAU,EAAE;gBAC3C,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,IAAK,CAAC,CAAC;aAC/C;YACD,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAEzB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;gBACzC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACd,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;iBAC1B,CAAC,CAAC;aACJ;YAED,IAAI,KAAK,KAAK,CAAC,EAAE;gBACf,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACd,KAAI,CAAC,MAAM,GAAGA,uBAAe,CAAC,IAAI,CAAC;oBACnC,KAAI,CAAC,OAAO,EAAE,CAAC;oBACf,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBACxB,CAAC,CAAC;aACJ;SACF;;;;QAKO,oCAAO,GAAP;YACA,IAAA,KAAwB,IAAI,EAA1B,MAAM,YAAA,EAAE,SAAS,eAAS,CAAC;YACnC,IAAI,IAAI,GAAG,MAAM,CAAC,QAAS,GAAG,IAAI,CAAC;YACnC,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC;YAE5B,IAAI,CAAC,IAAI,IAAI,GAAG,EAAE;gBAChB,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;aACnC;YAED,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC;SACvC;QAED,qCAAQ,GAAR;YACE,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBACvB,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;SACF;QAED,wCAAW,GAAX;YACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;QAED,wCAAW,GAAX,UAAY,OAA6D;YACvE,IAAI,CAAC,OAAO,CAAC,MAAO,CAAC,WAAW,EAAE;gBAChC,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;SACF;;;;gBAlNFO,YAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,wMAKT;oBACD,IAAI,EAAE,EAAE,oBAAoB,EAAE,MAAM,EAAE;oBACtC,aAAa,EAAEC,oBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;iBAChD;;;6CAwBIL,SAAM,SAACC,YAAS;gBAtCZ,cAAc;gBACd,qBAAqB;gBAP5BK,oBAAiB;gBAEjBR,SAAM;;;yBA4BLS,QAAK;yBAULA,QAAK;wBACLC,SAAM;;;;QC3CT;;;;;gBANCC,WAAQ,SAAC;oBACR,OAAO,EAAE,CAACC,mBAAY,CAAC;oBACvB,SAAS,EAAE,CAAC,cAAc,CAAC;oBAC3B,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;iBAC9B;;;ICXD;;;;;;;;;;;;;;;"}