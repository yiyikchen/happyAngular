{"version":3,"file":"ngx-countdown.js","sources":["../../lib/src/interfaces.ts","../../lib/src/countdown.timer.ts","../../lib/src/countdown.config.ts","../../lib/src/countdown.component.ts","../../lib/src/countdown.module.ts","../../lib/src/ngx-countdown.ts"],"sourcesContent":["export type CountdownFormatFn = (opt: CountdownFormatFnOption) => string;\n\nexport interface CountdownFormatFnOption {\n  date: number;\n  formatStr: string;\n  timezone?: string;\n}\n\nexport enum CountdownStatus {\n  ing,\n  pause,\n  stop,\n  done,\n}\n\nexport interface CountdownConfig {\n  /**\n   * Start the counter on demand, must call `begin()` to starting, Default: `false`\n   */\n  demand?: boolean;\n\n  /**\n   * Calculate the remaining time based on the server, e.g: `10`,`5.5`, (Unit: seconds)\n   */\n  leftTime?: number;\n\n  /**\n   * Refers to counting down from local time to end time (Unit: Milliseconds second UNIX timestamp)\n   */\n  stopTime?: number;\n\n  /**\n   * Formats a date value, pls refer to [Accepted patterns](https://angular.io/api/common/DatePipe#usage-notes), Default: `HH:mm:ss`\n   */\n  format?: string;\n\n  /**\n   * Beautify text, generally used to convert formatted time text into HTML\n   */\n  prettyText?: (text: string) => string;\n\n  /**\n   * Should be trigger type `notify` event on the x second. When values is `0` will be trigger every time.\n   */\n  notify?: number[] | number;\n\n  /**\n   * Default based on the implementation of `formatDate` in `@angular/common`\n   *\n   * You can changed to other libs, e.g: [date-fns](https://date-fns.org/v2.0.1/docs/format)\n   */\n  formatDate?: CountdownFormatFn;\n\n  /**\n   * A timezone offset (such as '+0430'), or a standard UTC/GMT.\n   * When not supplied, uses the end-user's local system timezone, Default: `+0000`\n   */\n  timezone?: string;\n}\n\nexport type CountdownEventAction = 'start' | 'stop' | 'restart' | 'pause' | 'resume' | 'notify' | 'done';\n\nexport interface CountdownEvent {\n  action: CountdownEventAction;\n  status: CountdownStatus;\n  left: number;\n  text: string;\n}\n\nexport interface CountdownItem {\n  text?: string;\n  value?: number;\n}\n","import { Injectable, NgZone } from '@angular/core';\n\n@Injectable()\nexport class CountdownTimer {\n  private fns: Array<((count: number) => number | void) | number> = [];\n  private commands: Array<() => void> = [];\n  private nextTime = 0;\n  private ing = false;\n\n  constructor(private ngZone: NgZone) {}\n\n  start(): void {\n    if (this.ing === true) {\n      return;\n    }\n\n    this.ing = true;\n    this.nextTime = +new Date();\n    this.ngZone.runOutsideAngular(() => {\n      this.process();\n    });\n  }\n\n  private process(): void {\n    while (this.commands.length) {\n      this.commands.shift()!();\n    }\n    let diff = +new Date() - this.nextTime;\n    const count = 1 + Math.floor(diff / 100);\n\n    diff = 100 - (diff % 100);\n    this.nextTime += 100 * count;\n\n    for (let i = 0, len = this.fns.length; i < len; i += 2) {\n      let frequency = this.fns[i + 1] as number;\n\n      // 100/s\n      if (0 === frequency) {\n        (this.fns[i] as (count: number) => void)(count);\n        // 1000/s\n      } else {\n        // 先把末位至0，再每次加2\n        frequency += 2 * count - 1;\n\n        const step = Math.floor(frequency / 20);\n        if (step > 0) {\n          (this.fns[i] as (count: number) => void)(step);\n        }\n\n        // 把末位还原成1\n        this.fns[i + 1] = (frequency % 20) + 1;\n      }\n    }\n\n    if (!this.ing) {\n      return;\n    }\n\n    setTimeout(() => this.process(), diff);\n  }\n\n  add(fn: () => void, frequency: number): this {\n    this.commands.push(() => {\n      this.fns.push(fn);\n      this.fns.push(frequency === 1000 ? 1 : 0);\n      this.ing = true;\n    });\n    return this;\n  }\n\n  remove(fn: () => void): this {\n    this.commands.push(() => {\n      const i = this.fns.indexOf(fn);\n      if (i !== -1) {\n        this.fns.splice(i, 2);\n      }\n      this.ing = this.fns.length > 0;\n    });\n    return this;\n  }\n}\n","// tslint:disable: no-inferrable-types\nimport { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { CountdownFormatFn, CountdownConfig } from './interfaces';\n\n@Injectable({ providedIn: 'root' })\nexport class CountdownGlobalConfig implements CountdownConfig {\n  constructor(@Inject(LOCALE_ID) private locale: string) {}\n\n  demand?: boolean = false;\n\n  leftTime?: number = 0;\n\n  format?: string = 'HH:mm:ss';\n\n  timezone?: string = '+0000';\n\n  formatDate?: CountdownFormatFn = ({ date, formatStr, timezone }) => {\n    return formatDate(new Date(date), formatStr, this.locale, timezone || this.timezone || '+0000');\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  OnInit,\n  SimpleChange,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Inject,\n  LOCALE_ID,\n  ChangeDetectorRef,\n  TemplateRef,\n  NgZone,\n} from '@angular/core';\n\nimport { CountdownConfig, CountdownStatus, CountdownEvent, CountdownEventAction, CountdownItem } from './interfaces';\nimport { CountdownTimer } from './countdown.timer';\nimport { CountdownGlobalConfig } from './countdown.config';\n\n@Component({\n  selector: 'countdown',\n  template: `\n    <ng-container *ngIf=\"!render\">\n      <span [innerHTML]=\"i.text\"></span>\n    </ng-container>\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\n  `,\n  host: { '[class.count-down]': 'true' },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CountdownComponent implements OnInit, OnChanges, OnDestroy {\n  private frequency = 1000;\n  private _notify: { [key: number]: boolean } = {};\n  private status: CountdownStatus = CountdownStatus.ing;\n  private isDestroy = false;\n  private _config!: CountdownConfig;\n  i: CountdownItem = {};\n  left = 0;\n\n  @Input()\n  set config(i: CountdownConfig) {\n    if (i.notify != null && !Array.isArray(i.notify) && i.notify > 0) {\n      i.notify = [i.notify];\n    }\n    this._config = i;\n  }\n  get config(): CountdownConfig {\n    return this._config;\n  }\n  @Input() render!: TemplateRef<void>;\n  @Output() readonly event = new EventEmitter<CountdownEvent>();\n\n  constructor(\n    @Inject(LOCALE_ID) private locale: string,\n    private timer: CountdownTimer,\n    private defCog: CountdownGlobalConfig,\n    private cdr: ChangeDetectorRef,\n    private ngZone: NgZone,\n  ) {}\n\n  /**\n   * Start countdown, you must manually call when `demand: false`\n   */\n  begin(): void {\n    this.status = CountdownStatus.ing;\n    this.callEvent('start');\n  }\n\n  /**\n   * Restart countdown\n   */\n  restart(): void {\n    if (this.status !== CountdownStatus.stop) {\n      this.destroy();\n    }\n    this.init();\n    this.callEvent('restart');\n  }\n\n  /**\n   * Stop countdown, must call `restart` when stopped, it's different from pause, unable to recover\n   */\n  stop(): void {\n    if (this.status === CountdownStatus.stop) {\n      return;\n    }\n    this.status = CountdownStatus.stop;\n    this.destroy();\n    this.callEvent('stop');\n  }\n\n  /**\n   * Pause countdown, you can use `resume` to recover again\n   */\n  pause(): void {\n    if (this.status === CountdownStatus.stop || this.status === CountdownStatus.pause) {\n      return;\n    }\n    this.status = CountdownStatus.pause;\n    this.callEvent('pause');\n  }\n\n  /**\n   * Resume countdown\n   */\n  resume(): void {\n    if (this.status === CountdownStatus.stop || this.status !== CountdownStatus.pause) {\n      return;\n    }\n    this.status = CountdownStatus.ing;\n    this.callEvent('resume');\n  }\n\n  private callEvent(action: CountdownEventAction): void {\n    this.event.emit({ action, left: this.left, status: this.status, text: this.i.text! });\n  }\n\n  private init(): void {\n    const { locale, defCog } = this;\n    const config = (this.config = {\n      ...new CountdownGlobalConfig(locale),\n      ...defCog,\n      ...this.config,\n    });\n    // tslint:disable-next-line: no-bitwise\n    const frq = (this.frequency = ~config.format!.indexOf('S') ? 100 : 1000);\n    this.status = config.demand ? CountdownStatus.pause : CountdownStatus.ing;\n\n    this.getLeft();\n\n    // bind reflow to me\n    const _reflow = this.reflow;\n    this.reflow = (count: number = 0, force: boolean = false) => _reflow.apply(this, [count, force]);\n\n    if (Array.isArray(config.notify)) {\n      config.notify.forEach((time: number) => {\n        if (time < 1) {\n          throw new Error(`The notify config must be a positive integer.`);\n        }\n\n        time = time * 1000;\n        time = time - (time % frq);\n        this._notify[time] = true;\n      });\n    }\n\n    this.timer.add(this.reflow, frq).start();\n\n    this.reflow(0, true);\n  }\n\n  private destroy(): this {\n    this.timer.remove(this.reflow);\n    return this;\n  }\n\n  /**\n   * 更新时钟\n   */\n  private reflow(count: number = 0, force: boolean = false): void {\n    if (this.isDestroy) {\n      return;\n    }\n\n    const { status, config, _notify } = this;\n    if (!force && status !== CountdownStatus.ing) {\n      return;\n    }\n\n    let value = (this.left = this.left - this.frequency * count);\n    if (value < 1) {\n      value = 0;\n    }\n    this.i = {\n      value,\n      text: config.formatDate!({ date: value, formatStr: config.format!, timezone: config.timezone }),\n    };\n    if (typeof config.prettyText === 'function') {\n      this.i.text = config.prettyText(this.i.text!);\n    }\n    this.cdr.detectChanges();\n\n    if (config.notify === 0 || _notify[value]) {\n      this.ngZone.run(() => {\n        this.callEvent('notify');\n      });\n    }\n\n    if (value === 0) {\n      this.ngZone.run(() => {\n        this.status = CountdownStatus.done;\n        this.destroy();\n        this.callEvent('done');\n      });\n    }\n  }\n\n  /**\n   * 获取倒计时剩余帧数\n   */\n  private getLeft(): void {\n    const { config, frequency } = this;\n    let left = config.leftTime! * 1000;\n    const end = config.stopTime;\n\n    if (!left && end) {\n      left = end - new Date().getTime();\n    }\n\n    this.left = left - (left % frequency);\n  }\n\n  ngOnInit(): void {\n    this.init();\n    if (!this.config.demand) {\n      this.begin();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroy = true;\n    this.destroy();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (!changes.config!.firstChange) {\n      this.restart();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CountdownComponent } from './countdown.component';\nimport { CountdownTimer } from './countdown.timer';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [CountdownTimer],\n  declarations: [CountdownComponent],\n  exports: [CountdownComponent],\n})\nexport class CountdownModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}