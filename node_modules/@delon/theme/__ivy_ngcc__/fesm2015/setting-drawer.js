import { Component, Input, isDevMode, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, Inject, Optional, NgModule } from '@angular/core';
import { __awaiter, __decorate } from 'tslib';
import { Directionality } from '@angular/cdk/bidi';
import { DOCUMENT, CommonModule } from '@angular/common';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { SettingsService } from '@delon/theme';
import { copy } from '@delon/util/browser';
import { InputBoolean, ZoneOutside } from '@delon/util/decorator';
import { deepCopy, LazyService } from '@delon/util/other';
import { NzMessageService } from 'ng-zorro-antd/message';
import { FormsModule } from '@angular/forms';
import { NzAlertModule } from 'ng-zorro-antd/alert';
import { NzButtonModule } from 'ng-zorro-antd/button';
import { NzDividerModule } from 'ng-zorro-antd/divider';
import { NzDrawerModule } from 'ng-zorro-antd/drawer';
import { NzIconModule } from 'ng-zorro-antd/icon';
import { NzInputModule } from 'ng-zorro-antd/input';
import { NzInputNumberModule } from 'ng-zorro-antd/input-number';
import { NzSwitchModule } from 'ng-zorro-antd/switch';
import { NzTabsModule } from 'ng-zorro-antd/tabs';
import { NzToolTipModule } from 'ng-zorro-antd/tooltip';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'ng-zorro-antd/input';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from 'ng-zorro-antd/input-number';
import * as ɵngcc5 from 'ng-zorro-antd/switch';
import * as ɵngcc6 from 'ng-zorro-antd/drawer';
import * as ɵngcc7 from 'ng-zorro-antd/message';
import * as ɵngcc8 from '@delon/theme';
import * as ɵngcc9 from '@delon/util/other';
import * as ɵngcc10 from '@angular/cdk/bidi';
import * as ɵngcc11 from 'ng-zorro-antd/tooltip';
import * as ɵngcc12 from 'ng-zorro-antd/icon';
import * as ɵngcc13 from 'ng-zorro-antd/core/transition-patch';
import * as ɵngcc14 from 'ng-zorro-antd/divider';
import * as ɵngcc15 from 'ng-zorro-antd/tabs';
import * as ɵngcc16 from 'ng-zorro-antd/button';
import * as ɵngcc17 from 'ng-zorro-antd/core/wave';
import * as ɵngcc18 from 'ng-zorro-antd/alert';

const _c0 = function () { return { standalone: true }; };
function SettingDrawerItemComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "input", 4);
    ɵngcc0.ɵɵlistener("ngModelChange", function SettingDrawerItemComponent_ng_container_5_Template_input_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.i.value = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r0.i.value)("ngModelOptions", ɵngcc0.ɵɵpureFunction0(2, _c0));
} }
function SettingDrawerItemComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "input", 5);
    ɵngcc0.ɵɵlistener("ngModelChange", function SettingDrawerItemComponent_ng_container_6_Template_input_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.i.value = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.i.value)("ngModelOptions", ɵngcc0.ɵɵpureFunction0(2, _c0));
} }
function SettingDrawerItemComponent_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "nz-input-number", 6);
    ɵngcc0.ɵɵlistener("ngModelChange", function SettingDrawerItemComponent_ng_container_7_Template_nz_input_number_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.pxVal = $event; })("ngModelChange", function SettingDrawerItemComponent_ng_container_7_Template_nz_input_number_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.pxChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r2.pxVal)("nzMin", ctx_r2.i.min)("nzMax", ctx_r2.i.max)("nzStep", ctx_r2.i.step || 2)("nzFormatter", ctx_r2.format);
} }
function SettingDrawerItemComponent_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "nz-switch", 7);
    ɵngcc0.ɵɵlistener("ngModelChange", function SettingDrawerItemComponent_ng_container_8_Template_nz_switch_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.i.value = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r3.i.value)("ngModelOptions", ɵngcc0.ɵɵpureFunction0(2, _c0));
} }
function SettingDrawerItemComponent_ng_container_9_ng_template_1_Template(rf, ctx) { }
function SettingDrawerItemComponent_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, SettingDrawerItemComponent_ng_container_9_ng_template_1_Template, 0, 0, "ng-template", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function SettingDrawerComponent_div_1_span_4_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 21);
} }
const _c1 = function (a0) { return { "background-color": a0 }; };
function SettingDrawerComponent_div_1_span_4_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 19);
    ɵngcc0.ɵɵlistener("click", function SettingDrawerComponent_div_1_span_4_Template_span_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const c_r2 = restoredCtx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.changeColor(c_r2.color); });
    ɵngcc0.ɵɵtemplate(1, SettingDrawerComponent_div_1_span_4_i_1_Template, 1, 0, "i", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const c_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleMap(ɵngcc0.ɵɵpureFunction1(4, _c1, c_r2.color));
    ɵngcc0.ɵɵproperty("nzTooltipTitle", c_r2.key);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.color === c_r2.color);
} }
function SettingDrawerComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelementStart(1, "div", 5);
    ɵngcc0.ɵɵelementStart(2, "h3", 6);
    ɵngcc0.ɵɵtext(3, "\u4E3B\u9898\u8272");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, SettingDrawerComponent_div_1_span_4_Template, 2, 6, "span", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "nz-divider");
    ɵngcc0.ɵɵelementStart(6, "div", 8);
    ɵngcc0.ɵɵelementStart(7, "h3", 6);
    ɵngcc0.ɵɵtext(8, "\u8BBE\u7F6E");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "nz-tabset");
    ɵngcc0.ɵɵelementStart(10, "nz-tab", 9);
    ɵngcc0.ɵɵelementStart(11, "div", 8);
    ɵngcc0.ɵɵelement(12, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelement(13, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelement(14, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(15, "nz-tab", 11);
    ɵngcc0.ɵɵelement(16, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelement(17, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelement(18, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelement(19, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(20, "nz-tab", 12);
    ɵngcc0.ɵɵelement(21, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelement(22, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelement(23, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelement(24, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(25, "nz-tab", 13);
    ɵngcc0.ɵɵelement(26, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelement(27, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelement(28, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelement(29, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelement(30, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelement(31, "setting-drawer-item", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(32, "nz-divider");
    ɵngcc0.ɵɵelementStart(33, "div", 8);
    ɵngcc0.ɵɵelementStart(34, "div", 14);
    ɵngcc0.ɵɵtext(35, " \u56FA\u5B9A\u5934\u548C\u4FA7\u8FB9\u680F ");
    ɵngcc0.ɵɵelementStart(36, "nz-switch", 15);
    ɵngcc0.ɵɵlistener("ngModelChange", function SettingDrawerComponent_div_1_Template_nz_switch_ngModelChange_36_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.layout.fixed = $event; })("ngModelChange", function SettingDrawerComponent_div_1_Template_nz_switch_ngModelChange_36_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.setLayout("fixed", ctx_r8.layout.fixed); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(37, "div", 14);
    ɵngcc0.ɵɵtext(38, " \u8272\u5F31\u6A21\u5F0F ");
    ɵngcc0.ɵɵelementStart(39, "nz-switch", 15);
    ɵngcc0.ɵɵlistener("ngModelChange", function SettingDrawerComponent_div_1_Template_nz_switch_ngModelChange_39_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.layout.colorWeak = $event; })("ngModelChange", function SettingDrawerComponent_div_1_Template_nz_switch_ngModelChange_39_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.setLayout("colorWeak", ctx_r10.layout.colorWeak); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(40, "nz-divider");
    ɵngcc0.ɵɵelementStart(41, "button", 16);
    ɵngcc0.ɵɵlistener("click", function SettingDrawerComponent_div_1_Template_button_click_41_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.apply(); });
    ɵngcc0.ɵɵtext(42, "\u9884\u89C8");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(43, "button", 17);
    ɵngcc0.ɵɵlistener("click", function SettingDrawerComponent_div_1_Template_button_click_43_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.reset(); });
    ɵngcc0.ɵɵtext(44, "\u91CD\u7F6E");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(45, "button", 17);
    ɵngcc0.ɵɵlistener("click", function SettingDrawerComponent_div_1_Template_button_click_45_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.copyVar(); });
    ɵngcc0.ɵɵtext(46, "\u62F7\u8D1D");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(47, "nz-alert", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.colors);
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["alain-default-header-hg"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["alain-default-header-bg"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["alain-default-header-padding"]);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["alain-default-aside-wd"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["alain-default-aside-bg"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["alain-default-aside-collapsed-wd"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["alain-default-aside-nav-padding-top-bottom"]);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["alain-default-content-bg"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["alain-default-content-heading-bg"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["alain-default-content-heading-border"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["alain-default-content-padding"]);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["form-state-visual-feedback-enabled"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["preserve-white-spaces-enabled"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["nz-table-img-radius"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["nz-table-img-margin-right"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["nz-table-img-max-width"]);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("data", ctx_r0.data["nz-table-img-max-height"]);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r0.layout.fixed);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r0.layout.colorWeak);
} }
const _c2 = function (a0) { return { "setting-drawer__handle-opened": a0 }; };
class SettingDrawerItemComponent {
    constructor() {
        this.i = {};
        this.pxVal = 0;
        this.format = (value) => `${value} px`;
    }
    set data(val) {
        this.i = val;
        if (val.type === 'px') {
            this.pxVal = +val.value.replace('px', '');
        }
    }
    pxChange(val) {
        this.i.value = `${val}px`;
    }
}
SettingDrawerItemComponent.ɵfac = function SettingDrawerItemComponent_Factory(t) { return new (t || SettingDrawerItemComponent)(); };
SettingDrawerItemComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SettingDrawerItemComponent, selectors: [["setting-drawer-item"]], hostVars: 2, hostBindings: function SettingDrawerItemComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("setting-drawer__body-item", true);
    } }, inputs: { data: "data" }, decls: 10, vars: 7, consts: [[1, "pl-sm", "text-grey"], [3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], ["nz-input", "", "type", "color", 2, "min-width", "88px", 3, "ngModel", "ngModelOptions", "ngModelChange"], ["nz-input", "", 2, "min-width", "88px", 3, "ngModel", "ngModelOptions", "ngModelChange"], [3, "ngModel", "nzMin", "nzMax", "nzStep", "nzFormatter", "ngModelChange"], ["nzSize", "small", 3, "ngModel", "ngModelOptions", "ngModelChange"], ["nzDrawerContent", ""]], template: function SettingDrawerItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "span");
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementStart(2, "span", 0);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 1);
        ɵngcc0.ɵɵtemplate(5, SettingDrawerItemComponent_ng_container_5_Template, 2, 3, "ng-container", 2);
        ɵngcc0.ɵɵtemplate(6, SettingDrawerItemComponent_ng_container_6_Template, 2, 3, "ng-container", 2);
        ɵngcc0.ɵɵtemplate(7, SettingDrawerItemComponent_ng_container_7_Template, 2, 5, "ng-container", 2);
        ɵngcc0.ɵɵtemplate(8, SettingDrawerItemComponent_ng_container_8_Template, 2, 3, "ng-container", 2);
        ɵngcc0.ɵɵtemplate(9, SettingDrawerItemComponent_ng_container_9_Template, 2, 0, "ng-container", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.i.label, " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.i.tip);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitch", ctx.i.type);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "color");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "input");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "px");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "switch");
    } }, directives: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, ɵngcc2.NzInputDirective, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc4.NzInputNumberComponent, ɵngcc5.NzSwitchComponent, ɵngcc6.NzDrawerContentDirective], encapsulation: 2 });
SettingDrawerItemComponent.propDecorators = {
    data: [{ type: Input }]
};

const ALAINDEFAULTVAR = 'alain-default-vars';
const DEFAULT_COLORS = [
    {
        key: 'dust',
        color: '#F5222D'
    },
    {
        key: 'volcano',
        color: '#FA541C'
    },
    {
        key: 'sunset',
        color: '#FAAD14'
    },
    {
        key: 'cyan',
        color: '#13C2C2'
    },
    {
        key: 'green',
        color: '#52C41A'
    },
    {
        key: 'daybreak',
        color: '#1890ff'
    },
    {
        key: 'geekblue',
        color: '#2F54EB'
    },
    {
        key: 'purple',
        color: '#722ED1'
    },
    {
        key: 'black',
        color: '#001529'
    }
];
const DEFAULT_VARS = {
    'primary-color': { label: '主颜色', type: 'color', default: '#1890ff' },
    'alain-default-header-hg': {
        label: '高',
        type: 'px',
        default: '64px',
        max: 300,
        min: 24
    },
    'alain-default-header-bg': {
        label: '背景色',
        type: 'color',
        default: '@primary-color',
        tip: '默认同主色系'
    },
    'alain-default-header-padding': {
        label: '顶部左右内边距',
        type: 'px',
        default: '16px'
    },
    // 侧边栏
    'alain-default-aside-wd': { label: '宽度', type: 'px', default: '200px' },
    'alain-default-aside-bg': {
        label: '背景',
        type: 'color',
        default: '#ffffff'
    },
    'alain-default-aside-collapsed-wd': {
        label: '收缩宽度',
        type: 'px',
        default: '64px'
    },
    'alain-default-aside-nav-padding-top-bottom': {
        label: '项上下内边距',
        type: 'px',
        default: '8px',
        step: 8
    },
    // 主菜单
    'alain-default-aside-nav-fs': {
        label: '菜单字号',
        type: 'px',
        default: '14px',
        min: 14,
        max: 30
    },
    'alain-default-aside-collapsed-nav-fs': {
        label: '收缩菜单字号',
        type: 'px',
        default: '24px',
        min: 24,
        max: 32
    },
    'alain-default-aside-nav-item-height': {
        label: '菜单项高度',
        type: 'px',
        default: '38px',
        min: 24,
        max: 64
    },
    'alain-default-aside-nav-text-color': {
        label: '菜单文本颜色',
        type: 'color',
        default: 'rgba(0, 0, 0, 0.65)',
        rgba: true
    },
    'alain-default-aside-nav-text-hover-color': {
        label: '菜单文本悬停颜色',
        type: 'color',
        default: '@primary-color',
        tip: '默认同主色系'
    },
    'alain-default-aside-nav-group-text-color': {
        label: '菜单分组文本颜色',
        type: 'color',
        default: 'rgba(0, 0, 0, 0.43)',
        rgba: true
    },
    'alain-default-aside-nav-selected-text-color': {
        label: '菜单激活时文本颜色',
        type: 'color',
        default: '@primary-color',
        tip: '默认同主色系'
    },
    'alain-default-aside-nav-selected-bg': {
        label: '菜单激活时背景颜色',
        type: 'color',
        default: '#fcfcfc'
    },
    // 内容
    'alain-default-content-bg': {
        label: '背景色',
        type: 'color',
        default: '#f5f7fa'
    },
    'alain-default-content-heading-bg': {
        label: '标题背景色',
        type: 'color',
        default: '#fafbfc'
    },
    'alain-default-content-heading-border': {
        label: '标题底部边框色',
        type: 'color',
        default: '#efe3e5'
    },
    'alain-default-content-padding': {
        label: '内边距',
        type: 'px',
        default: '24px',
        min: 0,
        max: 128,
        step: 8
    },
    // zorro组件修正
    'form-state-visual-feedback-enabled': {
        label: '开启表单元素的视觉反馈',
        type: 'switch',
        default: true
    },
    'preserve-white-spaces-enabled': {
        label: '开启 preserveWhitespaces',
        type: 'switch',
        default: true
    },
    'nz-table-img-radius': {
        label: '表格中：图片圆角',
        type: 'px',
        default: '4px',
        min: 0,
        max: 128
    },
    'nz-table-img-margin-right': {
        label: '表格中：图片右外边距',
        type: 'px',
        default: '4px',
        min: 0,
        max: 128
    },
    'nz-table-img-max-width': {
        label: '表格中：图片最大宽度',
        type: 'px',
        default: '32px',
        min: 8,
        max: 128
    },
    'nz-table-img-max-height': {
        label: '表格中：图片最大高度',
        type: 'px',
        default: '32px',
        min: 8,
        max: 128
    }
};

class SettingDrawerComponent {
    constructor(cdr, msg, settingSrv, lazy, ngZone, doc, directionality) {
        this.cdr = cdr;
        this.msg = msg;
        this.settingSrv = settingSrv;
        this.lazy = lazy;
        this.ngZone = ngZone;
        this.doc = doc;
        this.directionality = directionality;
        this.autoApplyColor = true;
        this.compilingText = 'Compiling...';
        this.devTips = `When the color can't be switched, you need to run it once: npm run color-less`;
        this.loadedLess = false;
        this.destroy$ = new Subject();
        this.dir = 'ltr';
        this.isDev = isDevMode();
        this.collapse = false;
        this.data = {};
        this.colors = DEFAULT_COLORS;
        this.color = this.cachedData['@primary-color'] || this.DEFAULT_PRIMARY;
        this.resetData(this.cachedData, false);
    }
    get layout() {
        return this.settingSrv.layout;
    }
    get cachedData() {
        return this.settingSrv.layout[ALAINDEFAULTVAR] || {};
    }
    get DEFAULT_PRIMARY() {
        return DEFAULT_VARS['primary-color'].default;
    }
    ngOnInit() {
        var _a;
        this.dir = this.directionality.value;
        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {
            this.dir = direction;
        });
        if (this.autoApplyColor && this.color !== this.DEFAULT_PRIMARY) {
            this.changeColor(this.color);
            this.runLess();
        }
    }
    loadLess() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.loadedLess) {
                return Promise.resolve();
            }
            return this.lazy
                .loadStyle('./assets/color.less', 'stylesheet/less')
                .then(() => {
                const lessConfigNode = this.doc.createElement('script');
                lessConfigNode.innerHTML = `
          window.less = {
            async: true,
            env: 'production',
            javascriptEnabled: true
          };
        `;
                this.doc.body.appendChild(lessConfigNode);
            })
                .then(() => this.lazy.loadScript('https://gw.alipayobjects.com/os/lib/less.js/3.8.1/less.min.js'))
                .then(() => {
                this.loadedLess = true;
            });
        });
    }
    genVars() {
        const { data, color, validKeys } = this;
        const vars = {
            [`@primary-color`]: color
        };
        validKeys.filter(key => key !== 'primary-color').forEach(key => (vars[`@${key}`] = data[key].value));
        this.setLayout(ALAINDEFAULTVAR, vars);
        return vars;
    }
    runLess() {
        const { ngZone, msg, cdr } = this;
        const msgId = msg.loading(this.compilingText, { nzDuration: 0 }).messageId;
        setTimeout(() => {
            this.loadLess().then(() => {
                window.less.modifyVars(this.genVars()).then(() => {
                    msg.success('成功');
                    msg.remove(msgId);
                    ngZone.run(() => cdr.detectChanges());
                });
            });
        }, 200);
    }
    toggle() {
        this.collapse = !this.collapse;
    }
    changeColor(color) {
        this.color = color;
        Object.keys(DEFAULT_VARS)
            .filter(key => DEFAULT_VARS[key].default === '@primary-color')
            .forEach(key => delete this.cachedData[`@${key}`]);
        this.resetData(this.cachedData, false);
    }
    setLayout(name, value) {
        this.settingSrv.setLayout(name, value);
    }
    resetData(nowData, run = true) {
        nowData = nowData || {};
        const data = deepCopy(DEFAULT_VARS);
        Object.keys(data).forEach(key => {
            const value = nowData[`@${key}`] || data[key].default || '';
            data[key].value = value === `@primary-color` ? this.color : value;
        });
        this.data = data;
        if (run) {
            this.cdr.detectChanges();
            this.runLess();
        }
    }
    get validKeys() {
        return Object.keys(this.data).filter(key => this.data[key].value !== this.data[key].default);
    }
    apply() {
        this.runLess();
    }
    reset() {
        this.color = this.DEFAULT_PRIMARY;
        this.settingSrv.setLayout(ALAINDEFAULTVAR, {});
        this.resetData({});
    }
    copyVar() {
        const vars = this.genVars();
        const copyContent = Object.keys(vars)
            .map(key => `${key}: ${vars[key]};`)
            .join('\n');
        copy(copyContent);
        this.msg.success('Copy success');
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
}
SettingDrawerComponent.ɵfac = function SettingDrawerComponent_Factory(t) { return new (t || SettingDrawerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NzMessageService), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.SettingsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.LazyService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.Directionality, 8)); };
SettingDrawerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SettingDrawerComponent, selectors: [["setting-drawer"]], hostVars: 4, hostBindings: function SettingDrawerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("setting-drawer", true)("setting-drawer-rtl", ctx.dir === "rtl");
    } }, inputs: { autoApplyColor: "autoApplyColor", compilingText: "compilingText", devTips: "devTips" }, decls: 4, vars: 8, consts: [[3, "nzVisible", "nzPlacement", "nzWidth", "nzOnClose"], ["class", "setting-drawer__content", 4, "nzDrawerContent"], ["nz-tooltip", "", 1, "setting-drawer__handle", 3, "ngClass", "nzTooltipTitle", "click"], ["nz-icon", "", 1, "setting-drawer__handle-icon", 3, "nzType"], [1, "setting-drawer__content"], [1, "setting-drawer__body", "setting-drawer__theme"], [1, "setting-drawer__title"], ["nz-tooltip", "", "class", "setting-drawer__theme-tag", 3, "style", "nzTooltipTitle", "click", 4, "ngFor", "ngForOf"], [1, "setting-drawer__body"], ["nzTitle", "\u9876\u90E8"], [3, "data"], ["nzTitle", "\u4FA7\u8FB9\u680F"], ["nzTitle", "\u5185\u5BB9"], ["nzTitle", "\u5176\u5B83"], [1, "setting-drawer__body-item"], ["nzSize", "small", 3, "ngModel", "ngModelChange"], ["type", "button", "nz-button", "", "nzType", "primary", 3, "click"], ["type", "button", "nz-button", "", 3, "click"], ["nzType", "warning", "nzMessage", "\u914D\u7F6E\u680F\u53EA\u5728\u5F00\u53D1\u73AF\u5883\u7528\u4E8E\u9884\u89C8\uFF0C\u751F\u4EA7\u73AF\u5883\u4E0D\u4F1A\u5C55\u73B0\uFF0C\u8BF7\u62F7\u8D1D\u540E\u624B\u52A8\u4FEE\u6539\u53C2\u6570\u914D\u7F6E\u6587\u4EF6 src/styles/theme.less", 1, "mt-md"], ["nz-tooltip", "", 1, "setting-drawer__theme-tag", 3, "nzTooltipTitle", "click"], ["nz-icon", "", "nzType", "check", 4, "ngIf"], ["nz-icon", "", "nzType", "check"]], template: function SettingDrawerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "nz-drawer", 0);
        ɵngcc0.ɵɵlistener("nzOnClose", function SettingDrawerComponent_Template_nz_drawer_nzOnClose_0_listener() { return ctx.toggle(); });
        ɵngcc0.ɵɵtemplate(1, SettingDrawerComponent_div_1_Template, 48, 20, "div", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵlistener("click", function SettingDrawerComponent_Template_div_click_2_listener() { return ctx.toggle(); });
        ɵngcc0.ɵɵelement(3, "i", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("nzVisible", ctx.collapse)("nzPlacement", ctx.dir === "rtl" ? "left" : "right")("nzWidth", 500);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c2, ctx.collapse))("nzTooltipTitle", ctx.isDev ? ctx.devTips : null);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("nzType", !ctx.collapse ? "setting" : "close");
    } }, directives: [ɵngcc6.NzDrawerComponent, ɵngcc6.NzDrawerContentDirective, ɵngcc11.NzTooltipDirective, ɵngcc1.NgClass, ɵngcc12.NzIconDirective, ɵngcc13.ɵNzTransitionPatchDirective, ɵngcc1.NgForOf, ɵngcc14.NzDividerComponent, ɵngcc15.NzTabSetComponent, ɵngcc15.NzTabComponent, SettingDrawerItemComponent, ɵngcc5.NzSwitchComponent, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc16.NzButtonComponent, ɵngcc17.NzWaveDirective, ɵngcc18.NzAlertComponent, ɵngcc1.NgIf], encapsulation: 2, changeDetection: 0 });
SettingDrawerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: NzMessageService },
    { type: SettingsService },
    { type: LazyService },
    { type: NgZone },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
    { type: Directionality, decorators: [{ type: Optional }] }
];
SettingDrawerComponent.propDecorators = {
    autoApplyColor: [{ type: Input }],
    compilingText: [{ type: Input }],
    devTips: [{ type: Input }]
};
__decorate([
    InputBoolean()
], SettingDrawerComponent.prototype, "autoApplyColor", void 0);
__decorate([
    ZoneOutside()
], SettingDrawerComponent.prototype, "loadLess", null);
__decorate([
    ZoneOutside()
], SettingDrawerComponent.prototype, "runLess", null);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SettingDrawerItemComponent, [{
        type: Component,
        args: [{
                selector: 'setting-drawer-item',
                template: "<span>\n  {{ i.label }}\n  <span class=\"pl-sm text-grey\">{{ i.tip }}</span>\n</span>\n<div [ngSwitch]=\"i.type\">\n  <ng-container *ngSwitchCase=\"'color'\">\n    <input\n      nz-input\n      type=\"color\"\n      style=\"min-width: 88px\"\n      [(ngModel)]=\"i.value\"\n      [ngModelOptions]=\"{ standalone: true }\"\n    />\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'input'\">\n    <input nz-input style=\"min-width: 88px\" [(ngModel)]=\"i.value\" [ngModelOptions]=\"{ standalone: true }\" />\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'px'\">\n    <nz-input-number\n      [(ngModel)]=\"pxVal\"\n      (ngModelChange)=\"pxChange($event)\"\n      [nzMin]=\"i.min\"\n      [nzMax]=\"i.max\"\n      [nzStep]=\"i.step || 2\"\n      [nzFormatter]=\"format\"\n    ></nz-input-number>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'switch'\">\n    <nz-switch nzSize=\"small\" [(ngModel)]=\"i.value\" [ngModelOptions]=\"{ standalone: true }\"></nz-switch>\n  </ng-container>\n  <ng-container *ngSwitchDefault>\n    <ng-template nzDrawerContent></ng-template>\n  </ng-container>\n</div>\n",
                host: {
                    '[class.setting-drawer__body-item]': 'true'
                }
            }]
    }], function () { return []; }, { data: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SettingDrawerComponent, [{
        type: Component,
        args: [{
                selector: 'setting-drawer',
                template: "<nz-drawer\n  [nzVisible]=\"collapse\"\n  [nzPlacement]=\"dir === 'rtl' ? 'left' : 'right'\"\n  [nzWidth]=\"500\"\n  (nzOnClose)=\"toggle()\"\n>\n  <div *nzDrawerContent class=\"setting-drawer__content\">\n    <div class=\"setting-drawer__body setting-drawer__theme\">\n      <h3 class=\"setting-drawer__title\">\u4E3B\u9898\u8272</h3>\n      <span\n        *ngFor=\"let c of colors\"\n        [style]=\"{ 'background-color': c.color }\"\n        (click)=\"changeColor(c.color)\"\n        nz-tooltip\n        [nzTooltipTitle]=\"c.key\"\n        class=\"setting-drawer__theme-tag\"\n      >\n        <i *ngIf=\"color === c.color\" nz-icon nzType=\"check\"></i>\n      </span>\n    </div>\n    <nz-divider></nz-divider>\n    <div class=\"setting-drawer__body\">\n      <h3 class=\"setting-drawer__title\">\u8BBE\u7F6E</h3>\n      <nz-tabset>\n        <nz-tab nzTitle=\"\u9876\u90E8\">\n          <div class=\"setting-drawer__body\">\n            <setting-drawer-item [data]=\"data['alain-default-header-hg']\"></setting-drawer-item>\n            <setting-drawer-item [data]=\"data['alain-default-header-bg']\"></setting-drawer-item>\n            <setting-drawer-item [data]=\"data['alain-default-header-padding']\"></setting-drawer-item>\n          </div>\n        </nz-tab>\n        <nz-tab nzTitle=\"\u4FA7\u8FB9\u680F\">\n          <setting-drawer-item [data]=\"data['alain-default-aside-wd']\"></setting-drawer-item>\n          <setting-drawer-item [data]=\"data['alain-default-aside-bg']\"></setting-drawer-item>\n          <setting-drawer-item [data]=\"data['alain-default-aside-collapsed-wd']\"></setting-drawer-item>\n          <setting-drawer-item [data]=\"data['alain-default-aside-nav-padding-top-bottom']\"></setting-drawer-item>\n        </nz-tab>\n        <nz-tab nzTitle=\"\u5185\u5BB9\">\n          <setting-drawer-item [data]=\"data['alain-default-content-bg']\"></setting-drawer-item>\n          <setting-drawer-item [data]=\"data['alain-default-content-heading-bg']\"></setting-drawer-item>\n          <setting-drawer-item [data]=\"data['alain-default-content-heading-border']\"></setting-drawer-item>\n          <setting-drawer-item [data]=\"data['alain-default-content-padding']\"></setting-drawer-item>\n        </nz-tab>\n        <nz-tab nzTitle=\"\u5176\u5B83\">\n          <setting-drawer-item [data]=\"data['form-state-visual-feedback-enabled']\"></setting-drawer-item>\n          <setting-drawer-item [data]=\"data['preserve-white-spaces-enabled']\"></setting-drawer-item>\n          <setting-drawer-item [data]=\"data['nz-table-img-radius']\"></setting-drawer-item>\n          <setting-drawer-item [data]=\"data['nz-table-img-margin-right']\"></setting-drawer-item>\n          <setting-drawer-item [data]=\"data['nz-table-img-max-width']\"></setting-drawer-item>\n          <setting-drawer-item [data]=\"data['nz-table-img-max-height']\"></setting-drawer-item>\n        </nz-tab>\n      </nz-tabset>\n    </div>\n    <nz-divider></nz-divider>\n    <div class=\"setting-drawer__body\">\n      <div class=\"setting-drawer__body-item\">\n        \u56FA\u5B9A\u5934\u548C\u4FA7\u8FB9\u680F\n        <nz-switch\n          nzSize=\"small\"\n          [(ngModel)]=\"layout.fixed\"\n          (ngModelChange)=\"setLayout('fixed', layout.fixed)\"\n        ></nz-switch>\n      </div>\n      <div class=\"setting-drawer__body-item\">\n        \u8272\u5F31\u6A21\u5F0F\n        <nz-switch\n          nzSize=\"small\"\n          [(ngModel)]=\"layout.colorWeak\"\n          (ngModelChange)=\"setLayout('colorWeak', layout.colorWeak)\"\n        ></nz-switch>\n      </div>\n    </div>\n    <nz-divider></nz-divider>\n    <button (click)=\"apply()\" type=\"button\" nz-button nzType=\"primary\">\u9884\u89C8</button>\n    <button (click)=\"reset()\" type=\"button\" nz-button>\u91CD\u7F6E</button>\n    <button (click)=\"copyVar()\" type=\"button\" nz-button>\u62F7\u8D1D</button>\n    <nz-alert\n      class=\"mt-md\"\n      nzType=\"warning\"\n      nzMessage=\"\u914D\u7F6E\u680F\u53EA\u5728\u5F00\u53D1\u73AF\u5883\u7528\u4E8E\u9884\u89C8\uFF0C\u751F\u4EA7\u73AF\u5883\u4E0D\u4F1A\u5C55\u73B0\uFF0C\u8BF7\u62F7\u8D1D\u540E\u624B\u52A8\u4FEE\u6539\u53C2\u6570\u914D\u7F6E\u6587\u4EF6 src/styles/theme.less\"\n    ></nz-alert>\n  </div>\n</nz-drawer>\n<div\n  class=\"setting-drawer__handle\"\n  [ngClass]=\"{ 'setting-drawer__handle-opened': collapse }\"\n  (click)=\"toggle()\"\n  nz-tooltip\n  [nzTooltipTitle]=\"isDev ? devTips : null\"\n>\n  <i nz-icon [nzType]=\"!collapse ? 'setting' : 'close'\" class=\"setting-drawer__handle-icon\"></i>\n</div>\n",
                host: {
                    '[class.setting-drawer]': 'true',
                    '[class.setting-drawer-rtl]': `dir === 'rtl'`
                },
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc7.NzMessageService }, { type: ɵngcc8.SettingsService }, { type: ɵngcc9.LazyService }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{
                type: Inject,
                args: [DOCUMENT]
            }] }, { type: ɵngcc10.Directionality, decorators: [{
                type: Optional
            }] }]; }, { autoApplyColor: [{
            type: Input
        }], compilingText: [{
            type: Input
        }], devTips: [{
            type: Input
        }] }); })();

const COMPONENTS = [SettingDrawerItemComponent, SettingDrawerComponent];
class SettingDrawerModule {
}
SettingDrawerModule.ɵfac = function SettingDrawerModule_Factory(t) { return new (t || SettingDrawerModule)(); };
SettingDrawerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SettingDrawerModule });
SettingDrawerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule,
            FormsModule,
            NzDrawerModule,
            NzToolTipModule,
            NzDividerModule,
            NzTabsModule,
            NzSwitchModule,
            NzAlertModule,
            NzIconModule,
            NzInputModule,
            NzInputNumberModule,
            NzButtonModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SettingDrawerModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    NzDrawerModule,
                    NzToolTipModule,
                    NzDividerModule,
                    NzTabsModule,
                    NzSwitchModule,
                    NzAlertModule,
                    NzIconModule,
                    NzInputModule,
                    NzInputNumberModule,
                    NzButtonModule
                ],
                declarations: COMPONENTS,
                exports: COMPONENTS
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SettingDrawerModule, { declarations: function () { return [SettingDrawerItemComponent, SettingDrawerComponent]; }, imports: function () { return [CommonModule,
        FormsModule,
        NzDrawerModule,
        NzToolTipModule,
        NzDividerModule,
        NzTabsModule,
        NzSwitchModule,
        NzAlertModule,
        NzIconModule,
        NzInputModule,
        NzInputNumberModule,
        NzButtonModule]; }, exports: function () { return [SettingDrawerItemComponent, SettingDrawerComponent]; } }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { SettingDrawerComponent, SettingDrawerItemComponent, SettingDrawerModule };

//# sourceMappingURL=setting-drawer.js.map