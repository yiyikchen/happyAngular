import { Direction, Directionality } from '@angular/cdk/bidi';
import { ChangeDetectorRef, EventEmitter, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { Router } from '@angular/router';
import { Menu, MenuInner, MenuService, SettingsService } from '@delon/theme';
import { BooleanInput, NumberInput } from '@delon/util/decorator';
import type { NzSafeAny } from 'ng-zorro-antd/core/types';
import * as ɵngcc0 from '@angular/core';
export interface Nav extends MenuInner {
    _needIcon?: boolean;
    _text?: SafeHtml;
}
export declare class LayoutDefaultNavComponent implements OnInit, OnDestroy {
    private menuSrv;
    private settings;
    private router;
    private render;
    private cdr;
    private ngZone;
    private sanitizer;
    private doc;
    private win;
    private directionality;
    static ngAcceptInputType_disabledAcl: BooleanInput;
    static ngAcceptInputType_autoCloseUnderPad: BooleanInput;
    static ngAcceptInputType_recursivePath: BooleanInput;
    static ngAcceptInputType_openStrictly: BooleanInput;
    static ngAcceptInputType_maxLevelIcon: NumberInput;
    private bodyEl;
    private destroy$;
    private floatingEl;
    dir: Direction;
    list: Nav[];
    disabledAcl: boolean;
    autoCloseUnderPad: boolean;
    recursivePath: boolean;
    openStrictly: boolean;
    maxLevelIcon: number;
    readonly select: EventEmitter<Menu>;
    get collapsed(): boolean;
    constructor(menuSrv: MenuService, settings: SettingsService, router: Router, render: Renderer2, cdr: ChangeDetectorRef, ngZone: NgZone, sanitizer: DomSanitizer, doc: NzSafeAny, win: NzSafeAny, directionality: Directionality);
    private getLinkNode;
    private floatingClickHandle;
    private clearFloating;
    private genFloating;
    private genSubNode;
    private hideAll;
    private calPos;
    showSubMenu(e: MouseEvent, item: Nav): void;
    to(item: Menu): void;
    toggleOpen(item: Nav): void;
    _click(): void;
    _docClick(): void;
    private openedByUrl;
    ngOnInit(): void;
    ngOnDestroy(): void;
    private get isPad();
    private underPad;
    private openAside;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<LayoutDefaultNavComponent, [null, null, null, null, null, null, null, null, null, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<LayoutDefaultNavComponent, "layout-default-nav", never, { "disabledAcl": "disabledAcl"; "autoCloseUnderPad": "autoCloseUnderPad"; "recursivePath": "recursivePath"; "openStrictly": "openStrictly"; "maxLevelIcon": "maxLevelIcon"; }, { "select": "select"; }, never, never>;
}

//# sourceMappingURL=layout-nav.component.d.ts.map