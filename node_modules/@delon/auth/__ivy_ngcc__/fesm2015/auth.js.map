{"version":3,"file":"auth.js","sources":["../../../../packages/auth/src/auth.config.ts","../../../../packages/auth/src/store/local-storage.service.ts","../../../../packages/auth/src/store/interface.ts","../../../../packages/auth/src/token/token.service.ts","../../../../packages/auth/src/token/interface.ts","../../../../packages/auth/src/social/social.service.ts","../../../../packages/auth/src/store/memory.service.ts","../../../../packages/auth/src/store/session-storage.service.ts","../../../../packages/auth/src/store/cookie-storage.service.ts","../../../../packages/auth/src/token/helper.ts","../../../../packages/auth/src/token/base.interceptor.ts","../../../../packages/auth/src/token/jwt/jwt.helper.ts","../../../../packages/auth/src/token/jwt/jwt.model.ts","../../../../packages/auth/src/token/jwt/jwt.interceptor.ts","../../../../packages/auth/src/token/jwt/jwt.guard.ts","../../../../packages/auth/src/token/simple/simple.model.ts","../../../../packages/auth/src/token/simple/simple.interceptor.ts","../../../../packages/auth/src/token/simple/simple.guard.ts","../../../../packages/auth/src/auth.module.ts","../../../../packages/auth/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import { AlainAuthConfig, AlainConfigService } from '@delon/util/config';\n\nexport const AUTH_DEFAULT_CONFIG: AlainAuthConfig = {\n  store_key: `_token`,\n  token_invalid_redirect: true,\n  token_exp_offset: 10,\n  token_send_key: `token`,\n  token_send_template: '${token}',\n  token_send_place: 'header',\n  login_url: '/login',\n  ignores: [/\\/login/, /assets\\//, /passport\\//],\n  allow_anonymous_key: `_allow_anonymous`,\n  executeOtherInterceptors: true,\n  refreshTime: 3000,\n  refreshOffset: 6000\n};\n\nexport function mergeConfig(srv: AlainConfigService): AlainAuthConfig {\n  return srv.merge('auth', AUTH_DEFAULT_CONFIG)!;\n}\n","import { ITokenModel } from '../token/interface';\nimport { IStore } from './interface';\n\nexport function DA_STORE_TOKEN_LOCAL_FACTORY(): IStore {\n  return new LocalStorageStore();\n}\n\n/**\n * `localStorage` storage, **not lost after closing the browser**.\n *\n * ```ts\n * // global-config.module.ts\n * { provide: DA_STORE_TOKEN, useClass: LocalStorageStore }\n * ```\n */\nexport class LocalStorageStore implements IStore {\n  get(key: string): ITokenModel {\n    return JSON.parse(localStorage.getItem(key) || '{}') || {};\n  }\n\n  set(key: string, value: ITokenModel | null): boolean {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  }\n\n  remove(key: string): void {\n    localStorage.removeItem(key);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { ITokenModel } from '../token/interface';\nimport { DA_STORE_TOKEN_LOCAL_FACTORY } from './local-storage.service';\n\nexport const DA_STORE_TOKEN = new InjectionToken<IStore>('AUTH_STORE_TOKEN', {\n  providedIn: 'root',\n  factory: DA_STORE_TOKEN_LOCAL_FACTORY\n});\n\nexport interface IStore {\n  get(key: string): ITokenModel;\n\n  set(key: string, value: ITokenModel): boolean;\n\n  remove(key: string): void;\n}\n","import { inject, Inject, Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, interval, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, map, share } from 'rxjs/operators';\n\nimport { AlainAuthConfig, AlainConfigService } from '@delon/util/config';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { mergeConfig } from '../auth.config';\nimport { DA_STORE_TOKEN, IStore } from '../store/interface';\nimport { AuthReferrer, ITokenModel, ITokenService } from './interface';\n\nexport function DA_SERVICE_TOKEN_FACTORY(): ITokenService {\n  return new TokenService(inject(AlainConfigService), inject(DA_STORE_TOKEN));\n}\n\n/**\n * 维护Token信息服务，[在线文档](https://ng-alain.com/auth)\n */\n@Injectable()\nexport class TokenService implements ITokenService, OnDestroy {\n  private refresh$ = new Subject<ITokenModel>();\n  private change$ = new BehaviorSubject<ITokenModel | null>(null);\n  private interval$: Subscription;\n  private _referrer: AuthReferrer = {};\n  private _options: AlainAuthConfig;\n\n  constructor(configSrv: AlainConfigService, @Inject(DA_STORE_TOKEN) private store: IStore) {\n    this._options = mergeConfig(configSrv);\n  }\n\n  get refresh(): Observable<ITokenModel> {\n    this.builderRefresh();\n    return this.refresh$.pipe(share());\n  }\n\n  get login_url(): string | undefined {\n    return this._options.login_url;\n  }\n\n  get referrer(): AuthReferrer {\n    return this._referrer;\n  }\n\n  get options(): AlainAuthConfig {\n    return this._options;\n  }\n\n  set(data: ITokenModel): boolean {\n    this.change$.next(data);\n    return this.store.set(this._options.store_key!, data);\n  }\n\n  get(type?: NzSafeAny): NzSafeAny;\n  get<T extends ITokenModel>(type?: new () => T): T {\n    const data = this.store.get(this._options.store_key!);\n    return type ? (Object.assign(new type(), data) as T) : (data as T);\n  }\n\n  clear(options: { onlyToken: boolean } = { onlyToken: false }): void {\n    let data: ITokenModel | null = null;\n    if (options.onlyToken === true) {\n      data = this.get() as ITokenModel;\n      data.token = ``;\n      this.set(data);\n    } else {\n      this.store.remove(this._options.store_key!);\n    }\n    this.change$.next(data);\n  }\n\n  change(): Observable<ITokenModel | null> {\n    return this.change$.pipe(share());\n  }\n\n  private builderRefresh(): void {\n    const { refreshTime, refreshOffset } = this._options;\n    this.cleanRefresh();\n    this.interval$ = interval(refreshTime)\n      .pipe(\n        map(() => {\n          const item = this.get() as ITokenModel;\n          const expired = item.expired || item.exp || 0;\n          if (expired <= 0) {\n            return null;\n          }\n\n          const curTime = new Date().valueOf() + refreshOffset!;\n          return expired <= curTime ? item : null;\n        }),\n        filter(v => v != null)\n      )\n      .subscribe(res => this.refresh$.next(res!));\n  }\n\n  private cleanRefresh(): void {\n    if (this.interval$ && !this.interval$.closed) {\n      this.interval$.unsubscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.cleanRefresh();\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AlainAuthConfig } from '@delon/util/config';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { DA_SERVICE_TOKEN_FACTORY } from './token.service';\n\nexport const DA_SERVICE_TOKEN = new InjectionToken<ITokenService>('DA_SERVICE_TOKEN', {\n  providedIn: 'root',\n  factory: DA_SERVICE_TOKEN_FACTORY\n});\n\nexport interface ITokenModel {\n  [key: string]: NzSafeAny;\n\n  token: string | null | undefined;\n\n  /**\n   * 过期时间，单位：ms\n   * - 不管Simple、JWT模式都必须指定\n   */\n  expired?: number;\n}\n\nexport interface AuthReferrer {\n  url?: string | null | undefined;\n}\n\nexport interface ITokenService {\n  /**\n   * 授权失败后跳转路由路径（支持外部链接地址），通过设置[全局配置](https://ng-alain.com/docs/global-config)来改变\n   */\n  readonly login_url: string | undefined;\n\n  /**\n   * 当前请求页面的来源页面的地址\n   */\n  readonly referrer?: AuthReferrer;\n\n  readonly options: AlainAuthConfig;\n\n  /**\n   * 订阅刷新，订阅时会自动产生一个定时器，每隔一段时间进行一些校验\n   * - **注意** 会多次触发，请务必做好业务判断\n   */\n  readonly refresh: Observable<ITokenModel>;\n\n  /**\n   * 设置 Token 信息，当用户 Token 发生变动时都需要调用此方法重新刷新\n   * - 如果需要监听过期，需要传递 `expired` 值\n   */\n  set(data: ITokenModel | null): boolean;\n\n  /**\n   * 获取Token，形式包括：\n   * - `get()` 获取 Simple Token\n   * - `get<JWTTokenModel>(JWTTokenModel)` 获取 JWT Token\n   */\n  get(type?: NzSafeAny): ITokenModel | null;\n\n  /**\n   * 获取Token，形式包括：\n   * - `get()` 获取 Simple Token\n   * - `get<JWTTokenModel>(JWTTokenModel)` 获取 JWT Token\n   */\n  get<T extends ITokenModel>(type?: NzSafeAny): T;\n\n  /**\n   * 清除 Token 信息，当用户退出登录时调用。\n   * ```\n   * // 清除所有 Token 信息\n   * tokenService.clear();\n   * // 只清除 token 字段\n   * tokenService.clear({ onlyToken: true });\n   * ```\n   */\n  clear(options?: { onlyToken: boolean }): void;\n\n  /**\n   * 订阅 Token 对象变更通知\n   */\n  change(): Observable<ITokenModel | null>;\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Observer } from 'rxjs';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { DA_SERVICE_TOKEN, ITokenModel, ITokenService } from '../token/interface';\n\nconst OPENTYPE = '_delonAuthSocialType';\nconst HREFCALLBACK = '_delonAuthSocialCallbackByHref';\n\nexport type SocialOpenType = 'href' | 'window';\n\n@Injectable()\nexport class SocialService implements OnDestroy {\n  private _win: Window | null;\n  private _winTime: NzSafeAny;\n  private observer: Observer<ITokenModel | null>;\n\n  constructor(\n    @Inject(DA_SERVICE_TOKEN) private tokenService: ITokenService,\n    @Inject(DOCUMENT) private doc: NzSafeAny,\n    private router: Router\n  ) {}\n\n  /**\n   * 使用窗体打开授权页，返回值是 `Observable<ITokenModel>` 用于订阅授权后返回的结果\n   *\n   * @param url 获取授权地址\n   * @param callback 回调路由地址\n   * @param options.windowFeatures 等同 `window.open` 的 `features` 参数值\n   */\n  login(\n    url: string,\n    callback?: string,\n    options?: {\n      type?: 'window';\n      windowFeatures?: string;\n    }\n  ): Observable<ITokenModel>;\n\n  /**\n   * 跳转至授权页\n   *\n   * @param url 获取授权地址\n   * @param callback 回调路由地址\n   */\n  login(\n    url: string,\n    callback?: string,\n    options?: {\n      type?: 'href';\n    }\n  ): void;\n\n  /**\n   * 跳转至登录页，若为 `type=window` 时，返回值是 `Observable<ITokenModel>`\n   *\n   * @param url 获取授权地址\n   * @param callback 当 `type=href` 成功时的回调路由地址\n   * @param options.type 打开方式，默认 `window`\n   * @param options.windowFeatures 等同 `window.open` 的 `features` 参数值\n   */\n  login(\n    url: string,\n    callback: string = '/',\n    options: {\n      type?: SocialOpenType;\n      windowFeatures?: string;\n    } = {}\n  ): Observable<ITokenModel | null> | void {\n    options = {\n      type: 'window',\n      windowFeatures: 'location=yes,height=570,width=520,scrollbars=yes,status=yes',\n      ...options\n    };\n    localStorage.setItem(OPENTYPE, options.type!);\n    localStorage.setItem(HREFCALLBACK, callback);\n    if (options.type === 'href') {\n      this.doc.location.href = url;\n      return;\n    }\n\n    this._win = window.open(url, '_blank', options.windowFeatures);\n    this._winTime = setInterval(() => {\n      if (this._win && this._win.closed) {\n        this.ngOnDestroy();\n\n        let model = this.tokenService.get();\n        if (model && !model.token) model = null;\n\n        // 触发变更通知\n        if (model) {\n          this.tokenService.set(model);\n        }\n\n        this.observer.next(model);\n        this.observer.complete();\n      }\n    }, 100);\n    return new Observable((observer: Observer<ITokenModel | null>) => {\n      this.observer = observer;\n    });\n  }\n\n  /**\n   * 授权成功后的回调处理\n   *\n   * @param rawData 指定回调认证信息，为空时从根据当前URL解析\n   */\n  callback(rawData?: ITokenModel | string | null): ITokenModel {\n    // from uri\n    if (!rawData && this.router.url.indexOf('?') === -1) {\n      throw new Error(`url muse contain a ?`);\n    }\n    // parse\n    let data: ITokenModel = { token: `` };\n    if (typeof rawData === 'string') {\n      const rightUrl = rawData.split('?')[1].split('#')[0];\n      data = this.router.parseUrl(`./?${rightUrl}`).queryParams as ITokenModel;\n    } else {\n      data = rawData as ITokenModel;\n    }\n\n    if (!data || !data.token) throw new Error(`invalide token data`);\n    this.tokenService.set(data);\n\n    const url = localStorage.getItem(HREFCALLBACK) || '/';\n    localStorage.removeItem(HREFCALLBACK);\n    const type = localStorage.getItem(OPENTYPE);\n    localStorage.removeItem(OPENTYPE);\n    if (type === 'window') {\n      window.close();\n    } else {\n      this.router.navigateByUrl(url);\n    }\n\n    return data;\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this._winTime);\n    this._winTime = null;\n  }\n}\n","import { ITokenModel } from '../token/interface';\nimport { IStore } from './interface';\n\n/**\n * 内存存储，关掉浏览器标签后**丢失**。\n *\n * ```ts\n * // global-config.module.ts\n * { provide: DA_STORE_TOKEN, useClass: MemoryStore }\n * ```\n */\nexport class MemoryStore implements IStore {\n  private cache: { [key: string]: ITokenModel | null } = {};\n\n  get(key: string): ITokenModel {\n    return this.cache[key] || ({} as ITokenModel);\n  }\n\n  set(key: string, value: ITokenModel): boolean {\n    this.cache[key] = value;\n    return true;\n  }\n\n  remove(key: string): void {\n    this.cache[key] = null;\n  }\n}\n","import { ITokenModel } from '../token/interface';\nimport { IStore } from './interface';\n\n/**\n * `sessionStorage` storage, **lost after closing the browser**.\n *\n * ```ts\n * // global-config.module.ts\n * { provide: DA_STORE_TOKEN, useClass: SessionStorageStore }\n * ```\n */\nexport class SessionStorageStore implements IStore {\n  get(key: string): ITokenModel {\n    return JSON.parse(sessionStorage.getItem(key) || '{}') || {};\n  }\n\n  set(key: string, value: ITokenModel | null): boolean {\n    sessionStorage.setItem(key, JSON.stringify(value));\n    return true;\n  }\n\n  remove(key: string): void {\n    sessionStorage.removeItem(key);\n  }\n}\n","import { CookieService } from '@delon/util/browser';\n\nimport { ITokenModel } from '../token/interface';\nimport { IStore } from './interface';\n\n/**\n * `cookie` storage\n *\n * ```ts\n * // global-config.module.ts\n * { provide: DA_STORE_TOKEN, useClass: CookieStorageStore, deps: [CookieService] }\n * ```\n */\nexport class CookieStorageStore implements IStore {\n  constructor(private srv: CookieService) {}\n\n  get(key: string): ITokenModel {\n    return JSON.parse(this.srv.get(key) || '{}') || {};\n  }\n\n  set(key: string, value: ITokenModel | null | undefined): boolean {\n    this.srv.put(key, value != null ? JSON.stringify(value) : '{}');\n    return true;\n  }\n\n  remove(key: string): void {\n    this.srv.remove(key);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Injector } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AlainAuthConfig } from '@delon/util/config';\n\nimport { DA_SERVICE_TOKEN, ITokenService } from './interface';\nimport { JWTTokenModel } from './jwt/jwt.model';\nimport { SimpleTokenModel } from './simple/simple.model';\n\nexport function CheckSimple(model: SimpleTokenModel | null): boolean {\n  return model != null && typeof model.token === 'string' && model.token.length > 0;\n}\n\nexport function CheckJwt(model: JWTTokenModel, offset: number): boolean {\n  try {\n    return model != null && !!model.token && !model.isExpired(offset);\n  } catch (err) {\n    console.warn(`${err.message}, jump to login_url`);\n    return false;\n  }\n}\n\nexport function ToLogin(options: AlainAuthConfig, injector: Injector, url?: string): void {\n  const router = injector.get<Router>(Router);\n  (injector.get(DA_SERVICE_TOKEN) as ITokenService).referrer!.url = url || router.url;\n  if (options.token_invalid_redirect === true) {\n    setTimeout(() => {\n      if (/^https?:\\/\\//g.test(options.login_url!)) {\n        injector.get(DOCUMENT).location.href = options.login_url as string;\n      } else {\n        router.navigate([options.login_url]);\n      }\n    });\n  }\n}\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpParams,\n  HttpRequest,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport { Injectable, Injector, Optional } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AlainAuthConfig, AlainConfigService } from '@delon/util/config';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { mergeConfig } from '../auth.config';\nimport { ToLogin } from './helper';\nimport { ITokenModel } from './interface';\n\nclass HttpAuthInterceptorHandler implements HttpHandler {\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) {}\n\n  handle(req: HttpRequest<NzSafeAny>): Observable<HttpEvent<NzSafeAny>> {\n    return this.interceptor.intercept(req, this.next);\n  }\n}\n\n@Injectable()\nexport abstract class BaseInterceptor implements HttpInterceptor {\n  constructor(@Optional() protected injector: Injector) {}\n\n  protected model: ITokenModel;\n\n  abstract isAuth(options: AlainAuthConfig): boolean;\n\n  abstract setReq(req: HttpRequest<NzSafeAny>, options: AlainAuthConfig): HttpRequest<NzSafeAny>;\n\n  intercept(req: HttpRequest<NzSafeAny>, next: HttpHandler): Observable<HttpEvent<NzSafeAny>> {\n    const options = mergeConfig(this.injector.get(AlainConfigService));\n    if (Array.isArray(options.ignores)) {\n      for (const item of options.ignores) {\n        if (item.test(req.url)) return next.handle(req);\n      }\n    }\n\n    const ingoreKey = options.allow_anonymous_key!;\n    let ingored = false;\n    let params = req.params;\n    let url = req.url;\n    if (req.params.has(ingoreKey)) {\n      params = req.params.delete(ingoreKey);\n      ingored = true;\n    }\n    const urlArr = req.url.split('?');\n    if (urlArr.length > 1) {\n      const queryStringParams = new HttpParams({ fromString: urlArr[1] });\n      if (queryStringParams.has(ingoreKey)) {\n        const queryString = queryStringParams.delete(ingoreKey).toString();\n        url = queryString.length > 0 ? `${urlArr[0]}?${queryString}` : urlArr[0];\n        ingored = true;\n      }\n    }\n    if (ingored) {\n      return next.handle(req.clone({ params, url }));\n    }\n\n    if (this.isAuth(options)) {\n      req = this.setReq(req, options);\n    } else {\n      ToLogin(options, this.injector);\n      // Interrupt Http request, so need to generate a new Observable\n      const err$ = new Observable((observer: Observer<HttpEvent<NzSafeAny>>) => {\n        const res = new HttpErrorResponse({\n          url: req.url,\n          headers: req.headers,\n          status: 401,\n          statusText: `来自 @delon/auth 的拦截，所请求URL未授权，若是登录API可加入 [url?_allow_anonymous=true] 来表示忽略校验，更多方法请参考： https://ng-alain.com/auth/getting-started#AlainAuthConfig\\nThe interception from @delon/auth, the requested URL is not authorized. If the login API can add [url?_allow_anonymous=true] to ignore the check, please refer to: https://ng-alain.com/auth/getting-started#AlainAuthConfig`\n        });\n        observer.error(res);\n      });\n      if (options.executeOtherInterceptors) {\n        const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n        const lastInterceptors = interceptors.slice(interceptors.indexOf(this) + 1);\n        if (lastInterceptors.length > 0) {\n          const chain = lastInterceptors.reduceRight(\n            (_next, _interceptor) => new HttpAuthInterceptorHandler(_next, _interceptor),\n            {\n              handle: (_: HttpRequest<NzSafeAny>) => err$\n            }\n          );\n          return chain.handle(req);\n        }\n      }\n      return err$;\n    }\n    return next.handle(req);\n  }\n}\n","import type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport function urlBase64Decode(str: string): string {\n  let output = str.replace(/-/g, '+').replace(/_/g, '/');\n  switch (output.length % 4) {\n    case 0: {\n      break;\n    }\n    case 2: {\n      output += '==';\n      break;\n    }\n    case 3: {\n      output += '=';\n      break;\n    }\n    default: {\n      throw new Error(`'atob' failed: The string to be decoded is not correctly encoded.`);\n    }\n  }\n  return b64DecodeUnicode(output);\n}\n\nfunction b64decode(str: string): string {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  let output = '';\n\n  str = String(str).replace(/=+$/, '');\n\n  for (\n    // initialize result and counters\n    let bc = 0, bs: NzSafeAny, buffer: NzSafeAny, idx = 0;\n    // get next character\n    (buffer = str.charAt(idx++));\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer &&\n    ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n    // and if not first of each 4 characters,\n    // convert the first 8 bits to one ascii character\n    bc++ % 4)\n      ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n      : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n// https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\nfunction b64DecodeUnicode(str: string): string {\n  return decodeURIComponent(\n    Array.prototype.map\n      .call(b64decode(str), (c: string) => {\n        return `%${`00${c.charCodeAt(0).toString(16)}`.slice(-2)}`;\n      })\n      .join('')\n  );\n}\n","import type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { ITokenModel } from '../interface';\nimport { urlBase64Decode } from './jwt.helper';\n\nexport interface JWT {\n  /**\n   * Issuerd\n   */\n  iss: string;\n  /**\n   * Issued At\n   */\n  iat: string;\n  /**\n   * Subject\n   */\n  sub: string;\n  /**\n   * Expiration Time\n   */\n  exp: number;\n  /**\n   * Audience\n   */\n  aud: string;\n  /**\n   * Not Before\n   */\n  nbf: string;\n  /**\n   * JWT ID\n   */\n  jti: string;\n\n  [key: string]: NzSafeAny;\n  [key: number]: NzSafeAny;\n}\n\nexport class JWTTokenModel implements ITokenModel {\n  [key: string]: NzSafeAny;\n\n  token: string | null | undefined;\n\n  expired?: number;\n\n  /**\n   * 获取载荷信息\n   */\n  get payload(): JWT {\n    const parts = (this.token || '').split('.');\n    if (parts.length !== 3) throw new Error('JWT must have 3 parts');\n\n    const decoded = urlBase64Decode(parts[1]);\n    return JSON.parse(decoded);\n  }\n\n  /**\n   * 获取过期时间戳（单位：ms）\n   */\n  get exp(): number | null {\n    const decoded = this.payload;\n    if (!decoded.hasOwnProperty('exp')) return null;\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n    return date.valueOf();\n  }\n\n  /**\n   * 检查Token是否过期，当`payload` 包含 `exp` 字段时有效，若无 `exp` 字段直接返回 `null`\n   *\n   * @param offsetSeconds 偏移量\n   */\n  isExpired(offsetSeconds: number = 0): boolean | null {\n    const exp = this.exp;\n    if (exp == null) return null;\n\n    return !(exp > new Date().valueOf() + offsetSeconds * 1000);\n  }\n}\n","import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { AlainAuthConfig } from '@delon/util/config';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { BaseInterceptor } from '../base.interceptor';\nimport { CheckJwt } from '../helper';\nimport { DA_SERVICE_TOKEN } from '../interface';\nimport { JWTTokenModel } from './jwt.model';\n\n/**\n * JWT 拦截器\n *\n * ```\n * // app.module.ts\n * { provide: HTTP_INTERCEPTORS, useClass: JWTInterceptor, multi: true}\n * ```\n */\n@Injectable()\nexport class JWTInterceptor extends BaseInterceptor {\n  isAuth(options: AlainAuthConfig): boolean {\n    this.model = this.injector.get(DA_SERVICE_TOKEN).get<JWTTokenModel>(JWTTokenModel);\n    return CheckJwt(this.model as JWTTokenModel, options.token_exp_offset!);\n  }\n\n  setReq(req: HttpRequest<NzSafeAny>, _options: AlainAuthConfig): HttpRequest<NzSafeAny> {\n    return req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.model.token}`\n      }\n    });\n  }\n}\n","import { Inject, Injectable, Injector } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Route,\n  RouterStateSnapshot,\n  UrlSegment\n} from '@angular/router';\n\nimport { AlainAuthConfig } from '@delon/util/config';\n\nimport { CheckJwt, ToLogin } from '../helper';\nimport { DA_SERVICE_TOKEN, ITokenService } from '../interface';\nimport { JWTTokenModel } from './jwt.model';\n\n/**\n * JWT 路由守卫, [ACL Document](https://ng-alain.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivate: [ JWTGuard ]\n * },\n * {\n *   path: 'my',\n *   canActivateChild: [JWTGuard],\n *   children: [\n *     { path: 'profile', component: MockComponent }\n *   ],\n * },\n * ```\n */\n@Injectable({ providedIn: 'root' })\nexport class JWTGuard implements CanActivate, CanActivateChild, CanLoad {\n  private url: string | undefined;\n\n  private get cog(): AlainAuthConfig {\n    return this.srv.options;\n  }\n\n  constructor(@Inject(DA_SERVICE_TOKEN) private srv: ITokenService, private injector: Injector) {}\n\n  private process(): boolean {\n    const res = CheckJwt(this.srv.get<JWTTokenModel>(JWTTokenModel), this.cog.token_exp_offset!);\n    if (!res) {\n      ToLogin(this.cog, this.injector, this.url);\n    }\n    return res;\n  }\n\n  // lazy loading\n  canLoad(route: Route, _segments: UrlSegment[]): boolean {\n    this.url = route.path;\n    return this.process();\n  }\n  // all children route\n  canActivateChild(_childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    this.url = state.url;\n    return this.process();\n  }\n  // route\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    this.url = state.url;\n    return this.process();\n  }\n}\n","import type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { ITokenModel } from '../interface';\n\nexport class SimpleTokenModel implements ITokenModel {\n  [key: string]: NzSafeAny;\n\n  token: string;\n\n  expired?: number;\n}\n","import { HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { AlainAuthConfig } from '@delon/util/config';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { BaseInterceptor } from '../base.interceptor';\nimport { CheckSimple } from '../helper';\nimport { DA_SERVICE_TOKEN } from '../interface';\nimport { SimpleTokenModel } from './simple.model';\n\n/**\n * Simple 拦截器\n *\n * ```\n * // app.module.ts\n * { provide: HTTP_INTERCEPTORS, useClass: SimpleInterceptor, multi: true}\n * ```\n */\n@Injectable()\nexport class SimpleInterceptor extends BaseInterceptor {\n  isAuth(_options: AlainAuthConfig): boolean {\n    this.model = this.injector.get(DA_SERVICE_TOKEN).get() as SimpleTokenModel;\n    return CheckSimple(this.model as SimpleTokenModel);\n  }\n\n  setReq(req: HttpRequest<NzSafeAny>, options: AlainAuthConfig): HttpRequest<NzSafeAny> {\n    const { token_send_template, token_send_key } = options;\n    const token = token_send_template!.replace(/\\$\\{([\\w]+)\\}/g, (_: string, g) => this.model[g]);\n    switch (options.token_send_place) {\n      case 'header':\n        const obj: NzSafeAny = {};\n        obj[token_send_key!] = token;\n        req = req.clone({\n          setHeaders: obj\n        });\n        break;\n      case 'body':\n        const body = req.body || {};\n        body[token_send_key!] = token;\n        req = req.clone({\n          body\n        });\n        break;\n      case 'url':\n        req = req.clone({\n          params: req.params.append(token_send_key!, token)\n        });\n        break;\n    }\n    return req;\n  }\n}\n","import { Inject, Injectable, Injector } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Route,\n  RouterStateSnapshot,\n  UrlSegment\n} from '@angular/router';\n\nimport { AlainAuthConfig } from '@delon/util/config';\n\nimport { CheckSimple, ToLogin } from '../helper';\nimport { DA_SERVICE_TOKEN, ITokenService } from '../interface';\nimport { SimpleTokenModel } from './simple.model';\n\n/**\n * Simple 路由守卫, [ACL Document](https://ng-alain.com/auth/guard).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivate: [ SimpleGuard ]\n * },\n * {\n *   path: 'my',\n *   canActivateChild: [SimpleGuard],\n *   children: [\n *     { path: 'profile', component: MockComponent }\n *   ],\n * },\n * ```\n */\n@Injectable({ providedIn: 'root' })\nexport class SimpleGuard implements CanActivate, CanActivateChild, CanLoad {\n  private url?: string;\n\n  private get cog(): AlainAuthConfig {\n    return this.srv.options;\n  }\n\n  constructor(@Inject(DA_SERVICE_TOKEN) private srv: ITokenService, private injector: Injector) {}\n\n  private process(): boolean {\n    const res = CheckSimple(this.srv.get() as SimpleTokenModel);\n    if (!res) {\n      ToLogin(this.cog, this.injector, this.url);\n    }\n    return res;\n  }\n\n  // lazy loading\n  canLoad(route: Route, _segments: UrlSegment[]): boolean {\n    this.url = route.path;\n    return this.process();\n  }\n  // all children route\n  canActivateChild(_childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    this.url = state.url;\n    return this.process();\n  }\n  // route\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    this.url = state.url;\n    return this.process();\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({})\nexport class DelonAuthModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}