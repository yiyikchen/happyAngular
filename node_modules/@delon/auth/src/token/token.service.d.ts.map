{"version":3,"file":"token.service.d.ts","sources":["token.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AlainAuthConfig, AlainConfigService } from '@delon/util/config';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { IStore } from '../store/interface';\nimport { AuthReferrer, ITokenModel, ITokenService } from './interface';\nexport declare function DA_SERVICE_TOKEN_FACTORY(): ITokenService;\n/**\n * 维护Token信息服务，[在线文档](https://ng-alain.com/auth)\n */\nexport declare class TokenService implements ITokenService, OnDestroy {\n    private store;\n    private refresh$;\n    private change$;\n    private interval$;\n    private _referrer;\n    private _options;\n    constructor(configSrv: AlainConfigService, store: IStore);\n    get refresh(): Observable<ITokenModel>;\n    get login_url(): string | undefined;\n    get referrer(): AuthReferrer;\n    get options(): AlainAuthConfig;\n    set(data: ITokenModel): boolean;\n    get(type?: NzSafeAny): NzSafeAny;\n    clear(options?: {\n        onlyToken: boolean;\n    }): void;\n    change(): Observable<ITokenModel | null>;\n    private builderRefresh;\n    private cleanRefresh;\n    ngOnDestroy(): void;\n}\n"]}