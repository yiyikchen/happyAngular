{"version":3,"file":"social.service.d.ts","sources":["social.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { ITokenModel, ITokenService } from '../token/interface';\nexport declare type SocialOpenType = 'href' | 'window';\nexport declare class SocialService implements OnDestroy {\n    private tokenService;\n    private doc;\n    private router;\n    private _win;\n    private _winTime;\n    private observer;\n    constructor(tokenService: ITokenService, doc: NzSafeAny, router: Router);\n    /**\n     * 使用窗体打开授权页，返回值是 `Observable<ITokenModel>` 用于订阅授权后返回的结果\n     *\n     * @param url 获取授权地址\n     * @param callback 回调路由地址\n     * @param options.windowFeatures 等同 `window.open` 的 `features` 参数值\n     */\n    login(url: string, callback?: string, options?: {\n        type?: 'window';\n        windowFeatures?: string;\n    }): Observable<ITokenModel>;\n    /**\n     * 跳转至授权页\n     *\n     * @param url 获取授权地址\n     * @param callback 回调路由地址\n     */\n    login(url: string, callback?: string, options?: {\n        type?: 'href';\n    }): void;\n    /**\n     * 授权成功后的回调处理\n     *\n     * @param rawData 指定回调认证信息，为空时从根据当前URL解析\n     */\n    callback(rawData?: ITokenModel | string | null): ITokenModel;\n    ngOnDestroy(): void;\n}\n"]}