import { __decorate } from 'tslib';
import { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ElementRef, Host, Optional, Renderer2, ViewChild, NgModule } from '@angular/core';
import { AlainConfigService } from '@delon/util/config';
import { InputNumber, InputBoolean } from '@delon/util/decorator';
import { ResponsiveService } from '@delon/theme';
import { isEmpty } from '@delon/util/browser';
import { ObserversModule } from '@angular/cdk/observers';
import { CommonModule } from '@angular/common';
import { NzOutletModule } from 'ng-zorro-antd/core/outlet';
import { NzIconModule } from 'ng-zorro-antd/icon';
import { NzToolTipModule } from 'ng-zorro-antd/tooltip';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@delon/util/config';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from 'ng-zorro-antd/core/outlet';
import * as ɵngcc4 from 'ng-zorro-antd/tooltip';
import * as ɵngcc5 from '@delon/theme';
import * as ɵngcc6 from '@angular/cdk/observers';
import * as ɵngcc7 from 'ng-zorro-antd/icon';

function SVContainerComponent_sv_title_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.title);
} }
function SVContainerComponent_sv_title_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "sv-title");
    ɵngcc0.ɵɵtemplate(1, SVContainerComponent_sv_title_1_ng_container_1_Template, 2, 1, "ng-container", 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("nzStringTemplateOutlet", ctx_r0.title);
} }
const _c0 = function (a0, a1) { return { "margin-left.px": a0, "margin-right.px": a1 }; };
const _c1 = ["*"];
function SVValueComponent_em_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "em", 3);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r0.prefix, ɵngcc0.ɵɵsanitizeHtml);
} }
function SVValueComponent_em_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "em", 4);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r1.unit, ɵngcc0.ɵɵsanitizeHtml);
} }
const _c2 = ["conEl"];
function SVComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.label);
} }
function SVComponent_span_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r4.optional);
} }
function SVComponent_span_3_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 10);
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("nzTooltipTitle", ctx_r5.optionalHelp)("nzTooltipColor", ctx_r5.optionalHelpColor);
} }
function SVComponent_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵtemplate(1, SVComponent_span_3_ng_container_1_Template, 2, 1, "ng-container", 2);
    ɵngcc0.ɵɵtemplate(2, SVComponent_span_3_i_2_Template, 1, 2, "i", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("sv__label-optional-no-text", !ctx_r1.optional);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("nzStringTemplateOutlet", ctx_r1.optional);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.optionalHelp);
} }
function SVComponent_ng_container_8_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r6.unit);
} }
function SVComponent_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, SVComponent_ng_container_8_span_1_Template, 2, 1, "span", 11);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("nzStringTemplateOutlet", ctx_r3.unit);
} }
class SVContainerComponent {
    constructor(configSrv) {
        this.noColon = false;
        configSrv.attach(this, 'sv', {
            size: 'large',
            gutter: 32,
            layout: 'horizontal',
            col: 3,
            default: true
        });
    }
}
SVContainerComponent.ɵfac = function SVContainerComponent_Factory(t) { return new (t || SVContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AlainConfigService)); };
SVContainerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SVContainerComponent, selectors: [["sv-container"], ["", "sv-container", ""]], hostVars: 12, hostBindings: function SVContainerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("sv__container", true)("sv__horizontal", ctx.layout === "horizontal")("sv__vertical", ctx.layout === "vertical")("sv__small", ctx.size === "small")("sv__large", ctx.size === "large")("clearfix", true);
    } }, inputs: { noColon: "noColon", title: "title", size: "size", gutter: "gutter", layout: "layout", labelWidth: "labelWidth", col: "col", default: "default" }, exportAs: ["svContainer"], ngContentSelectors: _c1, decls: 3, vars: 5, consts: [[1, "ant-row", 3, "ngStyle"], [4, "ngIf"], [4, "nzStringTemplateOutlet"]], template: function SVContainerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, SVContainerComponent_sv_title_1_Template, 2, 1, "sv-title", 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction2(2, _c0, -(ctx.gutter / 2), -(ctx.gutter / 2)));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.title);
    } }, directives: function () { return [ɵngcc2.NgStyle, ɵngcc2.NgIf, SVTitleComponent, ɵngcc3.NzStringTemplateOutletDirective]; }, encapsulation: 2, changeDetection: 0 });
SVContainerComponent.ctorParameters = () => [
    { type: AlainConfigService }
];
SVContainerComponent.propDecorators = {
    title: [{ type: Input }],
    size: [{ type: Input }],
    gutter: [{ type: Input }],
    layout: [{ type: Input }],
    labelWidth: [{ type: Input }],
    col: [{ type: Input }],
    default: [{ type: Input }],
    noColon: [{ type: Input }]
};
__decorate([
    InputNumber()
], SVContainerComponent.prototype, "gutter", void 0);
__decorate([
    InputNumber()
], SVContainerComponent.prototype, "labelWidth", void 0);
__decorate([
    InputNumber()
], SVContainerComponent.prototype, "col", void 0);
__decorate([
    InputBoolean()
], SVContainerComponent.prototype, "default", void 0);
__decorate([
    InputBoolean()
], SVContainerComponent.prototype, "noColon", void 0);

class SVTitleComponent {
    constructor(el, parent, ren) {
        this.parent = parent;
        this.ren = ren;
        if (parent == null) {
            throw new Error(`[sv-title] must include 'sv-container' component`);
        }
        this.el = el.nativeElement;
    }
    setClass() {
        const { gutter } = this.parent;
        const { el } = this;
        this.ren.setStyle(el, 'padding-left', `${gutter / 2}px`);
        this.ren.setStyle(el, 'padding-right', `${gutter / 2}px`);
    }
    ngOnInit() {
        this.setClass();
    }
}
SVTitleComponent.ɵfac = function SVTitleComponent_Factory(t) { return new (t || SVTitleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(SVContainerComponent, 9), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
SVTitleComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SVTitleComponent, selectors: [["sv-title"], ["", "sv-title", ""]], hostVars: 2, hostBindings: function SVTitleComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("sv__title", true);
    } }, exportAs: ["svTitle"], ngContentSelectors: _c1, decls: 1, vars: 0, template: function SVTitleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
SVTitleComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: SVContainerComponent, decorators: [{ type: Host }, { type: Optional }] },
    { type: Renderer2 }
];

class SVValueComponent {
    constructor() {
        this.size = 'default';
    }
}
SVValueComponent.ɵfac = function SVValueComponent_Factory(t) { return new (t || SVValueComponent)(); };
SVValueComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SVValueComponent, selectors: [["sv-value"], ["", "sv-value", ""]], hostVars: 6, hostBindings: function SVValueComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("sv__value", true)("sv__value-small", ctx.size === "small")("sv__value-large", ctx.size === "large");
    } }, inputs: { size: "size", prefix: "prefix", unit: "unit", tooltip: "tooltip" }, exportAs: ["svValue"], ngContentSelectors: _c1, decls: 4, vars: 3, consts: [["class", "sv__value-prefix", 3, "innerHTML", 4, "ngIf"], ["nz-tooltip", "", 1, "sv__value-text", 3, "nzTooltipTitle"], ["class", "sv__value-unit", 3, "innerHTML", 4, "ngIf"], [1, "sv__value-prefix", 3, "innerHTML"], [1, "sv__value-unit", 3, "innerHTML"]], template: function SVValueComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, SVValueComponent_em_0_Template, 1, 1, "em", 0);
        ɵngcc0.ɵɵelementStart(1, "span", 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, SVValueComponent_em_3_Template, 1, 1, "em", 2);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.prefix);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("nzTooltipTitle", ctx.tooltip);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.unit);
    } }, directives: [ɵngcc2.NgIf, ɵngcc4.NzTooltipDirective], encapsulation: 2, changeDetection: 0 });
SVValueComponent.propDecorators = {
    prefix: [{ type: Input }],
    unit: [{ type: Input }],
    tooltip: [{ type: Input }],
    size: [{ type: Input }]
};

const prefixCls = `sv`;
class SVComponent {
    constructor(el, parent, rep, ren) {
        this.parent = parent;
        this.rep = rep;
        this.ren = ren;
        this.clsMap = [];
        this._noColon = false;
        if (parent == null) {
            throw new Error(`[sv] must include 'sv-container' component`);
        }
        this.el = el.nativeElement;
    }
    // #endregion
    get paddingValue() {
        return this.parent && this.parent.gutter / 2;
    }
    get labelWidth() {
        const { labelWidth, layout } = this.parent;
        return layout === 'horizontal' ? labelWidth : null;
    }
    setClass() {
        const { el, ren, col, clsMap, type, rep, noColon, parent } = this;
        this._noColon = noColon != null ? noColon : parent.noColon;
        clsMap.forEach(cls => ren.removeClass(el, cls));
        clsMap.length = 0;
        clsMap.push(...rep.genCls(col != null ? col : this.parent.col));
        clsMap.push(`${prefixCls}__item`);
        if (this.parent.labelWidth)
            clsMap.push(`${prefixCls}__item-fixed`);
        if (type)
            clsMap.push(`${prefixCls}__type-${type}`);
        clsMap.forEach(cls => ren.addClass(el, cls));
    }
    ngAfterViewInit() {
        this.setClass();
        this.checkContent();
    }
    ngOnChanges() {
        this.setClass();
    }
    checkContent() {
        const { conEl } = this;
        const def = this.default;
        if (!(def != null ? def : this.parent.default)) {
            return;
        }
        const el = conEl.nativeElement;
        const cls = `sv__default`;
        if (el.classList.contains(cls)) {
            el.classList.remove(cls);
        }
        if (isEmpty(el)) {
            el.classList.add(cls);
        }
    }
}
SVComponent.ɵfac = function SVComponent_Factory(t) { return new (t || SVComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(SVContainerComponent, 9), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.ResponsiveService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
SVComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SVComponent, selectors: [["sv"], ["", "sv", ""]], viewQuery: function SVComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c2, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.conEl = _t.first);
    } }, hostVars: 4, hostBindings: function SVComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("padding-left", ctx.paddingValue, "px")("padding-right", ctx.paddingValue, "px");
    } }, inputs: { optional: "optional", optionalHelp: "optionalHelp", optionalHelpColor: "optionalHelpColor", label: "label", unit: "unit", col: "col", default: "default", type: "type", noColon: "noColon" }, exportAs: ["sv"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 9, vars: 11, consts: [[1, "sv__label"], [1, "sv__label-text"], [4, "nzStringTemplateOutlet"], ["class", "sv__label-optional", 3, "sv__label-optional-no-text", 4, "ngIf"], [1, "sv__detail"], [3, "cdkObserveContent"], ["conEl", ""], [4, "ngIf"], [1, "sv__label-optional"], ["nz-tooltip", "", "nz-icon", "", "nzType", "question-circle", 3, "nzTooltipTitle", "nzTooltipColor", 4, "ngIf"], ["nz-tooltip", "", "nz-icon", "", "nzType", "question-circle", 3, "nzTooltipTitle", "nzTooltipColor"], ["class", "sv__unit", 4, "nzStringTemplateOutlet"], [1, "sv__unit"]], template: function SVComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "span", 1);
        ɵngcc0.ɵɵtemplate(2, SVComponent_ng_container_2_Template, 2, 1, "ng-container", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, SVComponent_span_3_Template, 3, 4, "span", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "span", 5, 6);
        ɵngcc0.ɵɵlistener("cdkObserveContent", function SVComponent_Template_span_cdkObserveContent_5_listener() { return ctx.checkContent(); });
        ɵngcc0.ɵɵprojection(7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, SVComponent_ng_container_8_Template, 2, 1, "ng-container", 7);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.labelWidth, "px");
        ɵngcc0.ɵɵclassProp("sv__label-empty", !ctx.label)("sv__label-width", ctx.labelWidth !== null && ctx.labelWidth !== undefined)("sv__no-colon", ctx._noColon);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("nzStringTemplateOutlet", ctx.label);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.optional || ctx.optionalHelp);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.unit);
    } }, directives: [ɵngcc3.NzStringTemplateOutletDirective, ɵngcc2.NgIf, ɵngcc6.CdkObserveContent, ɵngcc4.NzTooltipDirective, ɵngcc7.NzIconDirective], encapsulation: 2, changeDetection: 0 });
SVComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: SVContainerComponent, decorators: [{ type: Host }, { type: Optional }] },
    { type: ResponsiveService },
    { type: Renderer2 }
];
SVComponent.propDecorators = {
    conEl: [{ type: ViewChild, args: ['conEl', { static: false },] }],
    optional: [{ type: Input }],
    optionalHelp: [{ type: Input }],
    optionalHelpColor: [{ type: Input }],
    label: [{ type: Input }],
    unit: [{ type: Input }],
    col: [{ type: Input }],
    default: [{ type: Input }],
    type: [{ type: Input }],
    noColon: [{ type: Input }]
};
__decorate([
    InputNumber(null)
], SVComponent.prototype, "col", void 0);
__decorate([
    InputBoolean(null)
], SVComponent.prototype, "default", void 0);
__decorate([
    InputBoolean(null)
], SVComponent.prototype, "noColon", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SVContainerComponent, [{
        type: Component,
        args: [{
                selector: 'sv-container, [sv-container]',
                exportAs: 'svContainer',
                template: "<div class=\"ant-row\" [ngStyle]=\"{ 'margin-left.px': -(gutter / 2), 'margin-right.px': -(gutter / 2) }\">\n  <sv-title *ngIf=\"title\">\n    <ng-container *nzStringTemplateOutlet=\"title\">{{ title }}</ng-container>\n  </sv-title>\n  <ng-content></ng-content>\n</div>\n",
                host: {
                    '[class.sv__container]': 'true',
                    '[class.sv__horizontal]': `layout === 'horizontal'`,
                    '[class.sv__vertical]': `layout === 'vertical'`,
                    '[class.sv__small]': `size === 'small'`,
                    '[class.sv__large]': `size === 'large'`,
                    '[class.clearfix]': `true`
                },
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.AlainConfigService }]; }, { noColon: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }], gutter: [{
            type: Input
        }], layout: [{
            type: Input
        }], labelWidth: [{
            type: Input
        }], col: [{
            type: Input
        }], default: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SVTitleComponent, [{
        type: Component,
        args: [{
                selector: 'sv-title, [sv-title]',
                exportAs: 'svTitle',
                template: '<ng-content></ng-content>',
                host: {
                    '[class.sv__title]': 'true'
                },
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: SVContainerComponent, decorators: [{
                type: Host
            }, {
                type: Optional
            }] }, { type: ɵngcc0.Renderer2 }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SVValueComponent, [{
        type: Component,
        args: [{
                selector: 'sv-value, [sv-value]',
                exportAs: 'svValue',
                template: `
    <em *ngIf="prefix" class="sv__value-prefix" [innerHTML]="prefix"></em>
    <span nz-tooltip [nzTooltipTitle]="tooltip" class="sv__value-text"><ng-content></ng-content></span>
    <em *ngIf="unit" class="sv__value-unit" [innerHTML]="unit"></em>
  `,
                host: {
                    '[class.sv__value]': 'true',
                    '[class.sv__value-small]': `size === 'small'`,
                    '[class.sv__value-large]': `size === 'large'`
                },
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return []; }, { size: [{
            type: Input
        }], prefix: [{
            type: Input
        }], unit: [{
            type: Input
        }], tooltip: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SVComponent, [{
        type: Component,
        args: [{
                selector: 'sv, [sv]',
                exportAs: 'sv',
                template: "<div\n  class=\"sv__label\"\n  [class.sv__label-empty]=\"!label\"\n  [class.sv__label-width]=\"labelWidth !== null && labelWidth !== undefined\"\n  [class.sv__no-colon]=\"_noColon\"\n  [style.width.px]=\"labelWidth\"\n>\n  <span class=\"sv__label-text\">\n    <ng-container *nzStringTemplateOutlet=\"label\">{{ label }}</ng-container>\n  </span>\n  <span *ngIf=\"optional || optionalHelp\" class=\"sv__label-optional\" [class.sv__label-optional-no-text]=\"!optional\">\n    <ng-container *nzStringTemplateOutlet=\"optional\">{{ optional }}</ng-container>\n    <i\n      *ngIf=\"optionalHelp\"\n      nz-tooltip\n      [nzTooltipTitle]=\"optionalHelp\"\n      [nzTooltipColor]=\"optionalHelpColor\"\n      nz-icon\n      nzType=\"question-circle\"\n    ></i>\n  </span>\n</div>\n<div class=\"sv__detail\">\n  <span (cdkObserveContent)=\"checkContent()\" #conEl>\n    <ng-content></ng-content>\n  </span>\n  <ng-container *ngIf=\"!!unit\">\n    <span class=\"sv__unit\" *nzStringTemplateOutlet=\"unit\">{{ unit }}</span>\n  </ng-container>\n</div>\n",
                host: {
                    '[style.padding-left.px]': 'paddingValue',
                    '[style.padding-right.px]': 'paddingValue'
                },
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: SVContainerComponent, decorators: [{
                type: Host
            }, {
                type: Optional
            }] }, { type: ɵngcc5.ResponsiveService }, { type: ɵngcc0.Renderer2 }]; }, { conEl: [{
            type: ViewChild,
            args: ['conEl', { static: false }]
        }], optional: [{
            type: Input
        }], optionalHelp: [{
            type: Input
        }], optionalHelpColor: [{
            type: Input
        }], label: [{
            type: Input
        }], unit: [{
            type: Input
        }], col: [{
            type: Input
        }], default: [{
            type: Input
        }], type: [{
            type: Input
        }], noColon: [{
            type: Input
        }] }); })();

const COMPONENTS = [SVContainerComponent, SVComponent, SVTitleComponent, SVValueComponent];
class SVModule {
}
SVModule.ɵfac = function SVModule_Factory(t) { return new (t || SVModule)(); };
SVModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SVModule });
SVModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, ObserversModule, NzToolTipModule, NzIconModule, NzOutletModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SVModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, ObserversModule, NzToolTipModule, NzIconModule, NzOutletModule],
                declarations: COMPONENTS,
                exports: COMPONENTS
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SVModule, { declarations: function () { return [SVContainerComponent, SVComponent, SVTitleComponent, SVValueComponent]; }, imports: function () { return [CommonModule, ObserversModule, NzToolTipModule, NzIconModule, NzOutletModule]; }, exports: function () { return [SVContainerComponent, SVComponent, SVTitleComponent, SVValueComponent]; } }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { SVComponent, SVContainerComponent, SVModule, SVTitleComponent, SVValueComponent };

//# sourceMappingURL=view.js.map