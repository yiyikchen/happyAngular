import { __decorate } from 'tslib';
import { Directionality } from '@angular/cdk/bidi';
import { Platform } from '@angular/cdk/platform';
import { TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, Optional, Inject, ChangeDetectorRef, ViewChild, Input, NgModule } from '@angular/core';
import { NavigationEnd, Router, RouterModule } from '@angular/router';
import { Subject, merge } from 'rxjs';
import { takeUntil, filter } from 'rxjs/operators';
import { ReuseTabService } from '@delon/abc/reuse-tab';
import { SettingsService, MenuService, ALAIN_I18N_TOKEN, TitleService } from '@delon/theme';
import { isEmpty } from '@delon/util/browser';
import { AlainConfigService } from '@delon/util/config';
import { InputBoolean, InputNumber } from '@delon/util/decorator';
import { ObserversModule } from '@angular/cdk/observers';
import { CommonModule } from '@angular/common';
import { NzAffixModule } from 'ng-zorro-antd/affix';
import { NzBreadCrumbModule } from 'ng-zorro-antd/breadcrumb';
import { NzSkeletonModule } from 'ng-zorro-antd/skeleton';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@delon/theme';
import * as ɵngcc2 from '@angular/router';
import * as ɵngcc3 from '@delon/util/config';
import * as ɵngcc4 from '@angular/cdk/platform';
import * as ɵngcc5 from '@angular/cdk/bidi';
import * as ɵngcc6 from '@angular/common';
import * as ɵngcc7 from 'ng-zorro-antd/affix';
import * as ɵngcc8 from 'ng-zorro-antd/skeleton';
import * as ɵngcc9 from '@angular/cdk/observers';
import * as ɵngcc10 from 'ng-zorro-antd/breadcrumb';
import * as ɵngcc11 from '@delon/abc/reuse-tab';

const _c0 = ["conTpl"];
const _c1 = ["affix"];
function PageHeaderComponent_nz_affix_0_ng_template_2_Template(rf, ctx) { }
function PageHeaderComponent_nz_affix_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "nz-affix", 2, 3);
    ɵngcc0.ɵɵtemplate(2, PageHeaderComponent_nz_affix_0_ng_template_2_Template, 0, 0, "ng-template", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    const _r1 = ɵngcc0.ɵɵreference(2);
    ɵngcc0.ɵɵproperty("nzOffsetTop", ctx_r0.fixedOffsetTop);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r1);
} }
function PageHeaderComponent_ng_template_1_ng_container_3_nz_breadcrumb_1_nz_breadcrumb_item_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "a", 20);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const i_r15 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("routerLink", i_r15.link);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(i_r15.title);
} }
function PageHeaderComponent_ng_template_1_ng_container_3_nz_breadcrumb_1_nz_breadcrumb_item_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const i_r15 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(i_r15.title);
} }
function PageHeaderComponent_ng_template_1_ng_container_3_nz_breadcrumb_1_nz_breadcrumb_item_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "nz-breadcrumb-item");
    ɵngcc0.ɵɵtemplate(1, PageHeaderComponent_ng_template_1_ng_container_3_nz_breadcrumb_1_nz_breadcrumb_item_1_ng_container_1_Template, 3, 2, "ng-container", 18);
    ɵngcc0.ɵɵtemplate(2, PageHeaderComponent_ng_template_1_ng_container_3_nz_breadcrumb_1_nz_breadcrumb_item_1_ng_container_2_Template, 2, 1, "ng-container", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const i_r15 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", i_r15.link);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !i_r15.link);
} }
function PageHeaderComponent_ng_template_1_ng_container_3_nz_breadcrumb_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "nz-breadcrumb");
    ɵngcc0.ɵɵtemplate(1, PageHeaderComponent_ng_template_1_ng_container_3_nz_breadcrumb_1_nz_breadcrumb_item_1_Template, 3, 2, "nz-breadcrumb-item", 19);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r13.paths);
} }
function PageHeaderComponent_ng_template_1_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, PageHeaderComponent_ng_template_1_ng_container_3_nz_breadcrumb_1_Template, 2, 1, "nz-breadcrumb", 18);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.paths && ctx_r5.paths.length > 0);
} }
function PageHeaderComponent_ng_template_1_div_5_ng_template_1_Template(rf, ctx) { }
function PageHeaderComponent_ng_template_1_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 21);
    ɵngcc0.ɵɵtemplate(1, PageHeaderComponent_ng_template_1_div_5_ng_template_1_Template, 0, 0, "ng-template", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r6.logo);
} }
function PageHeaderComponent_ng_template_1_h1_8_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r21 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r21._titleVal);
} }
function PageHeaderComponent_ng_template_1_h1_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h1", 22);
    ɵngcc0.ɵɵtemplate(1, PageHeaderComponent_ng_template_1_h1_8_ng_container_1_Template, 2, 1, "ng-container", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7._titleVal)("ngIfElse", ctx_r7._titleTpl);
} }
function PageHeaderComponent_ng_template_1_div_9_ng_template_1_Template(rf, ctx) { }
function PageHeaderComponent_ng_template_1_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 23);
    ɵngcc0.ɵɵtemplate(1, PageHeaderComponent_ng_template_1_div_9_ng_template_1_Template, 0, 0, "ng-template", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r8.action);
} }
function PageHeaderComponent_ng_template_1_ng_template_14_Template(rf, ctx) { }
function PageHeaderComponent_ng_template_1_div_15_ng_template_1_Template(rf, ctx) { }
function PageHeaderComponent_ng_template_1_div_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 24);
    ɵngcc0.ɵɵtemplate(1, PageHeaderComponent_ng_template_1_div_15_ng_template_1_Template, 0, 0, "ng-template", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r11.extra);
} }
function PageHeaderComponent_ng_template_1_ng_template_16_Template(rf, ctx) { }
const _c2 = function (a0) { return { "page-header__wide": a0 }; };
const _c3 = function () { return { rows: 3 }; };
const _c4 = function () { return { size: "large", shape: "circle" }; };
function PageHeaderComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r25 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵelementStart(1, "div", 6);
    ɵngcc0.ɵɵelementStart(2, "nz-skeleton", 7);
    ɵngcc0.ɵɵtemplate(3, PageHeaderComponent_ng_template_1_ng_container_3_Template, 2, 1, "ng-container", 8);
    ɵngcc0.ɵɵelementStart(4, "div", 9);
    ɵngcc0.ɵɵtemplate(5, PageHeaderComponent_ng_template_1_div_5_Template, 2, 1, "div", 10);
    ɵngcc0.ɵɵelementStart(6, "div", 11);
    ɵngcc0.ɵɵelementStart(7, "div", 12);
    ɵngcc0.ɵɵtemplate(8, PageHeaderComponent_ng_template_1_h1_8_Template, 2, 2, "h1", 13);
    ɵngcc0.ɵɵtemplate(9, PageHeaderComponent_ng_template_1_div_9_Template, 2, 1, "div", 14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "div", 12);
    ɵngcc0.ɵɵelementStart(11, "div", 15, 16);
    ɵngcc0.ɵɵlistener("cdkObserveContent", function PageHeaderComponent_ng_template_1_Template_div_cdkObserveContent_11_listener() { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r24 = ɵngcc0.ɵɵnextContext(); return ctx_r24.checkContent(); });
    ɵngcc0.ɵɵprojection(13);
    ɵngcc0.ɵɵtemplate(14, PageHeaderComponent_ng_template_1_ng_template_14_Template, 0, 0, "ng-template", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(15, PageHeaderComponent_ng_template_1_div_15_Template, 2, 1, "div", 17);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(16, PageHeaderComponent_ng_template_1_ng_template_16_Template, 0, 0, "ng-template", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("page-header-rtl", ctx_r2.dir === "rtl");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(16, _c2, ctx_r2.wide));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("nzLoading", ctx_r2.loading)("nzTitle", false)("nzActive", true)("nzParagraph", ɵngcc0.ɵɵpureFunction0(18, _c3))("nzAvatar", ɵngcc0.ɵɵpureFunction0(19, _c4));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.breadcrumb)("ngIfElse", ctx_r2.breadcrumb);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.logo);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2._titleVal || ctx_r2._titleTpl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.action);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r2.content);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.extra);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r2.tab);
} }
const _c5 = ["*"];
class PageHeaderComponent {
    // #endregion
    constructor(settings, renderer, router, menuSrv, i18nSrv, titleSrv, reuseSrv, cdr, configSrv, platform, directionality) {
        this.renderer = renderer;
        this.router = router;
        this.menuSrv = menuSrv;
        this.i18nSrv = i18nSrv;
        this.titleSrv = titleSrv;
        this.reuseSrv = reuseSrv;
        this.cdr = cdr;
        this.directionality = directionality;
        this.destroy$ = new Subject();
        this.inited = false;
        this.isBrowser = true;
        this.dir = 'ltr';
        this._titleVal = '';
        this.paths = [];
        this.loading = false;
        this.wide = false;
        this.breadcrumb = null;
        this.logo = null;
        this.action = null;
        this.content = null;
        this.extra = null;
        this.tab = null;
        this.isBrowser = platform.isBrowser;
        configSrv.attach(this, 'pageHeader', {
            home: '首页',
            homeLink: '/',
            autoBreadcrumb: true,
            recursiveBreadcrumb: false,
            autoTitle: true,
            syncTitle: true,
            fixed: false,
            fixedOffsetTop: 64
        });
        settings.notify
            .pipe(takeUntil(this.destroy$), filter(w => this.affix && w.type === 'layout' && w.name === 'collapsed'))
            .subscribe(() => this.affix.updatePosition({}));
        merge(menuSrv.change, router.events.pipe(filter(ev => ev instanceof NavigationEnd)), i18nSrv.change)
            .pipe(filter(() => this.inited), takeUntil(this.destroy$))
            .subscribe(() => this.refresh());
    }
    get menus() {
        return this.menuSrv.getPathByUrl(this.router.url, this.recursiveBreadcrumb);
    }
    set title(value) {
        if (value instanceof TemplateRef) {
            this._title = null;
            this._titleTpl = value;
            this._titleVal = '';
        }
        else {
            this._title = value;
            this._titleVal = this._title;
        }
    }
    refresh() {
        this.setTitle().genBreadcrumb();
        this.cdr.detectChanges();
    }
    genBreadcrumb() {
        if (this.breadcrumb || !this.autoBreadcrumb || this.menus.length <= 0) {
            this.paths = [];
            return;
        }
        const paths = [];
        this.menus.forEach(item => {
            if (typeof item.hideInBreadcrumb !== 'undefined' && item.hideInBreadcrumb)
                return;
            let title = item.text;
            if (item.i18n && this.i18nSrv)
                title = this.i18nSrv.fanyi(item.i18n);
            paths.push({ title, link: (item.link && [item.link]) });
        });
        // add home
        if (this.home) {
            paths.splice(0, 0, {
                title: (this.homeI18n && this.i18nSrv && this.i18nSrv.fanyi(this.homeI18n)) || this.home,
                link: [this.homeLink]
            });
        }
        this.paths = paths;
    }
    setTitle() {
        if (this._title == null && this._titleTpl == null && this.autoTitle && this.menus.length > 0) {
            const item = this.menus[this.menus.length - 1];
            let title = item.text;
            if (item.i18n && this.i18nSrv) {
                title = this.i18nSrv.fanyi(item.i18n);
            }
            this._titleVal = title;
        }
        if (this._titleVal && this.syncTitle) {
            if (this.titleSrv) {
                this.titleSrv.setTitle(this._titleVal);
            }
            if (!this.inited && this.reuseSrv) {
                this.reuseSrv.title = this._titleVal;
            }
        }
        return this;
    }
    checkContent() {
        if (isEmpty(this.conTpl.nativeElement)) {
            this.renderer.setAttribute(this.conTpl.nativeElement, 'hidden', '');
        }
        else {
            this.renderer.removeAttribute(this.conTpl.nativeElement, 'hidden');
        }
    }
    ngOnInit() {
        var _a;
        this.dir = this.directionality.value;
        (_a = this.directionality.change) === null || _a === void 0 ? void 0 : _a.pipe(takeUntil(this.destroy$)).subscribe((direction) => {
            this.dir = direction;
            this.cdr.detectChanges();
        });
        this.refresh();
        this.inited = true;
    }
    ngAfterViewInit() {
        this.checkContent();
    }
    ngOnChanges() {
        if (this.inited) {
            this.refresh();
        }
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
}
PageHeaderComponent.ɵfac = function PageHeaderComponent_Factory(t) { return new (t || PageHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SettingsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MenuService), ɵngcc0.ɵɵdirectiveInject(ALAIN_I18N_TOKEN, 8), ɵngcc0.ɵɵdirectiveInject(TitleService, 8), ɵngcc0.ɵɵdirectiveInject(ReuseTabService, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AlainConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8)); };
PageHeaderComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PageHeaderComponent, selectors: [["page-header"]], viewQuery: function PageHeaderComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
        ɵngcc0.ɵɵviewQuery(_c1, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.conTpl = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.affix = _t.first);
    } }, inputs: { loading: "loading", wide: "wide", breadcrumb: "breadcrumb", logo: "logo", action: "action", content: "content", extra: "extra", tab: "tab", title: "title", home: "home", homeLink: "homeLink", homeI18n: "homeI18n", autoBreadcrumb: "autoBreadcrumb", autoTitle: "autoTitle", syncTitle: "syncTitle", fixed: "fixed", fixedOffsetTop: "fixedOffsetTop", recursiveBreadcrumb: "recursiveBreadcrumb" }, exportAs: ["pageHeader"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c5, decls: 3, vars: 2, consts: [[3, "nzOffsetTop", 4, "ngIf", "ngIfElse"], ["phTpl", ""], [3, "nzOffsetTop"], ["affix", ""], [3, "ngTemplateOutlet"], [1, "page-header"], [3, "ngClass"], [1, "d-block", 3, "nzLoading", "nzTitle", "nzActive", "nzParagraph", "nzAvatar"], [4, "ngIf", "ngIfElse"], [1, "page-header__detail"], ["class", "page-header__logo", 4, "ngIf"], [1, "page-header__main"], [1, "page-header__row"], ["class", "page-header__title", 4, "ngIf"], ["class", "page-header__action", 4, "ngIf"], [1, "page-header__desc", 3, "cdkObserveContent"], ["conTpl", ""], ["class", "page-header__extra", 4, "ngIf"], [4, "ngIf"], [4, "ngFor", "ngForOf"], [3, "routerLink"], [1, "page-header__logo"], [1, "page-header__title"], [1, "page-header__action"], [1, "page-header__extra"]], template: function PageHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, PageHeaderComponent_nz_affix_0_Template, 3, 2, "nz-affix", 0);
        ɵngcc0.ɵɵtemplate(1, PageHeaderComponent_ng_template_1_Template, 17, 20, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isBrowser && ctx.fixed)("ngIfElse", _r1);
    } }, directives: [ɵngcc6.NgIf, ɵngcc7.NzAffixComponent, ɵngcc6.NgTemplateOutlet, ɵngcc6.NgClass, ɵngcc8.NzSkeletonComponent, ɵngcc9.CdkObserveContent, ɵngcc10.NzBreadCrumbComponent, ɵngcc6.NgForOf, ɵngcc10.NzBreadCrumbItemComponent, ɵngcc2.RouterLinkWithHref], encapsulation: 2, changeDetection: 0 });
PageHeaderComponent.ctorParameters = () => [
    { type: SettingsService },
    { type: Renderer2 },
    { type: Router },
    { type: MenuService },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ALAIN_I18N_TOKEN,] }] },
    { type: TitleService, decorators: [{ type: Optional }, { type: Inject, args: [TitleService,] }] },
    { type: ReuseTabService, decorators: [{ type: Optional }, { type: Inject, args: [ReuseTabService,] }] },
    { type: ChangeDetectorRef },
    { type: AlainConfigService },
    { type: Platform },
    { type: Directionality, decorators: [{ type: Optional }] }
];
PageHeaderComponent.propDecorators = {
    conTpl: [{ type: ViewChild, args: ['conTpl', { static: false },] }],
    affix: [{ type: ViewChild, args: ['affix', { static: false },] }],
    title: [{ type: Input }],
    loading: [{ type: Input }],
    wide: [{ type: Input }],
    home: [{ type: Input }],
    homeLink: [{ type: Input }],
    homeI18n: [{ type: Input }],
    autoBreadcrumb: [{ type: Input }],
    autoTitle: [{ type: Input }],
    syncTitle: [{ type: Input }],
    fixed: [{ type: Input }],
    fixedOffsetTop: [{ type: Input }],
    breadcrumb: [{ type: Input }],
    recursiveBreadcrumb: [{ type: Input }],
    logo: [{ type: Input }],
    action: [{ type: Input }],
    content: [{ type: Input }],
    extra: [{ type: Input }],
    tab: [{ type: Input }]
};
__decorate([
    InputBoolean()
], PageHeaderComponent.prototype, "loading", void 0);
__decorate([
    InputBoolean()
], PageHeaderComponent.prototype, "wide", void 0);
__decorate([
    InputBoolean()
], PageHeaderComponent.prototype, "autoBreadcrumb", void 0);
__decorate([
    InputBoolean()
], PageHeaderComponent.prototype, "autoTitle", void 0);
__decorate([
    InputBoolean()
], PageHeaderComponent.prototype, "syncTitle", void 0);
__decorate([
    InputBoolean()
], PageHeaderComponent.prototype, "fixed", void 0);
__decorate([
    InputNumber()
], PageHeaderComponent.prototype, "fixedOffsetTop", void 0);
__decorate([
    InputBoolean()
], PageHeaderComponent.prototype, "recursiveBreadcrumb", void 0);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PageHeaderComponent, [{
        type: Component,
        args: [{
                selector: 'page-header',
                exportAs: 'pageHeader',
                template: "<nz-affix #affix *ngIf=\"isBrowser && fixed; else phTpl\" [nzOffsetTop]=\"fixedOffsetTop\">\n  <ng-template [ngTemplateOutlet]=\"phTpl\"></ng-template>\n</nz-affix>\n<ng-template #phTpl>\n  <div class=\"page-header\" [class.page-header-rtl]=\"dir === 'rtl'\">\n    <div [ngClass]=\"{ 'page-header__wide': wide }\">\n      <nz-skeleton\n        [nzLoading]=\"loading\"\n        [nzTitle]=\"false\"\n        [nzActive]=\"true\"\n        [nzParagraph]=\"{ rows: 3 }\"\n        [nzAvatar]=\"{ size: 'large', shape: 'circle' }\"\n        class=\"d-block\"\n      >\n        <ng-container *ngIf=\"!breadcrumb; else breadcrumb!\">\n          <nz-breadcrumb *ngIf=\"paths && paths.length > 0\">\n            <nz-breadcrumb-item *ngFor=\"let i of paths\">\n              <ng-container *ngIf=\"i.link\">\n                <a [routerLink]=\"i.link\">{{ i.title }}</a>\n              </ng-container>\n              <ng-container *ngIf=\"!i.link\">{{ i.title }}</ng-container>\n            </nz-breadcrumb-item>\n          </nz-breadcrumb>\n        </ng-container>\n        <div class=\"page-header__detail\">\n          <div *ngIf=\"logo\" class=\"page-header__logo\">\n            <ng-template [ngTemplateOutlet]=\"logo\"></ng-template>\n          </div>\n          <div class=\"page-header__main\">\n            <div class=\"page-header__row\">\n              <h1 *ngIf=\"_titleVal || _titleTpl\" class=\"page-header__title\">\n                <ng-container *ngIf=\"_titleVal; else _titleTpl\">{{ _titleVal }}</ng-container>\n              </h1>\n              <div *ngIf=\"action\" class=\"page-header__action\">\n                <ng-template [ngTemplateOutlet]=\"action\"></ng-template>\n              </div>\n            </div>\n            <div class=\"page-header__row\">\n              <div class=\"page-header__desc\" (cdkObserveContent)=\"checkContent()\" #conTpl>\n                <ng-content></ng-content>\n                <ng-template [ngTemplateOutlet]=\"content!\"></ng-template>\n              </div>\n              <div *ngIf=\"extra\" class=\"page-header__extra\">\n                <ng-template [ngTemplateOutlet]=\"extra\"></ng-template>\n              </div>\n            </div>\n          </div>\n        </div>\n        <ng-template [ngTemplateOutlet]=\"tab!\"></ng-template>\n      </nz-skeleton>\n    </div>\n  </div>\n</ng-template>\n",
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.SettingsService }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc2.Router }, { type: ɵngcc1.MenuService }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [ALAIN_I18N_TOKEN]
            }] }, { type: ɵngcc1.TitleService, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [TitleService]
            }] }, { type: ɵngcc11.ReuseTabService, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [ReuseTabService]
            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc3.AlainConfigService }, { type: ɵngcc4.Platform }, { type: ɵngcc5.Directionality, decorators: [{
                type: Optional
            }] }]; }, { loading: [{
            type: Input
        }], wide: [{
            type: Input
        }], breadcrumb: [{
            type: Input
        }], logo: [{
            type: Input
        }], action: [{
            type: Input
        }], content: [{
            type: Input
        }], extra: [{
            type: Input
        }], tab: [{
            type: Input
        }], title: [{
            type: Input
        }], conTpl: [{
            type: ViewChild,
            args: ['conTpl', { static: false }]
        }], affix: [{
            type: ViewChild,
            args: ['affix', { static: false }]
        }], home: [{
            type: Input
        }], homeLink: [{
            type: Input
        }], homeI18n: [{
            type: Input
        }], autoBreadcrumb: [{
            type: Input
        }], autoTitle: [{
            type: Input
        }], syncTitle: [{
            type: Input
        }], fixed: [{
            type: Input
        }], fixedOffsetTop: [{
            type: Input
        }], recursiveBreadcrumb: [{
            type: Input
        }] }); })();

const COMPONENTS = [PageHeaderComponent];
class PageHeaderModule {
}
PageHeaderModule.ɵfac = function PageHeaderModule_Factory(t) { return new (t || PageHeaderModule)(); };
PageHeaderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: PageHeaderModule });
PageHeaderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, RouterModule, ObserversModule, NzAffixModule, NzSkeletonModule, NzBreadCrumbModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PageHeaderModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule, ObserversModule, NzAffixModule, NzSkeletonModule, NzBreadCrumbModule],
                declarations: COMPONENTS,
                exports: COMPONENTS
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PageHeaderModule, { declarations: function () { return [PageHeaderComponent]; }, imports: function () { return [CommonModule, RouterModule, ObserversModule, NzAffixModule, NzSkeletonModule, NzBreadCrumbModule]; }, exports: function () { return [PageHeaderComponent]; } }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { PageHeaderComponent, PageHeaderModule };

//# sourceMappingURL=pageHeader.js.map