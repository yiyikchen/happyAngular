import { Directive, ViewContainerRef, Inject, TemplateRef, Input, NgModule } from '@angular/core';

import * as ɵngcc0 from '@angular/core';
class LetContext {
    constructor(dir) {
        this.dir = dir;
    }
    get $implicit() {
        return this.dir.let;
    }
    get let() {
        return this.dir.let;
    }
}
class LetDirective {
    constructor(vc, ref) {
        vc.createEmbeddedView(ref, new LetContext(this));
    }
    static ngTemplateContextGuard(_dir, _ctx) {
        return true;
    }
}
LetDirective.ɵfac = function LetDirective_Factory(t) { return new (t || LetDirective)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };
LetDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: LetDirective, selectors: [["", "let", ""]], inputs: { let: "let" } });
LetDirective.ctorParameters = () => [
    { type: ViewContainerRef, decorators: [{ type: Inject, args: [ViewContainerRef,] }] },
    { type: TemplateRef, decorators: [{ type: Inject, args: [TemplateRef,] }] }
];
LetDirective.propDecorators = {
    let: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LetDirective, [{
        type: Directive,
        args: [{ selector: '[let]' }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef, decorators: [{
                type: Inject,
                args: [ViewContainerRef]
            }] }, { type: ɵngcc0.TemplateRef, decorators: [{
                type: Inject,
                args: [TemplateRef]
            }] }]; }, { let: [{
            type: Input
        }] }); })();

const DIRECTIVES = [LetDirective];
class LetModule {
}
LetModule.ɵfac = function LetModule_Factory(t) { return new (t || LetModule)(); };
LetModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LetModule });
LetModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LetModule, [{
        type: NgModule,
        args: [{
                declarations: DIRECTIVES,
                exports: DIRECTIVES
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LetModule, { declarations: [LetDirective], exports: [LetDirective] }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { LetContext, LetDirective, LetModule };

//# sourceMappingURL=let.js.map