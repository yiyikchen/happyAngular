{"version":3,"file":"lodop.js","sources":["../../../../packages/abc/lodop/lodop.service.ts","../../../../packages/abc/lodop/lodop.module.ts","../../../../packages/abc/lodop/lodop.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\n\nimport { AlainConfigService, AlainLodopConfig } from '@delon/util/config';\nimport { LazyService } from '@delon/util/other';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { Lodop, LodopPrintResult, LodopResult } from './lodop.types';\n\n@Injectable({ providedIn: 'root' })\nexport class LodopService implements OnDestroy {\n  private defaultConfig: AlainLodopConfig;\n  private _cog: AlainLodopConfig;\n  private pending = false;\n  private _lodop: Lodop | null = null;\n  private _init = new Subject<LodopResult>();\n  private _events = new Subject<LodopPrintResult>();\n  private printBuffer: NzSafeAny[] = [];\n\n  constructor(private scriptSrv: LazyService, configSrv: AlainConfigService) {\n    this.defaultConfig = configSrv.merge('lodop', {\n      url: '//localhost:8443/CLodopfuncs.js',\n      name: 'CLODOP',\n      companyName: '',\n      checkMaxCount: 100\n    })!;\n    this.cog = this.defaultConfig;\n  }\n\n  /**\n   * Get or set configuration, **Note:** Resetting will invert and reload script resources\n   *\n   * 获取或重新设置配置，**注：**重新设置会倒置重新加载脚本资源\n   */\n  get cog(): AlainLodopConfig {\n    return this._cog;\n  }\n  set cog(value: AlainLodopConfig) {\n    this._cog = {\n      ...this.defaultConfig,\n      ...value\n    };\n  }\n\n  /**\n   * Event change notification\n   *\n   * 事件变更通知\n   */\n  get events(): Observable<LodopPrintResult> {\n    return this._events.asObservable();\n  }\n\n  /**\n   * Get lodop object\n   *\n   * 获取 lodop 对象\n   */\n  get lodop(): Observable<LodopResult> {\n    if (this._lodop) return of({ ok: true, lodop: this._lodop } as LodopResult);\n    if (this.pending) return this._init.asObservable();\n\n    this.request();\n\n    return this._init.asObservable();\n  }\n\n  /**\n   * Get printer list\n   *\n   * 获取打印机列表\n   */\n  get printer(): string[] {\n    this.check();\n    const ret: string[] = [];\n    const count = this._lodop!.GET_PRINTER_COUNT();\n    for (let index = 0; index < count; index++) {\n      ret.push(this._lodop!.GET_PRINTER_NAME(index));\n    }\n    return ret;\n  }\n\n  private check(): void {\n    if (!this._lodop) throw new Error(`请务必先调用 lodop 获取对象`);\n  }\n\n  private request(): void {\n    this.pending = true;\n\n    const url = `${this.cog.url}?name=${this.cog.name}`;\n    let checkMaxCount = this.cog.checkMaxCount as number;\n    const onResolve = (status: NzSafeAny, error?: NzSafeAny) => {\n      this._init.next({\n        ok: status === 'ok',\n        status,\n        error,\n        lodop: this._lodop!\n      });\n    };\n    const checkStatus = () => {\n      --checkMaxCount;\n      if (this._lodop!.webskt && this._lodop!.webskt.readyState === 1) {\n        onResolve('ok');\n      } else {\n        if (checkMaxCount < 0) {\n          onResolve('check-limit');\n          return;\n        }\n        setTimeout(() => checkStatus(), 100);\n      }\n    };\n\n    this.scriptSrv.loadScript(url).then((res: NzSafeAny) => {\n      if (res.status !== 'ok') {\n        this.pending = false;\n        onResolve('script-load-error', res[0]);\n        return;\n      }\n      const win = window as NzSafeAny;\n      if (win.hasOwnProperty(this.cog.name!)) {\n        this._lodop = win[this.cog.name!] as Lodop;\n      }\n      if (this._lodop === null) {\n        onResolve('load-variable-name-error', { name: this.cog.name });\n        return;\n      }\n      this._lodop.SET_LICENSES(this.cog.companyName!, this.cog.license!, this.cog.licenseA, this.cog.licenseB);\n      checkStatus();\n    });\n  }\n\n  /**\n   * Reset lodop object\n   *\n   * 重置 lodop 对象\n   */\n  reset(): void {\n    this._lodop = null;\n    this.pending = false;\n    this.request();\n  }\n\n  /**\n   * Attach code to the `lodop` object, the string class supports dynamic parameters of `{{key}}`,\n   * **Note:** The code refers to the string data generated by the print design\n   *\n   * 附加代码至 `lodop` 对象上，字符串类支持 `{{key}}` 的动态参数，**注：** 代码是指打印设计所产生字符串数据\n   */\n  attachCode(code: string, contextObj?: NzSafeAny, parser?: RegExp): void {\n    this.check();\n    if (!parser) parser = /LODOP\\.([^(]+)\\(([^\\n]+)?\\);/i;\n    code.split('\\n').forEach(line => {\n      const res = parser!.exec(line.trim());\n      if (!res) return;\n      const fn = this._lodop![res[1]];\n      if (fn) {\n        let arr: NzSafeAny[] | null = null;\n        try {\n          const fakeFn = new Function(`return [${res[2]}]`);\n          arr = fakeFn();\n        } catch {}\n\n        if (arr != null && Array.isArray(arr) && contextObj) {\n          for (let i = 0; i < arr.length; i++) {\n            if (typeof arr[i] === 'string') {\n              arr[i] = (arr[i] as string).replace(/{{(.*?)}}/g, (_match, key) => contextObj[key.trim()] || '');\n            }\n          }\n        }\n        fn.apply(this._lodop, arr!);\n      }\n    });\n  }\n\n  /**\n   * The code is automatically returned after opening the print design and closing,\n   * **Note:** Automatically listen for the `On_Return` event, and it will be removed after running\n   *\n   * 打开打印设计关闭后自动返回代码，**注：** 自动监听 `On_Return` 事件，运行后会移除\n   */\n  design(): Promise<string> {\n    this.check();\n    const tid = this._lodop!.PRINT_DESIGN();\n    return new Promise(resolve => {\n      this._lodop!.On_Return = (taskID: string, value: boolean | string) => {\n        if (tid !== taskID) return;\n        this._lodop!.On_Return = null;\n        resolve(`${value}`);\n      };\n    });\n  }\n  private printDo(): void {\n    const data = this.printBuffer.shift();\n    if (!data) return;\n    this.attachCode(data.code, data.item, data.parser);\n    const tid = this._lodop!.PRINT();\n    this._lodop!.On_Return = (taskID: string, value: boolean | string) => {\n      if (tid !== taskID) return;\n      this._lodop!.On_Return = null;\n      this._events.next({\n        ok: value === true,\n        error: value === true ? null : value,\n        ...data\n      });\n      this.printDo();\n    };\n  }\n\n  /**\n   * Print immediately, generally used for batch printing\n   *\n   * 立即打印，一般用于批量套打\n   */\n  print(code: string, contextObj: NzSafeAny, parser?: RegExp): void {\n    this.check();\n    if (contextObj) {\n      this.printBuffer.push(\n        ...(Array.isArray(contextObj) ? contextObj : [contextObj]).map(item => {\n          return { code, parser, item };\n        })\n      );\n    }\n    this.printDo();\n  }\n\n  ngOnDestroy(): void {\n    this._init.unsubscribe();\n    this._events.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({})\nexport class LodopModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;MAUa,YAAY;IASvB,YAAoB,SAAsB,EAAE,SAA6B;QAArD,cAAS,GAAT,SAAS,CAAa;QANlC,YAAO,GAAG,KAAK,CAAC;QAChB,WAAM,GAAiB,IAAI,CAAC;QAC5B,UAAK,GAAG,IAAI,OAAO,EAAe,CAAC;QACnC,YAAO,GAAG,IAAI,OAAO,EAAoB,CAAC;QAC1C,gBAAW,GAAgB,EAAE,CAAC;QAGpC,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE;YAC5C,GAAG,EAAE,iCAAiC;YACtC,IAAI,EAAE,QAAQ;YACd,WAAW,EAAE,EAAE;YACf,aAAa,EAAE,GAAG;SACnB,CAAE,CAAC;QACJ,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;KAC/B;;;;;;IAOD,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IACD,IAAI,GAAG,CAAC,KAAuB;QAC7B,IAAI,CAAC,IAAI,mCACJ,IAAI,CAAC,aAAa,GAClB,KAAK,CACT,CAAC;KACH;;;;;;IAOD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;KACpC;;;;;;IAOD,IAAI,KAAK;QACP,IAAI,IAAI,CAAC,MAAM;YAAE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAiB,CAAC,CAAC;QAC5E,IAAI,IAAI,CAAC,OAAO;YAAE,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;QAEnD,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;KAClC;;;;;;IAOD,IAAI,OAAO;QACT,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,MAAM,GAAG,GAAa,EAAE,CAAC;QACzB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAO,CAAC,iBAAiB,EAAE,CAAC;QAC/C,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,EAAE;YAC1C,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;SAChD;QACD,OAAO,GAAG,CAAC;KACZ;IAEO,KAAK;QACX,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;KACxD;IAEO,OAAO;QACb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QACpD,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,aAAuB,CAAC;QACrD,MAAM,SAAS,GAAG,CAAC,MAAiB,EAAE,KAAiB;YACrD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACd,EAAE,EAAE,MAAM,KAAK,IAAI;gBACnB,MAAM;gBACN,KAAK;gBACL,KAAK,EAAE,IAAI,CAAC,MAAO;aACpB,CAAC,CAAC;SACJ,CAAC;QACF,MAAM,WAAW,GAAG;YAClB,EAAE,aAAa,CAAC;YAChB,IAAI,IAAI,CAAC,MAAO,CAAC,MAAM,IAAI,IAAI,CAAC,MAAO,CAAC,MAAM,CAAC,UAAU,KAAK,CAAC,EAAE;gBAC/D,SAAS,CAAC,IAAI,CAAC,CAAC;aACjB;iBAAM;gBACL,IAAI,aAAa,GAAG,CAAC,EAAE;oBACrB,SAAS,CAAC,aAAa,CAAC,CAAC;oBACzB,OAAO;iBACR;gBACD,UAAU,CAAC,MAAM,WAAW,EAAE,EAAE,GAAG,CAAC,CAAC;aACtC;SACF,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAc;YACjD,IAAI,GAAG,CAAC,MAAM,KAAK,IAAI,EAAE;gBACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,SAAS,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvC,OAAO;aACR;YACD,MAAM,GAAG,GAAG,MAAmB,CAAC;YAChC,IAAI,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,IAAK,CAAC,EAAE;gBACtC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAK,CAAU,CAAC;aAC5C;YACD,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;gBACxB,SAAS,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC/D,OAAO;aACR;YACD,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,WAAY,EAAE,IAAI,CAAC,GAAG,CAAC,OAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACzG,WAAW,EAAE,CAAC;SACf,CAAC,CAAC;KACJ;;;;;;IAOD,KAAK;QACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;;;;;;;IAQD,UAAU,CAAC,IAAY,EAAE,UAAsB,EAAE,MAAe;QAC9D,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,MAAM;YAAE,MAAM,GAAG,+BAA+B,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI;YAC3B,MAAM,GAAG,GAAG,MAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YACtC,IAAI,CAAC,GAAG;gBAAE,OAAO;YACjB,MAAM,EAAE,GAAG,IAAI,CAAC,MAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,EAAE,EAAE;gBACN,IAAI,GAAG,GAAuB,IAAI,CAAC;gBACnC,IAAI;oBACF,MAAM,MAAM,GAAG,IAAI,QAAQ,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBAClD,GAAG,GAAG,MAAM,EAAE,CAAC;iBAChB;gBAAC,WAAM,GAAE;gBAEV,IAAI,GAAG,IAAI,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,UAAU,EAAE;oBACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACnC,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;4BAC9B,GAAG,CAAC,CAAC,CAAC,GAAI,GAAG,CAAC,CAAC,CAAY,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,MAAM,EAAE,GAAG,KAAK,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;yBAClG;qBACF;iBACF;gBACD,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAI,CAAC,CAAC;aAC7B;SACF,CAAC,CAAC;KACJ;;;;;;;IAQD,MAAM;QACJ,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,MAAM,GAAG,GAAG,IAAI,CAAC,MAAO,CAAC,YAAY,EAAE,CAAC;QACxC,OAAO,IAAI,OAAO,CAAC,OAAO;YACxB,IAAI,CAAC,MAAO,CAAC,SAAS,GAAG,CAAC,MAAc,EAAE,KAAuB;gBAC/D,IAAI,GAAG,KAAK,MAAM;oBAAE,OAAO;gBAC3B,IAAI,CAAC,MAAO,CAAC,SAAS,GAAG,IAAI,CAAC;gBAC9B,OAAO,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC;aACrB,CAAC;SACH,CAAC,CAAC;KACJ;IACO,OAAO;QACb,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI;YAAE,OAAO;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACnD,MAAM,GAAG,GAAG,IAAI,CAAC,MAAO,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,CAAC,MAAO,CAAC,SAAS,GAAG,CAAC,MAAc,EAAE,KAAuB;YAC/D,IAAI,GAAG,KAAK,MAAM;gBAAE,OAAO;YAC3B,IAAI,CAAC,MAAO,CAAC,SAAS,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,iBACf,EAAE,EAAE,KAAK,KAAK,IAAI,EAClB,KAAK,EAAE,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,KAAK,IACjC,IAAI,EACP,CAAC;YACH,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB,CAAC;KACH;;;;;;IAOD,KAAK,CAAC,IAAY,EAAE,UAAqB,EAAE,MAAe;QACxD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,IAAI,CACnB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,UAAU,GAAG,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,IAAI;gBACjE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;aAC/B,CAAC,CACH,CAAC;SACH;QACD,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;IAED,WAAW;QACT,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;KAC5B;;;;YA3NF,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;YALzB,WAAW;YADX,kBAAkB;;;MCAd,WAAW;;;YADvB,QAAQ,SAAC,EAAE;;;ACFZ;;;;;;"}