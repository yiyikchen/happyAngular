{"version":3,"file":"reuse-tab.component.d.ts","sources":["reuse-tab.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Platform } from '@angular/cdk/platform';\nimport { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChange, SimpleChanges, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlainI18NService } from '@delon/theme';\nimport { BooleanInput, NumberInput } from '@delon/util/decorator';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { ReuseContextCloseEvent, ReuseContextI18n, ReuseCustomContextMenu, ReuseItem, ReuseTabMatchMode, ReuseTabRouteParamMatchMode } from './reuse-tab.interfaces';\nimport { ReuseTabService } from './reuse-tab.service';\nexport declare class ReuseTabComponent implements OnInit, OnChanges, OnDestroy {\n    private srv;\n    private cdr;\n    private router;\n    private route;\n    private i18nSrv;\n    private doc;\n    private platform;\n    static ngAcceptInputType_debug: BooleanInput;\n    static ngAcceptInputType_max: NumberInput;\n    static ngAcceptInputType_tabMaxWidth: NumberInput;\n    static ngAcceptInputType_allowClose: BooleanInput;\n    static ngAcceptInputType_keepingScroll: BooleanInput;\n    static ngAcceptInputType_disabled: BooleanInput;\n    private tabset;\n    private unsubscribe$;\n    private updatePos$;\n    private _keepingScrollContainer;\n    list: ReuseItem[];\n    item: ReuseItem;\n    pos: number;\n    mode: ReuseTabMatchMode;\n    i18n: ReuseContextI18n;\n    debug: boolean;\n    max: number;\n    tabMaxWidth: number;\n    excludes: RegExp[];\n    allowClose: boolean;\n    keepingScroll: boolean;\n    set keepingScrollContainer(value: string | Element);\n    customContextMenu: ReuseCustomContextMenu[];\n    tabBarExtraContent: TemplateRef<void>;\n    tabBarGutter: number;\n    tabBarStyle: {\n        [key: string]: string;\n    };\n    tabType: 'line' | 'card';\n    routeParamMatchMode: ReuseTabRouteParamMatchMode;\n    disabled: boolean;\n    titleRender?: TemplateRef<{\n        $implicit: ReuseItem;\n    }>;\n    readonly change: EventEmitter<ReuseItem>;\n    readonly close: EventEmitter<ReuseItem | null>;\n    constructor(srv: ReuseTabService, cdr: ChangeDetectorRef, router: Router, route: ActivatedRoute, i18nSrv: AlainI18NService, doc: NzSafeAny, platform: Platform);\n    private genTit;\n    private get curUrl();\n    private genCurItem;\n    private genList;\n    private updateTitle;\n    private refresh;\n    contextMenuChange(res: ReuseContextCloseEvent): void;\n    _to(index: number, cb?: () => void): void;\n    _close(e: Event | null, idx: number, includeNonCloseable: boolean): boolean;\n    activate(instance: NzSafeAny): void;\n    ngOnInit(): void;\n    ngOnChanges(changes: {\n        [P in keyof this]?: SimpleChange;\n    } & SimpleChanges): void;\n    ngOnDestroy(): void;\n}\n"]}