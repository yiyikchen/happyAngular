{"version":3,"file":"se.component.d.ts","sources":["se.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, AfterViewInit, ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, Renderer2, TemplateRef } from '@angular/core';\nimport { ResponsiveService } from '@delon/theme';\nimport { BooleanInput, NumberInput } from '@delon/util/decorator';\nimport { SEContainerComponent } from './se-container.component';\nimport { SEErrorType } from './se.types';\nexport declare class SEComponent implements OnChanges, AfterContentInit, AfterViewInit, OnDestroy {\n    private parent;\n    private rep;\n    private ren;\n    private cdr;\n    static ngAcceptInputType_col: NumberInput;\n    static ngAcceptInputType_required: BooleanInput;\n    static ngAcceptInputType_line: BooleanInput;\n    static ngAcceptInputType_labelWidth: NumberInput;\n    static ngAcceptInputType_noColon: BooleanInput;\n    private el;\n    private unsubscribe$;\n    private readonly ngModel;\n    private readonly formControlName;\n    private readonly contentElement;\n    private clsMap;\n    private inited;\n    private onceFlag;\n    private errorData;\n    private isBindModel;\n    invalid: boolean;\n    _labelWidth: number | null;\n    _noColon: boolean | null;\n    _error: string | TemplateRef<void>;\n    optional?: string | TemplateRef<void> | null;\n    optionalHelp?: string | TemplateRef<void> | null;\n    optionalHelpColor: string;\n    set error(val: SEErrorType);\n    extra?: string | TemplateRef<void> | null;\n    label?: string | TemplateRef<void> | null;\n    col: number;\n    required: boolean;\n    controlClass?: string | null;\n    line: boolean;\n    labelWidth: number;\n    noColon: boolean;\n    set id(value: string);\n    _id: string;\n    _autoId: boolean;\n    get paddingValue(): number;\n    get showErr(): boolean;\n    get compact(): boolean;\n    private get ngControl();\n    constructor(el: ElementRef, parent: SEContainerComponent, rep: ResponsiveService, ren: Renderer2, cdr: ChangeDetectorRef);\n    private setClass;\n    private bindModel;\n    private updateStatus;\n    checkContent(): void;\n    ngAfterContentInit(): void;\n    ngOnChanges(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n}\n"]}