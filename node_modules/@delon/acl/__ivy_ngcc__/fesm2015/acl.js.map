{"version":3,"file":"acl.js","sources":["../../../../packages/acl/src/acl.config.ts","../../../../packages/acl/src/acl.service.ts","../../../../packages/acl/src/acl-if.directive.ts","../../../../packages/acl/src/acl.directive.ts","../../../../packages/acl/src/acl.type.ts","../../../../packages/acl/src/acl-guard.ts","../../../../packages/acl/src/acl.module.ts","../../../../packages/acl/acl.ts"],"names":[],"mappings":"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","sourcesContent":["import { AlainACLConfig } from '@delon/util/config';\n\nexport const ACL_DEFAULT_CONFIG: AlainACLConfig = {\n  guard_url: `/403`\n};\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { AlainACLConfig, AlainConfigService } from '@delon/util/config';\n\nimport { ACL_DEFAULT_CONFIG } from './acl.config';\nimport { ACLCanType, ACLType } from './acl.type';\n\n/**\n * ACL 控制服务，[在线文档](https://ng-alain.com/acl)\n *\n * 务必在根目录注册 `DelonACLModule.forRoot()` 才能使用服务\n */\n@Injectable()\nexport class ACLService {\n  private options: AlainACLConfig;\n  private roles: string[] = [];\n  private abilities: Array<number | string> = [];\n  private full = false;\n  private aclChange = new BehaviorSubject<ACLType | boolean | null>(null);\n\n  /** ACL变更通知 */\n  get change(): Observable<ACLType | boolean | null> {\n    return this.aclChange.asObservable();\n  }\n\n  /** 获取所有数据 */\n  get data(): { full: boolean; roles: string[]; abilities: Array<string | number> } {\n    return {\n      full: this.full,\n      roles: this.roles,\n      abilities: this.abilities\n    };\n  }\n\n  get guard_url(): string {\n    return this.options.guard_url!;\n  }\n\n  constructor(configSrv: AlainConfigService) {\n    this.options = configSrv.merge('acl', ACL_DEFAULT_CONFIG)!;\n  }\n\n  private parseACLType(val: string | string[] | number | number[] | ACLType | null): ACLType {\n    let t: ACLType;\n    if (typeof val === 'number') {\n      t = { ability: [val] };\n    } else if (Array.isArray(val) && val.length > 0 && typeof val[0] === 'number') {\n      t = { ability: val };\n    } else if (typeof val === 'object' && !Array.isArray(val)) {\n      t = { ...val };\n    } else if (Array.isArray(val)) {\n      t = { role: val as string[] };\n    } else {\n      t = { role: val == null ? [] : [val] };\n    }\n\n    return { except: false, ...t };\n  }\n\n  /**\n   * 设置当前用户角色或权限能力（会先清除所有）\n   */\n  set(value: ACLType): void {\n    this.full = false;\n    this.abilities = [];\n    this.roles = [];\n    this.add(value);\n    this.aclChange.next(value);\n  }\n\n  /**\n   * 标识当前用户为全量，即不受限\n   */\n  setFull(val: boolean): void {\n    this.full = val;\n    this.aclChange.next(val);\n  }\n\n  /**\n   * 设置当前用户权限能力（会先清除所有）\n   */\n  setAbility(abilities: Array<number | string>): void {\n    this.set({ ability: abilities } as ACLType);\n  }\n\n  /**\n   * 设置当前用户角色（会先清除所有）\n   */\n  setRole(roles: string[]): void {\n    this.set({ role: roles } as ACLType);\n  }\n\n  /**\n   * 为当前用户增加角色或权限能力\n   */\n  add(value: ACLType): void {\n    if (value.role && value.role.length > 0) {\n      this.roles.push(...value.role);\n    }\n    if (value.ability && value.ability.length > 0) {\n      this.abilities.push(...value.ability);\n    }\n  }\n\n  /**\n   * 为当前用户附加角色\n   */\n  attachRole(roles: string[]): void {\n    for (const val of roles) {\n      if (!this.roles.includes(val)) {\n        this.roles.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 为当前用户附加权限\n   */\n  attachAbility(abilities: Array<number | string>): void {\n    for (const val of abilities) {\n      if (!this.abilities.includes(val)) {\n        this.abilities.push(val);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 为当前用户移除角色\n   */\n  removeRole(roles: string[]): void {\n    for (const val of roles) {\n      const idx = this.roles.indexOf(val);\n      if (idx !== -1) {\n        this.roles.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 为当前用户移除权限\n   */\n  removeAbility(abilities: Array<number | string>): void {\n    for (const val of abilities) {\n      const idx = this.abilities.indexOf(val);\n      if (idx !== -1) {\n        this.abilities.splice(idx, 1);\n      }\n    }\n    this.aclChange.next(this.data);\n  }\n\n  /**\n   * 当前用户是否有对应角色，其实 `number` 表示Ability\n   *\n   * - 当 `full: true` 或参数 `null` 时返回 `true`\n   * - 若使用 `ACLType` 参数，可以指定 `mode` 校验模式\n   */\n  can(roleOrAbility: ACLCanType | null): boolean {\n    const { preCan } = this.options;\n    if (preCan) {\n      roleOrAbility = preCan(roleOrAbility!);\n    }\n\n    const t = this.parseACLType(roleOrAbility);\n    let result = false;\n    if (this.full === true || !roleOrAbility) {\n      result = true;\n    } else {\n      if (t.role && t.role.length > 0) {\n        if (t.mode === 'allOf') {\n          result = t.role.every(v => this.roles.includes(v));\n        } else {\n          result = t.role.some(v => this.roles.includes(v));\n        }\n      }\n      if (t.ability && t.ability.length > 0) {\n        if (t.mode === 'allOf') {\n          result = (t.ability as Array<number | string>).every(v => this.abilities.includes(v));\n        } else {\n          result = (t.ability as Array<number | string>).some(v => this.abilities.includes(v));\n        }\n      }\n    }\n\n    return t.except === true ? !result : result;\n  }\n\n  /** @inner */\n  parseAbility(value: ACLCanType): ACLCanType {\n    if (typeof value === 'number' || typeof value === 'string' || Array.isArray(value)) {\n      value = { ability: Array.isArray(value) ? value : [value] } as ACLType;\n    }\n    delete value.role;\n    return value;\n  }\n\n  /**\n   * 当前用户是否有对应权限点\n   */\n  canAbility(value: ACLCanType): boolean {\n    return this.can(this.parseAbility(value));\n  }\n}\n","import { Directive, EmbeddedViewRef, Input, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n@Directive({\n  selector: '[aclIf]',\n  exportAs: 'aclIf'\n})\nexport class ACLIfDirective implements OnDestroy {\n  static ngAcceptInputType_except: boolean | string | undefined | null;\n\n  private _value: ACLCanType;\n  private _change$: Subscription;\n  private _thenTemplateRef: TemplateRef<void> | null = null;\n  private _elseTemplateRef: TemplateRef<void> | null = null;\n  private _thenViewRef: EmbeddedViewRef<void> | null = null;\n  private _elseViewRef: EmbeddedViewRef<void> | null = null;\n  private _except = false;\n\n  constructor(templateRef: TemplateRef<void>, private srv: ACLService, private _viewContainer: ViewContainerRef) {\n    this._change$ = this.srv.change.pipe(filter(r => r != null)).subscribe(() => this._updateView());\n    this._thenTemplateRef = templateRef;\n  }\n\n  @Input()\n  set aclIf(value: ACLCanType) {\n    this._value = value;\n    this._updateView();\n  }\n\n  @Input()\n  set aclIfThen(templateRef: TemplateRef<void> | null) {\n    this._thenTemplateRef = templateRef;\n    this._thenViewRef = null;\n    this._updateView();\n  }\n\n  @Input()\n  set aclIfElse(templateRef: TemplateRef<void> | null) {\n    this._elseTemplateRef = templateRef;\n    this._elseViewRef = null;\n    this._updateView();\n  }\n\n  @Input()\n  set except(value: boolean) {\n    this._except = value != null && `${value}` !== 'false';\n  }\n  get except(): boolean {\n    return this._except;\n  }\n\n  protected _updateView(): void {\n    const res = this.srv.can(this._value);\n    if ((res && !this.except) || (!res && this.except)) {\n      if (!this._thenViewRef) {\n        this._viewContainer.clear();\n        this._elseViewRef = null;\n        if (this._thenTemplateRef) {\n          this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef);\n        }\n      }\n    } else {\n      if (!this._elseViewRef) {\n        this._viewContainer.clear();\n        this._thenViewRef = null;\n        if (this._elseTemplateRef) {\n          this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef);\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._change$.unsubscribe();\n  }\n}\n","import { Directive, ElementRef, Input, OnDestroy, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n@Directive({\n  selector: '[acl]',\n  exportAs: 'acl'\n})\nexport class ACLDirective implements OnDestroy {\n  private _value: ACLCanType;\n  private change$: Subscription;\n\n  @Input('acl')\n  set acl(value: ACLCanType) {\n    this.set(value);\n  }\n\n  @Input('acl-ability')\n  set ability(value: ACLCanType) {\n    this.set(this.srv.parseAbility(value));\n  }\n\n  private set(value: ACLCanType): void {\n    this._value = value;\n    const CLS = 'acl__hide';\n    const el = this.el.nativeElement;\n    if (this.srv.can(this._value)) {\n      this.renderer.removeClass(el, CLS);\n    } else {\n      this.renderer.addClass(el, CLS);\n    }\n  }\n\n  constructor(private el: ElementRef, private renderer: Renderer2, protected srv: ACLService) {\n    this.change$ = this.srv.change.pipe(filter(r => r != null)).subscribe(() => this.set(this._value));\n  }\n\n  ngOnDestroy(): void {\n    this.change$.unsubscribe();\n  }\n}\n","/**\n * NOTE：`ACLType` 类型可能会被其他类库所引用，为了减少类库间彼此的依赖性，其他类库会以复制的形式存在\n * 当这里有变化时，请务必同步更新，涉及：`MenuService.acl`、`util.AlainACLType`\n * TODO: 尝试增加 `@delon/core` 类库用于处理这种通用型\n */\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport interface ACLType {\n  /**\n   * 角色\n   */\n  role?: string[];\n  /**\n   * 权限点\n   */\n  ability?: number[] | string[];\n\n  /**\n   * Validated against, default: `oneOf`\n   * - `allOf` the value validates against all the roles or abilities\n   * - `oneOf` the value validates against exactly one of the roles or abilities\n   */\n  mode?: 'allOf' | 'oneOf';\n\n  /**\n   * 是否取反，即结果为 `true` 时表示未授权\n   */\n  except?: boolean;\n\n  [key: string]: NzSafeAny;\n}\n\nexport type ACLCanType = number | number[] | string | string[] | ACLType;\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Data,\n  Route,\n  Router,\n  RouterStateSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { ACLService } from './acl.service';\nimport { ACLCanType } from './acl.type';\n\n/**\n * Routing guard prevent unauthorized users visit the page, [ACL Document](https://ng-alain.com/acl).\n *\n * ```ts\n * data: {\n *  path: 'home',\n *  canActivate: [ ACLGuard ],\n *  data: { guard: 'user1' }\n * }\n * ```\n */\n@Injectable({ providedIn: 'root' })\nexport class ACLGuard implements CanActivate, CanActivateChild, CanLoad {\n  constructor(private srv: ACLService, private router: Router) {}\n\n  private process(data: Data): Observable<boolean> {\n    data = {\n      guard: null,\n      guard_url: this.srv.guard_url,\n      ...data\n    };\n    const guard: ACLCanType | Observable<ACLCanType> = data.guard;\n    return (guard && guard instanceof Observable ? guard : of(guard != null ? (guard as ACLCanType) : null)).pipe(\n      map(v => this.srv.can(v)),\n      tap(v => {\n        if (v) return;\n        this.router.navigateByUrl(data.guard_url);\n      })\n    );\n  }\n\n  // lazy loading\n  canLoad(route: Route): Observable<boolean> {\n    return this.process(route.data!);\n  }\n  // all children route\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.canActivate(childRoute, state);\n  }\n  // route\n  canActivate(route: ActivatedRouteSnapshot, _state: RouterStateSnapshot | null): Observable<boolean> {\n    return this.process(route.data);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ACLIfDirective } from './acl-if.directive';\nimport { ACLDirective } from './acl.directive';\nimport { ACLService } from './acl.service';\n\nconst COMPONENTS = [ACLDirective, ACLIfDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: COMPONENTS,\n  exports: COMPONENTS\n})\nexport class DelonACLModule {\n  static forRoot(): ModuleWithProviders<DelonACLModule> {\n    return {\n      ngModule: DelonACLModule,\n      providers: [ACLService]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}