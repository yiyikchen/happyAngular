{"version":3,"file":"acl.service.d.ts","sources":["acl.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Observable } from 'rxjs';\nimport { AlainConfigService } from '@delon/util/config';\nimport { ACLCanType, ACLType } from './acl.type';\n/**\n * ACL 控制服务，[在线文档](https://ng-alain.com/acl)\n *\n * 务必在根目录注册 `DelonACLModule.forRoot()` 才能使用服务\n */\nexport declare class ACLService {\n    private options;\n    private roles;\n    private abilities;\n    private full;\n    private aclChange;\n    /** ACL变更通知 */\n    get change(): Observable<ACLType | boolean | null>;\n    /** 获取所有数据 */\n    get data(): {\n        full: boolean;\n        roles: string[];\n        abilities: Array<string | number>;\n    };\n    get guard_url(): string;\n    constructor(configSrv: AlainConfigService);\n    private parseACLType;\n    /**\n     * 设置当前用户角色或权限能力（会先清除所有）\n     */\n    set(value: ACLType): void;\n    /**\n     * 标识当前用户为全量，即不受限\n     */\n    setFull(val: boolean): void;\n    /**\n     * 设置当前用户权限能力（会先清除所有）\n     */\n    setAbility(abilities: Array<number | string>): void;\n    /**\n     * 设置当前用户角色（会先清除所有）\n     */\n    setRole(roles: string[]): void;\n    /**\n     * 为当前用户增加角色或权限能力\n     */\n    add(value: ACLType): void;\n    /**\n     * 为当前用户附加角色\n     */\n    attachRole(roles: string[]): void;\n    /**\n     * 为当前用户附加权限\n     */\n    attachAbility(abilities: Array<number | string>): void;\n    /**\n     * 为当前用户移除角色\n     */\n    removeRole(roles: string[]): void;\n    /**\n     * 为当前用户移除权限\n     */\n    removeAbility(abilities: Array<number | string>): void;\n    /**\n     * 当前用户是否有对应角色，其实 `number` 表示Ability\n     *\n     * - 当 `full: true` 或参数 `null` 时返回 `true`\n     * - 若使用 `ACLType` 参数，可以指定 `mode` 校验模式\n     */\n    can(roleOrAbility: ACLCanType | null): boolean;\n    /** @inner */\n    parseAbility(value: ACLCanType): ACLCanType;\n    /**\n     * 当前用户是否有对应权限点\n     */\n    canAbility(value: ACLCanType): boolean;\n}\n"]}