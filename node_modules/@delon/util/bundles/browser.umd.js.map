{"version":3,"file":"browser.umd.js","sources":["../../../../packages/util/browser/cookie.service.ts","../../../../packages/util/browser/copy.ts","../../../../packages/util/browser/is-empty.ts","../../../../packages/util/browser/scroll.service.ts","../../../../packages/util/browser/style.ts","../../../../packages/util/browser/browser.ts"],"sourcesContent":["import { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport interface CookieOptions {\n  path?: string;\n  domain?: string;\n  /**\n   * Expiration time, `number` is seconds\n   *\n   * 过期时间，`number` 类型表示秒数\n   */\n  expires?: number | Date | string;\n  secure?: boolean;\n  HttpOnly?: boolean;\n  SameSite?: boolean | 'lax' | 'strict' | 'none';\n}\n\n/**\n * A set of simple Cookie manipulation classes.\n *\n * 一组简单的 Cookie 操作类。\n */\n@Injectable({ providedIn: 'root' })\nexport class CookieService {\n  private get doc(): Document {\n    return this._doc || document;\n  }\n\n  /**\n   * Original cookie value\n   *\n   * 原始Cookie值\n   */\n  get cookie(): string {\n    return this.platform.isBrowser ? this.doc.cookie : '';\n  }\n\n  constructor(@Inject(DOCUMENT) private _doc: NzSafeAny, private platform: Platform) {}\n\n  /**\n   * Get all cookie key-value pairs\n   *\n   * 获取所有Cookie键值对\n   */\n  getAll(): { [key: string]: string } {\n    const ret: { [key: string]: string } = {};\n    const arr = this.cookie.split('; ');\n    for (let i = 0; i < arr.length; i++) {\n      const cookie = arr[i];\n      const index = cookie.indexOf('=');\n      if (index > 0) {\n        const name = decodeURIComponent(cookie.substring(0, index));\n        if (ret[name] == null) {\n          ret[name] = decodeURIComponent(cookie.substring(index + 1));\n        }\n      }\n    }\n    return ret;\n  }\n\n  /**\n   * Get the value of given cookie `key`\n   *\n   * 获取指定 `key` 的值\n   */\n  get(key: string): string | undefined {\n    return this.getAll()[key];\n  }\n\n  /**\n   * Sets a value for given cookie key\n   *\n   * 设置指定 Cookie 键的值\n   */\n  put(key: string, value: string | undefined, options?: CookieOptions): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    const opt = { path: '/', ...options };\n    if (typeof opt.expires === 'number') {\n      opt.expires = new Date(+new Date() + opt.expires * 1e3);\n    }\n    if (typeof opt.expires !== 'string') {\n      opt.expires = opt.expires ? opt.expires.toUTCString() : '';\n    }\n    const optStr: { [key: string]: string | boolean } = opt as NzSafeAny;\n    const attributes = Object.keys(optStr)\n      .filter(k => optStr[k] && optStr[k] !== true)\n      .map(k => `${k}=${(optStr[k] as string).split(';')[0]}`)\n      .join(';');\n    this.doc.cookie = `${encodeURIComponent(String(key))}=${encodeURIComponent(String(value))}${\n      attributes ? `; ${attributes}` : ''\n    }`;\n  }\n\n  /**\n   * Remove given cookie\n   *\n   * 移除指定 Cookie\n   */\n  remove(key: string, options?: CookieOptions): void {\n    this.put(key, undefined, options);\n  }\n\n  /**\n   * Remove all cookies\n   *\n   * 移除所有 Cookies\n   */\n  removeAll(): void {\n    this.doc.cookie = '';\n  }\n}\n","/**\n * Copy text to clipboard\n *\n * 复制字符串文档至剪贴板\n */\nexport function copy(value: string): Promise<string> {\n  return new Promise<string>((resolve): void => {\n    let copyTextArea: HTMLTextAreaElement | null = null;\n    try {\n      copyTextArea = document.createElement('textarea');\n      copyTextArea.style.height = '0px';\n      copyTextArea.style.opacity = '0';\n      copyTextArea.style.width = '0px';\n      document.body.appendChild(copyTextArea);\n      copyTextArea.value = value;\n      copyTextArea.select();\n      document.execCommand('copy');\n      resolve(value);\n    } finally {\n      if (copyTextArea && copyTextArea.parentNode) {\n        copyTextArea.parentNode.removeChild(copyTextArea);\n      }\n    }\n  });\n}\n","/**\n * Used to verify `<ng-content></ng-content>` is empty, useful for custom components.\n *\n * 用于校验 `<ng-content></ng-content>` 是否为空，自定义组件时蛮有用。\n */\nexport function isEmpty(element: HTMLElement): boolean {\n  const nodes = element.childNodes;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes.item(i);\n    if (node.nodeType === 1 && (node as HTMLElement).outerHTML.toString().trim().length !== 0) {\n      return false;\n    } else if (node.nodeType === 3 && node.textContent!.toString().trim().length !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","import { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n@Injectable({ providedIn: 'root' })\nexport class ScrollService {\n  private _getDoc(): Document {\n    return this._doc || document;\n  }\n\n  private _getWin(): Window {\n    const doc = this._getDoc();\n    return doc.defaultView || window;\n  }\n\n  constructor(@Inject(DOCUMENT) private _doc: NzSafeAny, private platform: Platform) {}\n\n  /**\n   * 获取滚动条位置\n   *\n   * @param element 指定元素，默认 `window`\n   */\n  getScrollPosition(element?: Element | Window): [number, number] {\n    if (!this.platform.isBrowser) {\n      return [0, 0];\n    }\n\n    const win = this._getWin();\n    if (element && element !== win) {\n      return [(element as Element).scrollLeft, (element as Element).scrollTop];\n    } else {\n      return [win.pageXOffset, win.pageYOffset];\n    }\n  }\n\n  /**\n   * 设置滚动条位置\n   *\n   * @param element 指定元素\n   */\n  scrollToPosition(element: Element | Window | null | undefined, position: [number, number]): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    (element || this._getWin()).scrollTo(position[0], position[1]);\n  }\n\n  /**\n   * 设置滚动条至指定元素\n   *\n   * @param element 指定元素，默认 `document.body`\n   * @param topOffset 偏移值，默认 `0`\n   */\n  scrollToElement(element?: Element | null, topOffset: number = 0): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    if (!element) {\n      element = this._getDoc().body;\n    }\n\n    element.scrollIntoView();\n\n    const win = this._getWin();\n    if (win && win.scrollBy) {\n      win.scrollBy(0, element!.getBoundingClientRect().top - topOffset);\n\n      if (win.pageYOffset < 20) {\n        win.scrollBy(0, -win.pageYOffset);\n      }\n    }\n  }\n\n  /**\n   * 滚动至顶部\n   *\n   * @param topOffset 偏移值，默认 `0`\n   */\n  scrollToTop(topOffset: number = 0): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    this.scrollToElement(this._getDoc().body, topOffset);\n  }\n}\n","import { Renderer2 } from '@angular/core';\n\nfunction removeClass(el: HTMLElement, classMap: { [klass: string]: unknown }, renderer: Renderer2): void {\n  Object.keys(classMap).forEach(key => renderer.removeClass(el, key));\n}\n\nfunction addClass(el: HTMLElement, classMap: { [klass: string]: unknown }, renderer: Renderer2): void {\n  for (const i in classMap) {\n    if (classMap[i]) {\n      renderer.addClass(el, i);\n    }\n  }\n}\n\n/**\n * Update host component style `class`\n *\n * 更新宿主组件样式 `class`\n *\n * ```ts\n * updateHostClass(\n *  this.el.nativeElement,\n *  this.renderer,\n *  {\n *    [ 'classname' ]: true,\n *    [ 'classname' ]: this.type === '1',\n *    [ this.cls ]: true,\n *    [ `a-${this.cls}` ]: true\n *  })\n * ```\n */\nexport function updateHostClass(\n  el: HTMLElement,\n  renderer: Renderer2,\n  classMap: { [klass: string]: unknown },\n  preClean: boolean = false\n): void {\n  if (preClean === true) {\n    renderer.removeAttribute(el, 'class');\n  } else {\n    removeClass(el, classMap, renderer);\n  }\n  classMap = { ...classMap };\n  addClass(el, classMap, renderer);\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Injectable","Inject","DOCUMENT","Platform"],"mappings":"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"}