{"version":3,"file":"delon-util-math.umd.js","sources":["../../../../packages/util/math/in-range.ts","../../../../packages/util/math/round.ts","../../../../packages/util/math/delon-util-math.ts"],"sourcesContent":["import { assertNumber } from '@delon/util/other';\n\n/**\n * Checks if `value` is between `start` and `end` to, but not including `end`. If `end` is not specified, it's set to start with `start` then set to `0`. If `start` is greater than `end` the params are swapped to support negative ranges.\n *\n * 检查 `value` 是否在 `start` 与 `end` 之间，但不包括 `end`。 如果 `end` 没有指定，那么 `start` 设置为 `0`。 如果 `start` 大于 `end`，那么参数会交换以便支持负范围。\n * ```ts\n * inRange(3, 2, 4); // true\n * inRange(4, 8); // true\n * inRange(4, 2); // false\n * inRange(2, 2); // false\n * inRange(1.2, 2); // true\n * inRange(-3, -2, -6); // true\n * ```\n */\nexport function inRange(value: number, start: number, end?: number): boolean {\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  assertNumber(value);\n  assertNumber(start);\n  assertNumber(end);\n  return value >= Math.min(start, end) && value < Math.max(start, end);\n}\n","/**\n * Computes `number` rounded up to `precision`.\n *\n * 根据 `precision`（精度） 向上舍入 `number`。\n * ```ts\n * ceil(4.006); // 5\n * ceil(6.004, 2); // 6.01\n * ceil(6040, -2); // 6100\n * ```\n */\nexport function ceil(number: number, precision: number = 0): number {\n  return createRound(number, precision, 'ceil');\n}\n\n/**\n * Computes `number` rounded down to `precision`.\n *\n * 根据 `precision`（精度） 向下舍入 `number`。\n * ```ts\n * floor(4.006); // 4\n * floor(0.046, 2); // 0.04\n * floor(4060, -2); // 4000\n * ```\n */\nexport function floor(number: number, precision: number = 0): number {\n  return createRound(number, precision, 'floor');\n}\n\n/**\n * Computes `number` rounded to `precision`.\n *\n * 根据 `precision`（精度） 四舍五入 `number`。\n * ```ts\n * round(4.006); // 4\n * round(4.006, 2); // 4.01\n * round(4060, -2); // 4100\n * ```\n */\nexport function round(number: number, precision: number = 0): number {\n  return createRound(number, precision, 'round');\n}\n\nfunction createRound(number: number, precision: number, methodName: keyof Math): number {\n  const func = Math[methodName] as (x: number) => number;\n\n  precision = precision == null ? 0 : Math.min(precision, 292);\n  if (!precision) {\n    return func(number);\n  }\n  // Shift with exponential notation to avoid floating-point issues.\n  // See [MDN](https://mdn.io/round#Examples) for more details.\n  let pair = `${number}e`.split('e');\n  const value = func(Number(`${pair[0]}e${Number(pair[1]) + precision}`));\n  pair = `${value}e`.split('e');\n  return Number(`${pair[0]}e${Number(pair[1]) - precision}`);\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["assertNumber"],"mappings":";;;;;;IAEA;;;;;;;;;;;;;aAagB,OAAO,CAAC,KAAa,EAAE,KAAa,EAAE,GAAY;QAChE,IAAI,GAAG,KAAK,SAAS,EAAE;YACrB,GAAG,GAAG,KAAK,CAAC;YACZ,KAAK,GAAG,CAAC,CAAC;SACX;QACDA,kBAAY,CAAC,KAAK,CAAC,CAAC;QACpBA,kBAAY,CAAC,KAAK,CAAC,CAAC;QACpBA,kBAAY,CAAC,GAAG,CAAC,CAAC;QAClB,OAAO,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACvE;;ICxBA;;;;;;;;;;aAUgB,IAAI,CAAC,MAAc,EAAE,SAAqB;QAArB,0BAAA,EAAA,aAAqB;QACxD,OAAO,WAAW,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;IAChD,CAAC;IAED;;;;;;;;;;aAUgB,KAAK,CAAC,MAAc,EAAE,SAAqB;QAArB,0BAAA,EAAA,aAAqB;QACzD,OAAO,WAAW,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;IAED;;;;;;;;;;aAUgB,KAAK,CAAC,MAAc,EAAE,SAAqB;QAArB,0BAAA,EAAA,aAAqB;QACzD,OAAO,WAAW,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;IAED,SAAS,WAAW,CAAC,MAAc,EAAE,SAAiB,EAAE,UAAsB;QAC5E,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAA0B,CAAC;QAEvD,SAAS,GAAG,SAAS,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC;SACrB;;;QAGD,IAAI,IAAI,GAAG,CAAG,MAAM,MAAG,EAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnC,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,CAAC,CAAC,UAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAE,CAAC,CAAC,CAAC;QACxE,IAAI,GAAG,CAAG,KAAK,MAAG,EAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9B,OAAO,MAAM,CAAI,IAAI,CAAC,CAAC,CAAC,UAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAE,CAAC,CAAC;IAC7D;;ICvDA;;;;;;;;;;;;;;;"}