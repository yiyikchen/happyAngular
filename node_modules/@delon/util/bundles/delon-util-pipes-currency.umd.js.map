{"version":3,"file":"delon-util-pipes-currency.umd.js","sources":["../../../../packages/util/pipes/currency/mega.pipe.ts","../../../../packages/util/pipes/currency/price.pipe.ts","../../../../packages/util/pipes/currency/cny.pipe.ts","../../../../packages/util/pipes/currency/module.ts","../../../../packages/util/pipes/currency/delon-util-pipes-currency.ts"],"sourcesContent":["import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\n\nimport { CurrencyMegaOptions, CurrencyService } from '@delon/util/format';\n\n@Pipe({ name: 'mega' })\nexport class CurrencyMegaPipe implements PipeTransform {\n  private isCN = false;\n  constructor(private srv: CurrencyService, @Inject(LOCALE_ID) locale: string) {\n    this.isCN = locale.startsWith('zh');\n  }\n\n  /**\n   * Large number format filter\n   *\n   * 大数据格式化\n   */\n  transform(value: number | string, options?: CurrencyMegaOptions): string {\n    const res = this.srv.mega(value, options);\n    return res.value + (this.isCN ? res.unitI18n : res.unit);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { CurrencyFormatOptions, CurrencyService } from '@delon/util/format';\n\n@Pipe({ name: 'price' })\nexport class CurrencyPricePipe implements PipeTransform {\n  constructor(private srv: CurrencyService) {}\n  /**\n   * Format a number with commas as thousands separators\n   *\n   * 格式化货币，用逗号将数字格式化为千位分隔符\n   * ```ts\n   * 10000 => `10,000`\n   * 10000.567 => `10,000.57`\n   * ```\n   */\n  transform(value: number | string, options?: CurrencyFormatOptions): string {\n    return this.srv.format(value, options);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { CurrencyCNYOptions, CurrencyService } from '@delon/util/format';\n\n@Pipe({ name: 'cny' })\nexport class CurrencyCNYPipe implements PipeTransform {\n  constructor(private srv: CurrencyService) {}\n\n  /**\n   * Converted into RMB notation.\n   *\n   * 转化成人民币表示法\n   */\n  transform(value: number | string, options?: CurrencyCNYOptions): string {\n    return this.srv.cny(value, options);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CurrencyCNYPipe } from './cny.pipe';\nimport { CurrencyMegaPipe } from './mega.pipe';\nimport { CurrencyPricePipe } from './price.pipe';\n\nconst PIPES = [CurrencyMegaPipe, CurrencyPricePipe, CurrencyCNYPipe];\n\n@NgModule({\n  declarations: PIPES,\n  exports: PIPES\n})\nexport class CurrencyPipeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {CurrencyCNYPipe as ɵa} from './cny.pipe';"],"names":["Pipe","CurrencyService","Inject","LOCALE_ID","NgModule"],"mappings":";;;;;;;QAOE,0BAAoB,GAAoB,EAAqB,MAAc;YAAvD,QAAG,GAAH,GAAG,CAAiB;YADhC,SAAI,GAAG,KAAK,CAAC;YAEnB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACrC;;;;;;QAOD,oCAAS,GAAT,UAAU,KAAsB,EAAE,OAA6B;YAC7D,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAC1C,OAAO,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;SAC1D;;;;gBAfFA,SAAI,SAAC,EAAE,IAAI,EAAE,MAAM,EAAE;;;gBAFQC,sBAAe;6CAKAC,WAAM,SAACC,cAAS;;;;QCD3D,2BAAoB,GAAoB;YAApB,QAAG,GAAH,GAAG,CAAiB;SAAI;;;;;;;;;;QAU5C,qCAAS,GAAT,UAAU,KAAsB,EAAE,OAA+B;YAC/D,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SACxC;;;;gBAdFH,SAAI,SAAC,EAAE,IAAI,EAAE,OAAO,EAAE;;;gBAFSC,sBAAe;;;;QCI7C,yBAAoB,GAAoB;YAApB,QAAG,GAAH,GAAG,CAAiB;SAAI;;;;;;QAO5C,mCAAS,GAAT,UAAU,KAAsB,EAAE,OAA4B;YAC5D,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SACrC;;;;gBAXFD,SAAI,SAAC,EAAE,IAAI,EAAE,KAAK,EAAE;;;gBAFQC,sBAAe;;;ICI5C,IAAM,KAAK,GAAG,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,eAAe,CAAC,CAAC;;QAMrE;;;;;gBAJCG,aAAQ,SAAC;oBACR,YAAY,EAAE,KAAK;oBACnB,OAAO,EAAE,KAAK;iBACf;;;ICXD;;;;;;;;;;;;;;;"}