{"version":3,"file":"delon-util-date-time.js","sources":["../../../../packages/util/date-time/time.ts","../../../../packages/util/date-time/picker.ts","../../../../packages/util/date-time/delon-util-date-time.ts"],"names":[],"mappings":";;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAgB,eAAe,CAC7B,IAA0G,EAC1G,IAA6B;AAC5B,IACD,IAAI,GAAG,IAAI;AACb,UAAM,OAAO,IAAI,KAAK,QAAQ;AAC9B,cAAQ,KAAK,CAAC,IAAI,EAAE,qBAAqB,EAAE,IAAI,IAAI,EAAE,CAAC;AACtD,cAAQ,IAAI,IAAI,CAAC,IAAI,CAAC;AACtB,UAAM,IAAI,IAAI,EAAE,CAAC;AACjB,IAAE,MAAM,OAAO,GAAwB,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC;AAC3D,IACE,IAAI,GAAiB,CAAC;AACxB,IAAE,QAAQ,IAAI;AACd,QAAI,KAAK,OAAO;AAChB,YAAM,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACzB,YAAM,MAAM;AACZ,QAAI,KAAK,QAAQ;AACjB,YAAM,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACtC,YAAM,MAAM;AACZ,QAAI,KAAK,WAAW;AACpB,YAAM,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,YAAM,MAAM;AACZ,QAAI,KAAK,MAAM;AACf,YAAM,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;AACnE,YAAM,MAAM;AACZ,QAAI,KAAK,OAAO;AAChB,YAAM,GAAG,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;AAC7F,YAAM,MAAM;AACZ,QAAI,KAAK,OAAO;AAChB,YAAM,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;AACnD,YAAM,MAAM;AACZ,QAAI,KAAK,QAAQ;AACjB,YAAM,GAAG,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/E,YAAM,MAAM;AACZ,QAAI,KAAK,MAAM;AACf,YAAM,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AACjD,YAAM,MAAM;AACZ,QAAI,KAAK,OAAO;AAChB,YAAM,GAAG,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E,YAAM,MAAM;AACZ,QAAI;AACJ,YAAM,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AACjF,YAAM,MAAM;AACZ,KAAG;AACH,IAAE,OAAO,iBAAiB,CAAC,GAAG,CAAC,CAAC;AAChC,CAAC;AAED;AACA;AACA;AACA,SAAgB,iBAAiB,CAAC,KAAmB;AAAI,IACvD,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAgB,MAAM,CAAC,KAA6B,EAAE,OAAuB;AAAI,IAC/E,IAAI,OAAO,OAAO,KAAK,QAAQ;AAAE,QAAA,OAAO,GAAG,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC;AACvE,IAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,mBAClC,YAAY,EAAE,qBAAqB,EACnC,YAAY,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,IACxB,OAAO,CACX,CAAC;AACJ,IAAE,IAAI,KAAK,IAAI,IAAI,EAAE;AACrB,QAAI,OAAO,YAAY,CAAC;AACxB,KAAG;AACH,IAAE,IAAI,KAAK,YAAY,IAAI,EAAE;AAC7B,QAAI,OAAO,KAAK,CAAC;AACjB,KAAG;AACH,IAAE,IAAI,OAAO,KAAK,KAAK,QAAQ,KAAK,OAAO,KAAK,KAAK,QAAQ,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAC9F,QAAI,OAAO,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;AAC5B,KAAG;AACH,IAAE,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AAChC,IAAE,IAAI,KAAK,CAAC,OAAoB,CAAC,EAAE;AACnC,QAAI,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE,YAAa,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;AACtD,KAAG;AACH,IACE,OAAO,KAAK,CAAC,OAAoB,CAAC,GAAG,YAAY,GAAG,OAAO,CAAC;AAC9D;AACA;AC5GA;AACA,MAAa,kBAAkB;AAC/B;AACE;AACE;AACE;AAEJ;AAAQ,IAAR,IAAI,GAAG;AAAK,QACV,OAAO,IAAI,IAAI,EAAE,CAAC;AACtB,KAAG;AACH;AACE;AACE;AACE;AAEJ;AAAQ,IAAR,IAAI,IAAI;AAAK,QACX,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrC,KAAG;AACH;AACE;AACE;AACE;AAEJ;AAAQ,IAAR,UAAU,CAAC,CAAO;AAAI,QACpB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC;AACtC,KAAG;AACH;AACE;AACE;AACE;AAEJ;AAAQ,IAAR,MAAM,CAAC,CAAgB,EAAE,eAAuB,qBAAqB;AAAI,QACvE,OAAO,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;AACnC,KAAG;AACH,IAAU,OAAO,CAAC,KAAa;AAAI,QAC/B,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC;AACzD,KAAG;AACH;AACE;AACE;AACE;AAEJ;AAAQ,IAAR,WAAW,CAAC,QAAuB,EAAE,SAAyB;AAAI,QAChE,OAAO,wBAAwB,CAC7B,QAAQ,EACR,OAAO,SAAS,KAAK,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,SAAS,IAAI,IAAI,CAAC,IAAI,CACvF,CAAC;AACN,KAAG;AACH;AACE;AACE;AACE;AAEJ;AAAQ,IAAR,kBAAkB,CAAC,OAAwC;AAAI,QAC7D,OAAO,CAAC,CAAC,KAAc,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU,CAAC,GAAG,CAAC,CAAC;AACxE,KAAG;AACH;AACE;AACE;AACE;AAEJ;AAAQ,IAAR,iBAAiB,CAAC,OAAwC;AAAI,QAC5D,OAAO,CAAC,CAAC,KAAc,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU,CAAC,GAAG,CAAC,CAAC;AACxE,KAAG;AACH,IAAU,gBAAgB,CAAC,IAAwB,EAAE,aAAsB;AAAI,QAC3E,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AACpC,QAAI,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AACpC,QAAI,OAAO,CAAC,OAAO;AAAO,YACpB,MAAM,GAAG,GAAG,OAAe,CAAC;AAClC,YAAM,IAAI,GAAG,IAAI,IAAI,EAAE;AACvB,gBAAQ,OAAO,EAAe,CAAC;AAC/B,aAAO;AACP,YAAM,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,IAAI,CAAC,CAAC,CAAC;AAC3D,YAAM,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;AACtC,YAAM,MAAM,UAAU,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;AAC1C,YAAM,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;AACtC,YAAM,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;AACnE,YAAM,OAAO;AACb,gBAAQ,eAAe,EAAE;AACzB,oBAAU,IAAI,CAAC,OAAO;AAAE,wBAAA,OAAO,EAAE,CAAC;AAClC,oBAAU,OAAO,IAAI,KAAK,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;AAC5F,iBAAS;AACT,gBAAQ,iBAAiB,EAAE;AAC3B,oBAAU,IAAI,OAAO,IAAI,QAAQ,KAAK,QAAQ,EAAE;AAChD,wBAAY,OAAO,IAAI,KAAK,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;AAClG,qBAAW;AACX,oBAAU,OAAO,EAAE,CAAC;AACpB,iBAAS;AACT,gBAAQ,iBAAiB,EAAE;AAC3B,oBAAU,IAAI,OAAO,IAAI,QAAQ,KAAK,QAAQ,IAAI,GAAG,CAAC,UAAU,EAAE,KAAK,UAAU,EAAE;AACnF,wBAAY,MAAM,UAAU,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;AAChD,wBAAY,OAAO,IAAI,KAAK,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;AAClG,qBAAW;AACX,oBAAU,OAAO,EAAE,CAAC;AACpB,iBAAS;AACT,aAAO,CAAC;AACR,SAAK,CAAC;AACN,KAAG;AACH;AACE;AACE;AACE;AAEJ;AAAQ,IAAR,kBAAkB,CAAC,OAAoC;AAAI,QACzD,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,aAAa,CAAC,CAAC;AACnE,KAAG;AACH;AACE;AACE;AACE;AAEJ;AAAQ,IAAR,iBAAiB,CAAC,OAAoC;AAAI,QACxD,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,aAAa,CAAC,CAAC;AAClE,KAAG;AACH,CAAC;AACD,MACa,kBAAkB,GAAG,IAAI,kBAAkB;AACxD;AC1HA;AACA;AACA;AACA;AACA;AACsE","sourcesContent":["import {\n  addDays,\n  endOfDay,\n  endOfMonth,\n  endOfWeek,\n  endOfYear,\n  parse,\n  parseISO,\n  startOfDay,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n  subMonths,\n  subWeeks,\n  subYears\n} from 'date-fns';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n/**\n * Get the time range, return `[ Date, Date]` for the start and end dates\n *\n * 获取时间范围\n *\n * @param type 类型，带 `-` 表示过去一个时间，若指定 `number` 表示天数\n * @param time 开始时间\n */\nexport function getTimeDistance(\n  type: 'today' | '-today' | 'yesterday' | 'week' | '-week' | 'month' | '-month' | 'year' | '-year' | number,\n  time?: Date | string | number\n): [Date, Date] {\n  time = time\n    ? typeof time === 'string'\n      ? parse(time, 'yyyy-MM-dd HH:mm:ss', new Date())\n      : new Date(time)\n    : new Date();\n  const options: { weekStartsOn: 1 } = { weekStartsOn: 1 };\n\n  let res: [Date, Date];\n  switch (type) {\n    case 'today':\n      res = [time, time];\n      break;\n    case '-today':\n      res = [addDays(time, -1), time];\n      break;\n    case 'yesterday':\n      res = [addDays(time, -1), addDays(time, -1)];\n      break;\n    case 'week':\n      res = [startOfWeek(time, options), endOfWeek(time, options)];\n      break;\n    case '-week':\n      res = [startOfWeek(subWeeks(time, 1), options), endOfWeek(subWeeks(time, 1), options)];\n      break;\n    case 'month':\n      res = [startOfMonth(time), endOfMonth(time)];\n      break;\n    case '-month':\n      res = [startOfMonth(subMonths(time, 1)), endOfMonth(subMonths(time, 1))];\n      break;\n    case 'year':\n      res = [startOfYear(time), endOfYear(time)];\n      break;\n    case '-year':\n      res = [startOfYear(subYears(time, 1)), endOfYear(subYears(time, 1))];\n      break;\n    default:\n      res = type > 0 ? [time, addDays(time, type)] : [addDays(time, type), time];\n      break;\n  }\n  return fixEndTimeOfRange(res);\n}\n\n/**\n * fix time is the most, big value\n */\nexport function fixEndTimeOfRange(dates: [Date, Date]): [Date, Date] {\n  return [startOfDay(dates[0]), endOfDay(dates[1])];\n}\n\nexport type ToDateOptions = string | { formatString?: string; defaultValue?: NzSafeAny };\n\n/**\n * Return the date parsed from string using the given format string\n * - If the argument is a number, it is treated as a timestamp.\n *\n * @param formatString If parsing fails try to parse the date by pressing `formatString`\n * @param defaultValue If parsing fails returned default value, default: `new Date(NaN)`\n */\nexport function toDate(value: Date | string | number, options?: ToDateOptions): Date {\n  if (typeof options === 'string') options = { formatString: options };\n  const { formatString, defaultValue } = {\n    formatString: 'yyyy-MM-dd HH:mm:ss',\n    defaultValue: new Date(NaN),\n    ...options\n  };\n  if (value == null) {\n    return defaultValue;\n  }\n  if (value instanceof Date) {\n    return value;\n  }\n  if (typeof value === 'number' || (typeof value === 'string' && /[0-9]{10,13}/.test(value))) {\n    return new Date(+value);\n  }\n  let tryDate = parseISO(value);\n  if (isNaN(tryDate as NzSafeAny)) {\n    tryDate = parse(value, formatString!, new Date());\n  }\n\n  return isNaN(tryDate as NzSafeAny) ? defaultValue : tryDate;\n}\n","import { addDays, addSeconds, differenceInCalendarDays, format } from 'date-fns';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { DisabledDateFn, DisabledTimeConfig, DisabledTimeFn } from 'ng-zorro-antd/date-picker';\n\n// TODO: timezone process\nexport class DateTimePickerUtil {\n  /**\n   * Current local time\n   *\n   * 当前本地时间\n   */\n  get now(): Date {\n    return new Date();\n  }\n  /**\n   * Current local date (not including time part)\n   *\n   * 当前本地日期（不包含时间部分）\n   */\n  get date(): Date {\n    return this.removeTime(this.now);\n  }\n  /**\n   * Remove the time part of the date\n   *\n   * 移除日期的时间部分\n   */\n  removeTime(d: Date): Date {\n    return new Date(d.toDateString());\n  }\n  /**\n   * Format date-time\n   *\n   * 格式化日期\n   */\n  format(d: number | Date, formatString: string = 'yyyy-MM-dd HH:mm:ss'): string {\n    return format(d, formatString);\n  }\n  private genTick(count: number): number[] {\n    return new Array(count).fill(0).map((_, idx) => idx);\n  }\n  /**\n   * Calculate the number of days between two dates, `0` means the same day\n   *\n   * 计算两个日期相差天数，`0` 表示同一天\n   */\n  getDiffDays(dateLeft: Date | number, dateRight?: Date | number): number {\n    return differenceInCalendarDays(\n      dateLeft,\n      typeof dateRight === 'number' ? addDays(this.date, dateRight) : dateRight || this.date\n    );\n  }\n  /**\n   * Disabled Before date (Default: today), Generally serves `nzDisabledDate`\n   *\n   * 禁用之前日期（默认：今天），一般服务于 `nzDisabledDate`\n   */\n  disabledBeforeDate(options?: { offsetDays?: Date | number }): DisabledDateFn {\n    return (d): boolean => this.getDiffDays(d, options?.offsetDays) < 0;\n  }\n  /**\n   * Disabled After date (Default: today), Generally serves `nzDisabledDate`\n   *\n   * 禁用之后日期（默认：今天），一般服务于 `nzDisabledDate`\n   */\n  disabledAfterDate(options?: { offsetDays?: Date | number }): DisabledDateFn {\n    return (d): boolean => this.getDiffDays(d, options?.offsetDays) > 0;\n  }\n  private baseDisabledTime(type: 'before' | 'after', offsetSeconds?: number): DisabledTimeFn {\n    const tick24 = this.genTick(24);\n    const tick60 = this.genTick(60);\n    return (current): DisabledTimeConfig => {\n      const cur = current as Date;\n      if (cur == null) {\n        return {} as NzSafeAny;\n      }\n      const now = addSeconds(this.now, offsetSeconds || 0);\n      const nowHours = now.getHours();\n      const nowMinutes = now.getMinutes();\n      const curHours = cur.getHours();\n      const isToday = this.getDiffDays(this.removeTime(cur)) === 0;\n      return {\n        nzDisabledHours: () => {\n          if (!isToday) return [];\n          return type === 'before' ? tick24.slice(0, nowHours) : tick24.slice(nowHours + 1);\n        },\n        nzDisabledMinutes: () => {\n          if (isToday && curHours === nowHours) {\n            return type === 'before' ? tick60.slice(0, nowMinutes) : tick60.slice(nowMinutes + 1);\n          }\n          return [];\n        },\n        nzDisabledSeconds: () => {\n          if (isToday && curHours === nowHours && cur.getMinutes() === nowMinutes) {\n            const nowSeconds = now.getSeconds();\n            return type === 'before' ? tick60.slice(0, nowSeconds) : tick60.slice(nowSeconds + 1);\n          }\n          return [];\n        }\n      };\n    };\n  }\n  /**\n   * Disabled Before time (Default: now), Generally serves `nzDisabledTime`\n   *\n   * 禁用之前时间（默认：现在），一般服务于 `nzDisabledTime`\n   */\n  disabledBeforeTime(options?: { offsetSeconds?: number }): DisabledTimeFn {\n    return this.baseDisabledTime('before', options?.offsetSeconds);\n  }\n  /**\n   * Disabled After time (Default: now), Generally serves `nzDisabledTime`\n   *\n   * 禁用之后时间（默认：现在），一般服务于 `nzDisabledTime`\n   */\n  disabledAfterTime(options?: { offsetSeconds?: number }): DisabledTimeFn {\n    return this.baseDisabledTime('after', options?.offsetSeconds);\n  }\n}\n\nexport const dateTimePickerUtil = new DateTimePickerUtil();\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}