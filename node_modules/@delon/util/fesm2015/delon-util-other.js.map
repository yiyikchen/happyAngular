{"version":3,"file":"delon-util-other.js","sources":["../../../../packages/util/other/deep.ts","../../../../packages/util/other/logger.ts","../../../../packages/util/other/lazy.service.ts","../../../../packages/util/other/assert.ts","../../../../packages/util/other/delon-util-other.ts"],"sourcesContent":["import extend from 'extend';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n/**\n * Gets the value at `path` of `object`, like `_.get` in lodash.\n *\n * 类似 `_.get`，根据 `path` 获取安全值\n */\nexport function deepGet(obj: NzSafeAny, path: string | string[] | null | undefined, defaultValue?: unknown): NzSafeAny {\n  if (!obj || path == null || path.length === 0) return defaultValue;\n  if (!Array.isArray(path)) {\n    path = ~path.indexOf('.') ? path.split('.') : [path];\n  }\n  if (path.length === 1) {\n    const checkObj = obj[path[0]];\n    return typeof checkObj === 'undefined' ? defaultValue : checkObj;\n  }\n  const res = path.reduce((o, k) => (o || {})[k], obj);\n  return typeof res === 'undefined' ? defaultValue : res;\n}\n\n/**\n * Base on [extend](https://github.com/justmoon/node-extend) deep copy.\n *\n * 基于 [extend](https://github.com/justmoon/node-extend) 的深度拷贝\n */\nexport function deepCopy<T extends { [key: string]: NzSafeAny } = NzSafeAny>(obj: T | null | undefined): T {\n  const result = extend(true, {}, { _: obj });\n  return result._ as T;\n}\n\n/**\n * Deep merge object.\n *\n * 深度合并对象\n *\n * @param original 原始对象\n * @param arrayProcessMethod 数组处理方式\n *  - `true` 表示替换新值，不管新值为哪种类型\n *  - `false` 表示会合并整个数组（将旧数据与新数据合并成新数组）\n * @param objects 要合并的对象\n */\nexport function deepMergeKey(original: unknown, arrayProcessMethod: boolean, ...objects: NzSafeAny[]): NzSafeAny {\n  if (Array.isArray(original) || typeof original !== 'object') return original;\n\n  const isObject = (v: unknown) => typeof v === 'object';\n\n  const merge = (target: NzSafeAny, obj: NzSafeAny) => {\n    Object.keys(obj)\n      .filter(key => key !== '__proto__' && Object.prototype.hasOwnProperty.call(obj, key))\n      .forEach(key => {\n        const fromValue = obj[key];\n        const toValue = target[key];\n        if (Array.isArray(toValue)) {\n          target[key] = arrayProcessMethod ? fromValue : [...toValue, ...fromValue];\n        } else if (typeof fromValue === 'function') {\n          target[key] = fromValue;\n        } else if (fromValue != null && isObject(fromValue) && toValue != null && isObject(toValue)) {\n          target[key] = merge(toValue, fromValue);\n        } else {\n          target[key] = deepCopy(fromValue);\n        }\n      });\n    return target;\n  };\n\n  objects.filter(v => v != null && isObject(v)).forEach(v => merge(original, v));\n\n  return original;\n}\n\n/**\n * Deep merge object.\n *\n * 深度合并对象\n */\nexport function deepMerge(original: unknown, ...objects: unknown[]): NzSafeAny {\n  return deepMergeKey(original, false, ...objects);\n}\n","import type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\ndeclare const ngDevMode: boolean;\n\nconst record: Record<string, boolean> = {};\n\nexport const PREFIX = '[@DELON]:';\n\nfunction notRecorded(...args: NzSafeAny[]): boolean {\n  const asRecord = args.reduce((acc, c) => acc + c.toString(), '');\n\n  if (record[asRecord]) {\n    return false;\n  } else {\n    record[asRecord] = true;\n    return true;\n  }\n}\n\nfunction consoleCommonBehavior(consoleFunc: (...args: NzSafeAny) => void, ...args: NzSafeAny[]): void {\n  if (ngDevMode && notRecorded(...args)) {\n    consoleFunc(...args);\n  }\n}\n\n// Warning should only be printed in dev mode and only once.\nexport const warn = (...args: NzSafeAny[]) =>\n  consoleCommonBehavior((...arg: NzSafeAny[]) => console.warn(PREFIX, ...arg), ...args);\n\nexport const deprecation11 = (comp: string, from: string, to?: string) => {\n  warnDeprecation(`${comp} => '${from}' is going to be removed in 11.0.0${to ? `, Please use '${to}' instead` : ``}.`);\n};\n\nexport const warnDeprecation = (...args: NzSafeAny[]) => {\n  if (ngDevMode) {\n    return () => {};\n  }\n  const stack = new Error().stack;\n  return consoleCommonBehavior((...arg: NzSafeAny[]) => console.warn(PREFIX, 'deprecated:', ...arg, stack), ...args);\n};\n\n// Log should only be printed in dev mode.\nexport const log = (...args: NzSafeAny[]) => {\n  if (ngDevMode) {\n    console.log(PREFIX, ...args);\n  }\n};\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter, share } from 'rxjs/operators';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport interface LazyResult {\n  path: string;\n  status: 'ok' | 'error' | 'loading';\n  error?: NzSafeAny;\n}\n\n/**\n * 延迟加载资源（js 或 css）服务\n */\n@Injectable({ providedIn: 'root' })\nexport class LazyService {\n  private list: { [key: string]: boolean } = {};\n  private cached: { [key: string]: LazyResult } = {};\n  private _notify: BehaviorSubject<LazyResult[]> = new BehaviorSubject<LazyResult[]>([]);\n\n  constructor(@Inject(DOCUMENT) private doc: NzSafeAny) {}\n\n  get change(): Observable<LazyResult[]> {\n    return this._notify.asObservable().pipe(\n      share(),\n      filter(ls => ls.length !== 0)\n    );\n  }\n\n  clear(): void {\n    this.list = {};\n    this.cached = {};\n  }\n\n  load(paths: string | string[]): Promise<LazyResult[]> {\n    if (!Array.isArray(paths)) {\n      paths = [paths];\n    }\n\n    const promises: Array<Promise<LazyResult>> = [];\n    paths.forEach(path => {\n      if (path.endsWith('.js')) {\n        promises.push(this.loadScript(path));\n      } else {\n        promises.push(this.loadStyle(path));\n      }\n    });\n\n    return Promise.all(promises).then(res => {\n      this._notify.next(res);\n      return Promise.resolve(res);\n    });\n  }\n\n  loadScript(path: string, innerContent?: string): Promise<LazyResult> {\n    return new Promise(resolve => {\n      if (this.list[path] === true) {\n        resolve({ ...this.cached[path], status: 'loading' });\n        return;\n      }\n\n      this.list[path] = true;\n      const onSuccess = (item: LazyResult) => {\n        this.cached[path] = item;\n        resolve(item);\n        this._notify.next([item]);\n      };\n\n      const node = this.doc.createElement('script') as NzSafeAny;\n      node.type = 'text/javascript';\n      node.src = path;\n      node.charset = 'utf-8';\n      if (innerContent) {\n        node.innerHTML = innerContent;\n      }\n      if (node.readyState) {\n        // IE\n        node.onreadystatechange = () => {\n          if (node.readyState === 'loaded' || node.readyState === 'complete') {\n            node.onreadystatechange = null;\n            onSuccess({\n              path,\n              status: 'ok'\n            });\n          }\n        };\n      } else {\n        node.onload = () =>\n          onSuccess({\n            path,\n            status: 'ok'\n          });\n      }\n      node.onerror = (error: NzSafeAny) =>\n        onSuccess({\n          path,\n          status: 'error',\n          error\n        });\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\n    });\n  }\n\n  loadStyle(path: string, rel: string = 'stylesheet', innerContent?: string): Promise<LazyResult> {\n    return new Promise(resolve => {\n      if (this.list[path] === true) {\n        resolve(this.cached[path]);\n        return;\n      }\n\n      this.list[path] = true;\n\n      const node = this.doc.createElement('link') as HTMLLinkElement;\n      node.rel = rel;\n      node.type = 'text/css';\n      node.href = path;\n      if (innerContent) {\n        node.innerHTML = innerContent;\n      }\n      this.doc.getElementsByTagName('head')[0].appendChild(node);\n      const item: LazyResult = {\n        path,\n        status: 'ok'\n      };\n      this.cached[path] = item;\n      resolve(item);\n    });\n  }\n}\n","import { isObservable } from 'rxjs';\n\ndeclare const ngDevMode: boolean;\n\nfunction throwError(msg: string | null | undefined): void;\nfunction throwError(msg: string | null | undefined, actual: unknown, expected: unknown, comparison: string): void;\nfunction throwError(msg: string | null | undefined, actual?: unknown, expected?: unknown, comparison?: string): void {\n  if (ngDevMode) {\n    throw new Error(\n      `ASSERTION ERROR: ${msg}${comparison == null ? '' : ` [Expected=> ${expected} ${comparison} ${actual} <=Actual]`}`\n    );\n  }\n}\n\n/**\n * Assert whether the expression and throw an error into console in dev mode\n *\n * 断言表达式是否符合预期，并在开发模式下会在控制台抛出一个错误\n */\nexport function assert(expression: boolean, msg?: string): void {\n  if (!expression) {\n    throwError(msg);\n  }\n}\n\n/**\n * Assert whether empty (`null` or `undefined`)\n *\n * 断言是否空值（`null` 或 `undefined`）\n */\nexport function assertEmpty(actual: unknown, msg?: string): void {\n  if (actual == null) {\n    throwError(msg, typeof actual, 'NULL', '==');\n  }\n}\n\n/**\n * Assert whether `number` type\n *\n * 断言是否 `number` 类型\n */\nexport function assertNumber(actual: unknown, msg?: string): void {\n  if (!(typeof actual === 'number')) {\n    throwError(msg, typeof actual, 'number', '===');\n  }\n}\n\n/**\n * Assert whether `string` type\n *\n * 断言是否 `string` 类型\n */\nexport function assertString(actual: unknown, msg?: string): void {\n  if (!(typeof actual === 'string')) {\n    throwError(msg, actual === null ? 'null' : typeof actual, 'string', '===');\n  }\n}\n\n/**\n * Assert whether `array` type\n *\n * 断言是否 `array` 类型\n */\nexport function assertArray(actual: unknown, msg?: string): void {\n  if (!Array.isArray(actual)) {\n    throwError(msg, actual === null ? 'null' : typeof actual, 'array', '===');\n  }\n}\n\n/**\n * Assert whether `Observable` type\n *\n * 断言是否 `Observable` 类型\n */\nexport function assertObservable(obj: unknown, msg?: string): void {\n  if (!isObservable(obj)) {\n    throwError(msg, obj === null ? 'null' : typeof obj, 'Observable', '===');\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}