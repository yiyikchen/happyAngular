{"version":3,"file":"pie.js","sources":["../../../../packages/chart/pie/pie.component.ts","../../../../packages/chart/pie/pie.module.ts","../../../../packages/chart/pie/pie.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport type { Chart, Event } from '@antv/g2';\n\nimport { G2BaseComponent, G2InteractionType } from '@delon/chart/core';\nimport { BooleanInput, InputBoolean, InputNumber, NumberInput } from '@delon/util/decorator';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport interface G2PieData {\n  x: NzSafeAny;\n  y: number;\n  [key: string]: NzSafeAny;\n}\n\nexport interface G2PieClickItem {\n  item: G2PieData;\n  ev: Event;\n}\n\nexport interface G2PieRatio {\n  /** 占比文本，默认：`占比` */\n  text: string;\n  /** 反比文本，默认：`反比` */\n  inverse: string;\n  /** 正比颜色，默认使用 `color` 值 */\n  color: string;\n  /** 反比颜色，默认：`#F0F2F5` */\n  inverseColor: string;\n}\n\n@Component({\n  selector: 'g2-pie',\n  exportAs: 'g2Pie',\n  templateUrl: './pie.component.html',\n  host: {\n    '[class.g2-pie]': 'true',\n    '[class.g2-pie__legend-has]': 'hasLegend',\n    '[class.g2-pie__legend-block]': 'block',\n    '[class.g2-pie__mini]': 'isPercent'\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class G2PieComponent extends G2BaseComponent {\n  static ngAcceptInputType_height: NumberInput;\n  static ngAcceptInputType_animate: BooleanInput;\n  static ngAcceptInputType_hasLegend: BooleanInput;\n  static ngAcceptInputType_percent: NumberInput;\n  static ngAcceptInputType_tooltip: BooleanInput;\n  static ngAcceptInputType_lineWidth: NumberInput;\n  static ngAcceptInputType_blockMaxWidth: NumberInput;\n  static ngAcceptInputType_select: BooleanInput;\n\n  private percentColor: (value: string) => string;\n  legendData: NzSafeAny[] = [];\n  isPercent: boolean;\n\n  // #region fields\n\n  @Input() @InputBoolean() animate = true;\n  @Input() color = 'rgba(24, 144, 255, 0.85)';\n  @Input() subTitle: string | TemplateRef<void>;\n  @Input() total: string | number | TemplateRef<void>;\n  @Input() @InputNumber() height = 0;\n  @Input() @InputBoolean() hasLegend = false;\n  @Input() inner = 0.75;\n  @Input() padding: number | number[] | 'auto' = [12, 0, 12, 0];\n  @Input() @InputNumber() percent: number;\n  @Input() @InputBoolean() tooltip = true;\n  @Input() @InputNumber() lineWidth = 0;\n  @Input() @InputNumber() blockMaxWidth = 380;\n  @Input() @InputBoolean() select = true;\n  @Input() valueFormat: (y: number) => string;\n  @Input() data: G2PieData[] = [];\n  @Input() colors: string[];\n  @Input() interaction: G2InteractionType = 'none';\n  @Input() ratio: G2PieRatio = {\n    text: '占比',\n    inverse: '反比',\n    color: '',\n    inverseColor: '#F0F2F5'\n  };\n  @Output() readonly clickItem = new EventEmitter<G2PieClickItem>();\n\n  // #endregion\n\n  get block(): boolean {\n    return this.hasLegend && this.el.nativeElement.clientWidth <= this.blockMaxWidth;\n  }\n\n  private fixData(): void {\n    const { percent, color } = this;\n    this.isPercent = percent != null;\n    if (!this.isPercent) {\n      return;\n    }\n\n    this.select = false;\n    this.tooltip = false;\n    const { text, inverse, color: textColor, inverseColor } = this.ratio;\n    this.percentColor = (value: string) => (value === text ? textColor || color : inverseColor);\n    this.data = [\n      {\n        x: text,\n        y: percent\n      },\n      {\n        x: inverse,\n        y: 100 - percent\n      }\n    ];\n  }\n\n  install(): void {\n    const {\n      node,\n      height,\n      padding,\n      tooltip,\n      inner,\n      hasLegend,\n      interaction,\n      theme,\n      animate,\n      lineWidth,\n      isPercent,\n      percentColor,\n      colors\n    } = this;\n    const chart: Chart = (this._chart = new (window as NzSafeAny).G2.Chart({\n      container: node.nativeElement,\n      autoFit: true,\n      height,\n      padding,\n      theme\n    }));\n    chart.animate(animate);\n\n    if (!tooltip) {\n      chart.tooltip(false);\n    } else {\n      chart.tooltip({\n        showTitle: false,\n        showMarkers: false\n      });\n    }\n    if (interaction !== 'none') {\n      chart.interaction(interaction);\n    }\n    chart.axis(false).legend(false).coordinate('theta', { innerRadius: inner });\n    chart.filter('x', (_val: NzSafeAny, item: NzSafeAny) => item.checked !== false);\n    chart\n      .interval()\n      .adjust('stack')\n      .position('y')\n      .style({ lineWidth, stroke: '#fff' })\n      .color('x', isPercent ? percentColor : colors)\n      .tooltip('x*percent', (name: string, p: number) => ({\n        name,\n        value: `${hasLegend ? p : (p * 100).toFixed(2)} %`\n      }))\n      .state({});\n    chart.scale({\n      x: {\n        type: 'cat',\n        range: [0, 1]\n      }\n    });\n\n    chart.on(`interval:click`, (ev: Event) => {\n      this.ngZone.run(() => this.clickItem.emit({ item: ev.data?.data, ev }));\n    });\n\n    this.changeData();\n    chart.render();\n  }\n\n  changeData(): void {\n    const { _chart, data } = this;\n    if (!_chart || !Array.isArray(data) || data.length <= 0) return;\n\n    // 转化 percent\n    const totalSum = data.reduce((cur, item) => cur + item.y, 0);\n    for (const item of data) {\n      item.percent = totalSum === 0 ? 0 : item.y / totalSum;\n    }\n    _chart.changeData(data);\n    this.ngZone.run(() => this.genLegend());\n  }\n\n  private genLegend(): void {\n    const { hasLegend, isPercent, cdr, _chart } = this;\n    if (!hasLegend || isPercent) return;\n\n    this.legendData = _chart.geometries[0].dataArray.map((item: NzSafeAny) => {\n      const origin = item[0]._origin;\n      origin.color = item[0].color;\n      origin.checked = true;\n      origin.percent = (origin.percent * 100).toFixed(2);\n      return origin;\n    });\n\n    cdr.detectChanges();\n  }\n\n  _click(i: number): void {\n    const { legendData, _chart } = this;\n    legendData[i].checked = !legendData[i].checked;\n    _chart.render(true);\n  }\n\n  onChanges(): void {\n    this.fixData();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzSkeletonModule } from 'ng-zorro-antd/skeleton';\n\nimport { G2PieComponent } from './pie.component';\n\nconst COMPONENTS = [G2PieComponent];\n\n@NgModule({\n  imports: [CommonModule, NzDividerModule, NzOutletModule, NzSkeletonModule],\n  declarations: COMPONENTS,\n  exports: COMPONENTS\n})\nexport class G2PieModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;MAoDa,cAAe,SAAQ,eAAe;IAdnD;;QAyBE,eAAU,GAAgB,EAAE,CAAC;;QAKJ,YAAO,GAAG,IAAI,CAAC;QAC/B,UAAK,GAAG,0BAA0B,CAAC;QAGpB,WAAM,GAAG,CAAC,CAAC;QACV,cAAS,GAAG,KAAK,CAAC;QAClC,UAAK,GAAG,IAAI,CAAC;QACb,YAAO,GAA+B,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAErC,YAAO,GAAG,IAAI,CAAC;QAChB,cAAS,GAAG,CAAC,CAAC;QACd,kBAAa,GAAG,GAAG,CAAC;QACnB,WAAM,GAAG,IAAI,CAAC;QAE9B,SAAI,GAAgB,EAAE,CAAC;QAEvB,gBAAW,GAAsB,MAAM,CAAC;QACxC,UAAK,GAAe;YAC3B,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,EAAE;YACT,YAAY,EAAE,SAAS;SACxB,CAAC;QACiB,cAAS,GAAG,IAAI,YAAY,EAAkB,CAAC;KAoInE;;IAhIC,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW,IAAI,IAAI,CAAC,aAAa,CAAC;KAClF;IAEO,OAAO;QACb,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,OAAO,IAAI,IAAI,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO;SACR;QAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACrE,IAAI,CAAC,YAAY,GAAG,CAAC,KAAa,MAAM,KAAK,KAAK,IAAI,GAAG,SAAS,IAAI,KAAK,GAAG,YAAY,CAAC,CAAC;QAC5F,IAAI,CAAC,IAAI,GAAG;YACV;gBACE,CAAC,EAAE,IAAI;gBACP,CAAC,EAAE,OAAO;aACX;YACD;gBACE,CAAC,EAAE,OAAO;gBACV,CAAC,EAAE,GAAG,GAAG,OAAO;aACjB;SACF,CAAC;KACH;IAED,OAAO;QACL,MAAM,EACJ,IAAI,EACJ,MAAM,EACN,OAAO,EACP,OAAO,EACP,KAAK,EACL,SAAS,EACT,WAAW,EACX,KAAK,EACL,OAAO,EACP,SAAS,EACT,SAAS,EACT,YAAY,EACZ,MAAM,EACP,GAAG,IAAI,CAAC;QACT,MAAM,KAAK,IAAW,IAAI,CAAC,MAAM,GAAG,IAAK,MAAoB,CAAC,EAAE,CAAC,KAAK,CAAC;YACrE,SAAS,EAAE,IAAI,CAAC,aAAa;YAC7B,OAAO,EAAE,IAAI;YACb,MAAM;YACN,OAAO;YACP,KAAK;SACN,CAAC,CAAC,CAAC;QACJ,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAEvB,IAAI,CAAC,OAAO,EAAE;YACZ,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACtB;aAAM;YACL,KAAK,CAAC,OAAO,CAAC;gBACZ,SAAS,EAAE,KAAK;gBAChB,WAAW,EAAE,KAAK;aACnB,CAAC,CAAC;SACJ;QACD,IAAI,WAAW,KAAK,MAAM,EAAE;YAC1B,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;SAChC;QACD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;QAC5E,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,IAAe,EAAE,IAAe,KAAK,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;QAChF,KAAK;aACF,QAAQ,EAAE;aACV,MAAM,CAAC,OAAO,CAAC;aACf,QAAQ,CAAC,GAAG,CAAC;aACb,KAAK,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;aACpC,KAAK,CAAC,GAAG,EAAE,SAAS,GAAG,YAAY,GAAG,MAAM,CAAC;aAC7C,OAAO,CAAC,WAAW,EAAE,CAAC,IAAY,EAAE,CAAS,MAAM;YAClD,IAAI;YACJ,KAAK,EAAE,GAAG,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI;SACnD,CAAC,CAAC;aACF,KAAK,CAAC,EAAE,CAAC,CAAC;QACb,KAAK,CAAC,KAAK,CAAC;YACV,CAAC,EAAE;gBACD,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;aACd;SACF,CAAC,CAAC;QAEH,KAAK,CAAC,EAAE,CAAC,gBAAgB,EAAE,CAAC,EAAS;YACnC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAM,OAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAA,EAAE,CAAC,IAAI,0CAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAA,EAAA,CAAC,CAAC;SACzE,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,KAAK,CAAC,MAAM,EAAE,CAAC;KAChB;IAED,UAAU;QACR,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;YAAE,OAAO;;QAGhE,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7D,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;YACvB,IAAI,CAAC,OAAO,GAAG,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC;SACvD;QACD,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;KACzC;IAEO,SAAS;QACf,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QACnD,IAAI,CAAC,SAAS,IAAI,SAAS;YAAE,OAAO;QAEpC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAe;YACnE,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAC/B,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC7B,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YACtB,MAAM,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;YACnD,OAAO,MAAM,CAAC;SACf,CAAC,CAAC;QAEH,GAAG,CAAC,aAAa,EAAE,CAAC;KACrB;IAED,MAAM,CAAC,CAAS;QACd,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QACpC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QAC/C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACrB;IAED,SAAS;QACP,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;;;YAxLF,SAAS,SAAC;gBACT,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,OAAO;gBACjB,orCAAmC;gBACnC,IAAI,EAAE;oBACJ,gBAAgB,EAAE,MAAM;oBACxB,4BAA4B,EAAE,WAAW;oBACzC,8BAA8B,EAAE,OAAO;oBACvC,sBAAsB,EAAE,WAAW;iBACpC;gBACD,mBAAmB,EAAE,KAAK;gBAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;aACtC;;;sBAiBE,KAAK;oBACL,KAAK;uBACL,KAAK;oBACL,KAAK;qBACL,KAAK;wBACL,KAAK;oBACL,KAAK;sBACL,KAAK;sBACL,KAAK;sBACL,KAAK;wBACL,KAAK;4BACL,KAAK;qBACL,KAAK;0BACL,KAAK;mBACL,KAAK;qBACL,KAAK;0BACL,KAAK;oBACL,KAAK;wBAML,MAAM;;AAvBkB;IAAf,YAAY,EAAE;+CAAgB;AAIhB;IAAd,WAAW,EAAE;8CAAY;AACV;IAAf,YAAY,EAAE;iDAAmB;AAGnB;IAAd,WAAW,EAAE;+CAAiB;AACf;IAAf,YAAY,EAAE;+CAAgB;AAChB;IAAd,WAAW,EAAE;iDAAe;AACd;IAAd,WAAW,EAAE;qDAAqB;AACnB;IAAf,YAAY,EAAE;8CAAe;;ACvEzC,MAAM,UAAU,GAAG,CAAC,cAAc,CAAC,CAAC;MAOvB,WAAW;;;YALvB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,cAAc,EAAE,gBAAgB,CAAC;gBAC1E,YAAY,EAAE,UAAU;gBACxB,OAAO,EAAE,UAAU;aACpB;;;ACfD;;;;;;"}