{"version":3,"file":"delon-chart-chart-echarts.js","sources":["../../../../packages/chart/chart-echarts/echarts.service.ts","../../../../packages/chart/chart-echarts/echarts.component.ts","../../../../packages/chart/chart-echarts/echarts.module.ts","../../../../packages/chart/chart-echarts/delon-chart-chart-echarts.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { AlainChartConfig, AlainConfigService } from '@delon/util/config';\nimport { LazyService } from '@delon/util/other';\n\n@Injectable({ providedIn: 'root' })\nexport class ChartEChartsService implements OnDestroy {\n  private _cog: AlainChartConfig;\n  private loading = false;\n  private loaded = false;\n  private notify$ = new Subject<void>();\n\n  get cog(): AlainChartConfig {\n    return this._cog;\n  }\n  set cog(val: AlainChartConfig) {\n    this._cog = this.cogSrv.merge(\n      'chart',\n      {\n        theme: '',\n        echartsLib: 'https://cdnjs.cloudflare.com/ajax/libs/echarts/5.1.0/echarts.min.js'\n      } as AlainChartConfig,\n      val\n    )!;\n  }\n\n  constructor(private cogSrv: AlainConfigService, private lazySrv: LazyService) {\n    this.cog = { theme: '' };\n  }\n\n  libLoad(): this {\n    if (this.loading) {\n      if (this.loaded) {\n        this.notify$.next();\n      }\n      return this;\n    }\n    this.loading = true;\n    this.lazySrv\n      .load(this.cog.echartsLib!)\n      .then(() => {\n        const extensions = this.cog.echartsExtensions;\n        if (Array.isArray(extensions) && extensions.length > 0) {\n          return this.lazySrv.load(extensions).then(() => true);\n        }\n        return Promise.resolve(true);\n      })\n      .then(() => {\n        this.loaded = true;\n        this.notify$.next();\n      });\n    return this;\n  }\n\n  get notify(): Observable<void> {\n    return this.notify$.asObservable();\n  }\n\n  ngOnDestroy(): void {\n    this.notify$.unsubscribe();\n  }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { debounceTime, filter, takeUntil } from 'rxjs/operators';\n\nimport { NumberInput, ZoneOutside } from '@delon/util/decorator';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { ChartEChartsService } from './echarts.service';\nimport { ChartECharts, ChartEChartsEvent, ChartEChartsEventType, ChartEChartsOption } from './echarts.types';\n\n@Component({\n  selector: 'chart-echarts, [chart-echarts]',\n  exportAs: 'chartECharts',\n  template: `\n    <nz-skeleton *ngIf=\"!loaded\"></nz-skeleton>\n    <div #container [style.width]=\"_width\" [style.height]=\"_height\"></div>\n  `,\n  host: {\n    '[style.display]': `'inline-block'`,\n    '[style.width]': `_width`,\n    '[style.height]': `_height`\n  },\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class ChartEChartsComponent implements OnInit, OnDestroy {\n  static ngAcceptInputType_width: NumberInput;\n  static ngAcceptInputType_height: NumberInput;\n\n  @ViewChild('container', { static: true }) private node: ElementRef;\n  private destroy$ = new Subject<void>();\n  private _chart: ChartECharts | null = null;\n  private _theme?: string | Record<string, unknown> | null;\n  private _initOpt?: {\n    renderer?: NzSafeAny;\n    devicePixelRatio?: number;\n    width?: number;\n    height?: number;\n    locale?: NzSafeAny;\n  };\n  private _option: ChartEChartsOption;\n  _width = '100%';\n  _height = '400px';\n\n  @Input()\n  set width(val: NumberInput) {\n    this._width = typeof val === 'number' ? `${val}px` : `${val}`;\n  }\n  @Input() set height(val: NumberInput) {\n    this._height = typeof val === 'number' ? `${val}px` : `${val}`;\n  }\n  @Input()\n  set theme(value: string | Record<string, unknown> | null | undefined) {\n    this._theme = value;\n    if (this._chart) {\n      this.install();\n    }\n  }\n  @Input()\n  set initOpt(value: NzSafeAny) {\n    this._initOpt = value;\n    if (this._chart) {\n      this.install();\n    }\n  }\n  @Input()\n  set option(value: ChartEChartsOption) {\n    this._option = value;\n    if (this._chart) {\n      this.setOption(value, true);\n    }\n  }\n  @Output() readonly events = new EventEmitter<ChartEChartsEvent>();\n\n  get chart(): ChartECharts | null {\n    return this._chart;\n  }\n  loaded = false;\n\n  constructor(\n    private srv: ChartEChartsService,\n    private cdr: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private platform: Platform\n  ) {\n    this.srv.notify\n      .pipe(\n        takeUntil(this.destroy$),\n        filter(() => !this.loaded)\n      )\n      .subscribe(() => this.load());\n\n    this.theme = srv.cog.echartsTheme;\n  }\n\n  private emit(type: ChartEChartsEventType, other?: ChartEChartsEvent): void {\n    this.events.emit({ type, chart: this.chart!!, ...other });\n  }\n\n  @ZoneOutside()\n  private load(): void {\n    this.ngZone.run(() => {\n      this.loaded = true;\n      this.cdr.detectChanges();\n    });\n    this.emit('ready');\n    this.install();\n  }\n\n  install(): this {\n    this.destroy();\n    this._chart = (window as NzSafeAny).echarts.init(this.node.nativeElement, this._theme, this._initOpt);\n    this.emit('init');\n    this.setOption(this._option!);\n    return this;\n  }\n\n  destroy(): this {\n    if (this._chart) {\n      this._chart.dispose();\n      this.emit('destroy');\n    }\n    return this;\n  }\n\n  setOption(option: ChartEChartsOption, notMerge: boolean = false, lazyUpdate: boolean = false): this {\n    if (this._chart) {\n      this._chart.setOption(option, notMerge, lazyUpdate);\n      this.emit('set-option', { option } as NzSafeAny);\n    }\n    return this;\n  }\n\n  ngOnInit(): void {\n    if (!this.platform.isBrowser) {\n      return;\n    }\n    if ((window as NzSafeAny).echarts) {\n      this.load();\n    } else {\n      this.srv.libLoad();\n    }\n\n    fromEvent(window, 'resize')\n      .pipe(\n        takeUntil(this.destroy$),\n        filter(() => !!this._chart),\n        debounceTime(200)\n      )\n      .subscribe(() => this._chart!!.resize());\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.destroy();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzSkeletonModule } from 'ng-zorro-antd/skeleton';\n\nimport { ChartEChartsComponent } from './echarts.component';\n\nconst COMPONENTS = [ChartEChartsComponent];\n\n@NgModule({\n  imports: [CommonModule, NzSkeletonModule],\n  declarations: COMPONENTS,\n  exports: COMPONENTS\n})\nexport class ChartEChartsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}