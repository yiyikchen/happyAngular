{"version":3,"file":"mock.js","sources":["../../../../packages/mock/src/interface.ts","../../../../packages/mock/src/status.error.ts","../../../../packages/mock/src/mock.config.ts","../../../../packages/mock/src/mock.service.ts","../../../../packages/mock/src/mock.interceptor.ts","../../../../packages/mock/src/mock.module.ts","../../../../packages/mock/mock.ts"],"sourcesContent":["import { HttpRequest } from '@angular/common/http';\n\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport class MockOptions {\n  data?: NzSafeAny;\n}\n\nexport interface MockCachedRule {\n  [key: string]: NzSafeAny;\n\n  method: string;\n\n  url: string;\n\n  martcher: RegExp | null;\n\n  segments: string[];\n\n  callback(req: MockRequest): NzSafeAny;\n}\n\nexport interface MockRule {\n  [key: string]: NzSafeAny;\n\n  method: string;\n\n  url: string;\n\n  /** Ë∑ØÁî±ÂèÇÊï∞ */\n  params?: NzSafeAny;\n\n  callback(req: MockRequest): NzSafeAny;\n}\n\nexport interface MockRequest {\n  /** Ë∑ØÁî±ÂèÇÊï∞ */\n  params?: NzSafeAny;\n  /** URLÂèÇÊï∞ */\n  queryString?: NzSafeAny;\n  headers?: NzSafeAny;\n  body?: NzSafeAny;\n  /** ÂéüÂßã `HttpRequest` */\n  original: HttpRequest<NzSafeAny>;\n}\n","import type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport class MockStatusError {\n  statusText: string;\n\n  constructor(public status: number, public error?: NzSafeAny) {}\n}\n","import { AlainMockConfig } from '@delon/util/config';\n\nexport const MOCK_DEFULAT_CONFIG: AlainMockConfig = {\n  delay: 300,\n  force: false,\n  log: true,\n  executeOtherInterceptors: true\n};\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { AlainConfigService, AlainMockConfig } from '@delon/util/config';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { MockCachedRule, MockOptions, MockRule } from './interface';\nimport { MOCK_DEFULAT_CONFIG } from './mock.config';\n\n@Injectable({ providedIn: 'root' })\nexport class MockService implements OnDestroy {\n  private cached: MockCachedRule[] = [];\n  readonly config: AlainMockConfig;\n\n  constructor(cogSrv: AlainConfigService, options: MockOptions) {\n    this.config = cogSrv.merge('mock', MOCK_DEFULAT_CONFIG)!;\n    this.setData(options?.data);\n  }\n\n  /**\n   * Reset request data\n   *\n   * ÈáçÊñ∞ËÆæÁΩÆËØ∑Ê±ÇÊï∞ÊçÆ\n   */\n  setData(data: NzSafeAny): void {\n    this.applyMock(data);\n  }\n\n  // #region parse rule\n\n  private applyMock(data: NzSafeAny): void {\n    this.cached = [];\n    try {\n      this.realApplyMock(data);\n    } catch (e) {\n      this.outputError(e);\n    }\n  }\n\n  private realApplyMock(data: NzSafeAny): void {\n    if (!data) return;\n    Object.keys(data).forEach((key: string) => {\n      const rules = data[key];\n      if (!rules) return;\n      Object.keys(rules).forEach((ruleKey: string) => {\n        const value = rules[ruleKey];\n        if (!(typeof value === 'function' || typeof value === 'object' || typeof value === 'string')) {\n          throw Error(\n            `mock value of [${key}-${ruleKey}] should be function or object or string, but got ${typeof value}`\n          );\n        }\n        const rule = this.genRule(ruleKey, value);\n        if (['GET', 'POST', 'PUT', 'HEAD', 'DELETE', 'PATCH', 'OPTIONS'].indexOf(rule.method) === -1) {\n          throw Error(`method of ${key}-${ruleKey} is not valid`);\n        }\n        const item = this.cached.find(w => w.url === rule.url && w.method === rule.method);\n        if (item) {\n          item.callback = rule.callback;\n        } else {\n          this.cached.push(rule);\n        }\n      });\n    });\n    // regular ordering\n    this.cached.sort((a, b) => (b.martcher || '').toString().length - (a.martcher || '').toString().length);\n  }\n\n  private genRule(key: string, callback: NzSafeAny): MockCachedRule {\n    let method = 'GET';\n    let url = key;\n\n    if (key.indexOf(' ') > -1) {\n      const splited = key.split(' ');\n      method = splited[0].toLowerCase();\n      url = splited[1];\n    }\n\n    let martcher: RegExp | null = null;\n    let segments: string[] = [];\n    if (~url.indexOf(':')) {\n      segments = url!\n        .split('/')\n        .filter(segment => segment.startsWith(':'))\n        .map(v => v.substring(1));\n      const reStr = url!\n        .split('/')\n        .map(segment => (segment.startsWith(':') ? `([^/]+)` : segment))\n        .join('/');\n      martcher = new RegExp(`^${reStr}`, 'i');\n    } else if (/(\\([^)]+\\))/i.test(url)) {\n      martcher = new RegExp(url, 'i');\n    }\n\n    return {\n      url,\n      martcher,\n      segments,\n      callback,\n      method: method.toUpperCase()\n    };\n  }\n\n  private outputError(error: NzSafeAny): void {\n    const filePath = error.message.split(': ')[0];\n    const errors = (error.stack as string)\n      .split('\\n')\n      .filter(line => line.trim().indexOf('at ') !== 0)\n      .map(line => line.replace(`${filePath}: `, ''));\n    errors.splice(1, 0, '');\n\n    console.group();\n    console.warn(`==========Failed to parse mock config.==========`);\n    console.log(errors.join('\\n'));\n    console.groupEnd();\n\n    throw error;\n  }\n\n  // #endregion\n\n  getRule(method: string, url: string): MockRule | null {\n    method = (method || 'GET').toUpperCase();\n    const params: NzSafeAny = {};\n    const list = this.cached.filter(w => w.method === method && (w.martcher ? w.martcher.test(url) : w.url === url));\n    if (list.length === 0) return null;\n    const ret = list.find(w => w.url === url) || list[0];\n    if (ret.martcher) {\n      const execArr = ret.martcher.exec(url);\n      execArr!.slice(1).map((value: string, index: number) => {\n        params[ret.segments[index]] = value;\n      });\n    }\n    return {\n      url,\n      method: ret.method,\n      params,\n      callback: ret.callback\n    };\n  }\n\n  clearCache(): void {\n    this.cached = [];\n  }\n\n  get rules(): MockCachedRule[] {\n    return this.cached;\n  }\n\n  ngOnDestroy(): void {\n    this.clearCache();\n  }\n}\n","import {\n  HttpBackend,\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n  HttpResponseBase,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { deepCopy } from '@delon/util/other';\nimport type { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { MockRequest } from './interface';\nimport { MockService } from './mock.service';\nimport { MockStatusError } from './status.error';\n\nclass HttpMockInterceptorHandler implements HttpHandler {\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) {}\n\n  handle(req: HttpRequest<NzSafeAny>): Observable<HttpEvent<NzSafeAny>> {\n    return this.interceptor.intercept(req, this.next);\n  }\n}\n\n@Injectable()\nexport class MockInterceptor implements HttpInterceptor {\n  constructor(private injector: Injector) {}\n\n  intercept(req: HttpRequest<NzSafeAny>, next: HttpHandler): Observable<HttpEvent<NzSafeAny>> {\n    const src = this.injector.get(MockService);\n    const config = src.config;\n    const rule = src.getRule(req.method, req.url.split('?')[0]);\n    if (!rule && !config.force) {\n      return next.handle(req);\n    }\n\n    let res: NzSafeAny;\n    switch (typeof rule!.callback) {\n      case 'function':\n        const mockRequest: MockRequest = {\n          original: req,\n          body: req.body,\n          queryString: {},\n          headers: {},\n          params: rule!.params\n        };\n        const urlParams = req.url.split('?');\n        if (urlParams.length > 1) {\n          urlParams[1].split('&').forEach(item => {\n            const itemArr = item.split('=');\n            const key = itemArr[0];\n            const value = itemArr[1];\n            // is array\n            if (Object.keys(mockRequest.queryString).includes(key)) {\n              if (!Array.isArray(mockRequest.queryString[key])) {\n                mockRequest.queryString[key] = [mockRequest.queryString[key]];\n              }\n              mockRequest.queryString[key].push(value);\n            } else {\n              mockRequest.queryString[key] = value;\n            }\n          });\n        }\n        req.params.keys().forEach(key => (mockRequest.queryString[key] = req.params.get(key)));\n        req.headers.keys().forEach(key => (mockRequest.headers[key] = req.headers.get(key)));\n\n        try {\n          res = rule!.callback.call(this, mockRequest);\n        } catch (e) {\n          res = new HttpErrorResponse({\n            url: req.url,\n            headers: req.headers,\n            status: e instanceof MockStatusError ? e.status : 400,\n            statusText: e.statusText || 'Unknown Error',\n            error: e.error\n          });\n        }\n        break;\n      default:\n        res = rule!.callback;\n        break;\n    }\n\n    if (!(res instanceof HttpResponseBase)) {\n      res = new HttpResponse({\n        status: 200,\n        url: req.url,\n        body: res\n      });\n    }\n\n    if (res.body) {\n      res.body = deepCopy(res.body);\n    }\n\n    if (config.log) {\n      console.log(`%cüëΩ${req.method}->${req.urlWithParams}->request`, 'background:#000;color:#bada55', req);\n      console.log(`%cüëΩ${req.method}->${req.urlWithParams}->response`, 'background:#000;color:#bada55', res);\n    }\n\n    const res$ = res instanceof HttpErrorResponse ? throwError(res) : of(res);\n\n    if (config.executeOtherInterceptors) {\n      const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n      const lastInterceptors = interceptors.slice(interceptors.indexOf(this) + 1);\n      if (lastInterceptors.length > 0) {\n        const chain = lastInterceptors.reduceRight(\n          (_next, _interceptor) => new HttpMockInterceptorHandler(_next, _interceptor),\n          {\n            handle: () => res$\n          } as HttpBackend\n        );\n        return chain.handle(req).pipe(delay(config.delay!));\n      }\n    }\n\n    return res$.pipe(delay(config.delay!));\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { MockOptions } from './interface';\nimport { MockInterceptor } from './mock.interceptor';\n\n@NgModule({})\nexport class DelonMockModule {\n  static forRoot(options?: MockOptions): ModuleWithProviders<DelonMockModule> {\n    return {\n      ngModule: DelonMockModule,\n      providers: [\n        { provide: MockOptions, useValue: options },\n        { provide: HTTP_INTERCEPTORS, useClass: MockInterceptor, multi: true }\n      ]\n    };\n  }\n\n  static forChild(): ModuleWithProviders<DelonMockModule> {\n    return {\n      ngModule: DelonMockModule,\n      providers: [{ provide: HTTP_INTERCEPTORS, useClass: MockInterceptor, multi: true }]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}