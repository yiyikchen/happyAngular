{"version":3,"file":"resizable.directive.d.ts","sources":["resizable.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Platform } from '@angular/cdk/platform';\nimport { AfterViewInit, ElementRef, EventEmitter, NgZone, OnDestroy, Renderer2 } from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { NzResizableService } from './resizable.service';\nexport interface NzResizeEvent {\n    width?: number;\n    height?: number;\n    col?: number;\n    mouseEvent?: MouseEvent | TouchEvent;\n}\nexport declare class NzResizableDirective implements AfterViewInit, OnDestroy {\n    private elementRef;\n    private renderer;\n    private nzResizableService;\n    private platform;\n    private ngZone;\n    static ngAcceptInputType_nzLockAspectRatio: BooleanInput;\n    static ngAcceptInputType_nzPreview: BooleanInput;\n    static ngAcceptInputType_nzDisabled: BooleanInput;\n    nzBounds: 'window' | 'parent' | ElementRef<HTMLElement>;\n    nzMaxHeight?: number;\n    nzMaxWidth?: number;\n    nzMinHeight: number;\n    nzMinWidth: number;\n    nzGridColumnCount: number;\n    nzMaxColumn: number;\n    nzMinColumn: number;\n    nzLockAspectRatio: boolean;\n    nzPreview: boolean;\n    nzDisabled: boolean;\n    readonly nzResize: EventEmitter<NzResizeEvent>;\n    readonly nzResizeEnd: EventEmitter<NzResizeEvent>;\n    readonly nzResizeStart: EventEmitter<NzResizeEvent>;\n    resizing: boolean;\n    private elRect;\n    private currentHandleEvent;\n    private ghostElement;\n    private el;\n    private sizeCache;\n    private destroy$;\n    constructor(elementRef: ElementRef<HTMLElement>, renderer: Renderer2, nzResizableService: NzResizableService, platform: Platform, ngZone: NgZone);\n    onMouseenter(): void;\n    onMouseleave(): void;\n    setPosition(): void;\n    calcSize(width: number, height: number, ratio: number): NzResizeEvent;\n    setCursor(): void;\n    resize(event: MouseEvent | TouchEvent): void;\n    endResize(event: MouseEvent | TouchEvent): void;\n    previewResize({ width, height }: NzResizeEvent): void;\n    createGhostElement(): void;\n    removeGhostElement(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n}\n"]}