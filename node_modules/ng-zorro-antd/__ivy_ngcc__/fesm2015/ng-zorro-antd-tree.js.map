{"version":3,"file":"ng-zorro-antd-tree.js","sources":["../../components/tree/tree-drop-indicator.component.ts","../../components/tree/tree-indent.component.ts","../../components/tree/tree-node-checkbox.component.ts","../../components/tree/tree-node-switcher.component.ts","../../components/tree/tree-node-title.component.ts","../../components/tree/tree-node.component.ts","../../components/tree/tree.service.ts","../../components/tree/tree.component.ts","../../components/tree/tree.module.ts","../../components/tree/public-api.ts","../../components/tree/ng-zorro-antd-tree.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { NgStyleInterface } from 'ng-zorro-antd/core/types';\n\n@Component({\n  selector: 'nz-tree-drop-indicator',\n  exportAs: 'NzTreeDropIndicator',\n  template: ``,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-tree-drop-indicator]': 'true',\n    '[style]': 'style'\n  }\n})\nexport class NzTreeDropIndicatorComponent implements OnChanges {\n  @Input() dropPosition?: number;\n  @Input() level: number = 1;\n  @Input() direction: string = 'ltr';\n  style: NgStyleInterface = {};\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnChanges(_changes: SimpleChanges): void {\n    this.renderIndicator(this.dropPosition!, this.direction);\n  }\n\n  renderIndicator(dropPosition: number, direction: string = 'ltr'): void {\n    const offset = 4;\n    const startPosition = direction === 'ltr' ? 'left' : 'right';\n    const endPosition = direction === 'ltr' ? 'right' : 'left';\n    const style: NgStyleInterface = {\n      [startPosition]: `${offset}px`,\n      [endPosition]: '0px'\n    };\n    switch (dropPosition) {\n      case -1:\n        style.top = `${-3}px`;\n        break;\n      case 1:\n        style.bottom = `${-3}px`;\n        break;\n      case 0:\n        // dropPosition === 0\n        style.bottom = `${-3}px`;\n        style[startPosition] = `${offset + 24}px`;\n        break;\n      default:\n        style.display = 'none';\n        break;\n    }\n    this.style = style;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'nz-tree-indent',\n  exportAs: 'nzTreeIndent',\n  template: `\n    <span\n      [class.ant-tree-indent-unit]=\"!nzSelectMode\"\n      [class.ant-select-tree-indent-unit]=\"nzSelectMode\"\n      [class.ant-select-tree-indent-unit-start]=\"nzSelectMode && nzIsStart[i]\"\n      [class.ant-tree-indent-unit-start]=\"!nzSelectMode && nzIsStart[i]\"\n      [class.ant-select-tree-indent-unit-end]=\"nzSelectMode && nzIsEnd[i]\"\n      [class.ant-tree-indent-unit-end]=\"!nzSelectMode && nzIsEnd[i]\"\n      *ngFor=\"let _ of listOfUnit; let i = index\"\n    ></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[attr.aria-hidden]': 'true',\n    '[class.ant-tree-indent]': '!nzSelectMode',\n    '[class.ant-select-tree-indent]': 'nzSelectMode'\n  }\n})\nexport class NzTreeIndentComponent implements OnChanges {\n  @Input() nzTreeLevel = 0;\n  @Input() nzIsStart: boolean[] = [];\n  @Input() nzIsEnd: boolean[] = [];\n  @Input() nzSelectMode = false;\n\n  listOfUnit: number[] = [];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzTreeLevel } = changes;\n    if (nzTreeLevel) {\n      this.listOfUnit = [...new Array(nzTreeLevel.currentValue || 0)];\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'nz-tree-node-checkbox[builtin]',\n  template: `\n    <span [class.ant-tree-checkbox-inner]=\"!nzSelectMode\" [class.ant-select-tree-checkbox-inner]=\"nzSelectMode\"></span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-checkbox]': `nzSelectMode`,\n    '[class.ant-select-tree-checkbox-checked]': `nzSelectMode && isChecked`,\n    '[class.ant-select-tree-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n    '[class.ant-select-tree-checkbox-disabled]': `nzSelectMode && (isDisabled || isDisableCheckbox)`,\n    '[class.ant-tree-checkbox]': `!nzSelectMode`,\n    '[class.ant-tree-checkbox-checked]': `!nzSelectMode && isChecked`,\n    '[class.ant-tree-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n    '[class.ant-tree-checkbox-disabled]': `!nzSelectMode && (isDisabled || isDisableCheckbox)`\n  }\n})\nexport class NzTreeNodeBuiltinCheckboxComponent {\n  @Input() nzSelectMode = false;\n  @Input() isChecked?: boolean;\n  @Input() isHalfChecked?: boolean;\n  @Input() isDisabled?: boolean;\n  @Input() isDisableCheckbox?: boolean;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';\n\nimport { NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\n\n@Component({\n  selector: 'nz-tree-node-switcher',\n  template: `\n    <ng-container *ngIf=\"isShowSwitchIcon\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <i\n            nz-icon\n            nzType=\"caret-down\"\n            [class.ant-select-tree-switcher-icon]=\"nzSelectMode\"\n            [class.ant-tree-switcher-icon]=\"!nzSelectMode\"\n          ></i>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"nzShowLine\">\n      <ng-container *ngIf=\"!isLoading; else loadingTemplate\">\n        <ng-container *nzStringTemplateOutlet=\"nzExpandedIcon; context: { $implicit: context, origin: context.origin }\">\n          <i\n            *ngIf=\"isShowLineIcon\"\n            nz-icon\n            [nzType]=\"isSwitcherOpen ? 'minus-square' : 'plus-square'\"\n            class=\"ant-tree-switcher-line-icon\"\n          ></i>\n          <i *ngIf=\"!isShowLineIcon\" nz-icon nzType=\"file\" class=\"ant-tree-switcher-line-icon\"></i>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-template #loadingTemplate>\n      <i nz-icon nzType=\"loading\" [nzSpin]=\"true\" class=\"ant-tree-switcher-loading-icon\"></i>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-switcher]': 'nzSelectMode',\n    '[class.ant-select-tree-switcher-noop]': 'nzSelectMode && isLeaf',\n    '[class.ant-select-tree-switcher_open]': 'nzSelectMode && isSwitcherOpen',\n    '[class.ant-select-tree-switcher_close]': 'nzSelectMode && isSwitcherClose',\n    '[class.ant-tree-switcher]': '!nzSelectMode',\n    '[class.ant-tree-switcher-noop]': '!nzSelectMode && isLeaf',\n    '[class.ant-tree-switcher_open]': '!nzSelectMode && isSwitcherOpen',\n    '[class.ant-tree-switcher_close]': '!nzSelectMode && isSwitcherClose'\n  }\n})\nexport class NzTreeNodeSwitcherComponent {\n  @Input() nzShowExpand?: boolean;\n  @Input() nzShowLine?: boolean;\n  @Input() nzExpandedIcon?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzSelectMode = false;\n  @Input() context!: NzTreeNode;\n  @Input() isLeaf?: boolean;\n  @Input() isLoading?: boolean;\n  @Input() isExpanded?: boolean;\n\n  get isShowLineIcon(): boolean {\n    return !this.isLeaf && !!this.nzShowLine;\n  }\n\n  get isShowSwitchIcon(): boolean {\n    return !this.isLeaf && !this.nzShowLine;\n  }\n\n  get isSwitcherOpen(): boolean {\n    return !!this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\n\nimport { NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\n\n@Component({\n  selector: 'nz-tree-node-title',\n  template: `\n    <ng-template\n      [ngTemplateOutlet]=\"treeTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: context, origin: context.origin }\"\n    ></ng-template>\n    <ng-container *ngIf=\"!treeTemplate\">\n      <span\n        *ngIf=\"icon && showIcon\"\n        [class.ant-tree-icon__open]=\"isSwitcherOpen\"\n        [class.ant-tree-icon__close]=\"isSwitcherClose\"\n        [class.ant-tree-icon_loading]=\"isLoading\"\n        [class.ant-select-tree-iconEle]=\"selectMode\"\n        [class.ant-tree-iconEle]=\"!selectMode\"\n      >\n        <span\n          [class.ant-select-tree-iconEle]=\"selectMode\"\n          [class.ant-select-tree-icon__customize]=\"selectMode\"\n          [class.ant-tree-iconEle]=\"!selectMode\"\n          [class.ant-tree-icon__customize]=\"!selectMode\"\n        >\n          <i nz-icon *ngIf=\"icon\" [nzType]=\"icon\"></i>\n        </span>\n      </span>\n      <span class=\"ant-tree-title\" [innerHTML]=\"title | nzHighlight: matchedValue:'i':'font-highlight'\"></span>\n      <nz-tree-drop-indicator\n        *ngIf=\"showIndicator\"\n        [dropPosition]=\"dragPosition\"\n        [level]=\"context.level\"\n      ></nz-tree-drop-indicator>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[attr.title]': 'title',\n    '[attr.draggable]': 'canDraggable',\n    '[attr.aria-grabbed]': 'canDraggable',\n    '[class.draggable]': 'canDraggable',\n    '[class.ant-select-tree-node-content-wrapper]': `selectMode`,\n    '[class.ant-select-tree-node-content-wrapper-open]': `selectMode && isSwitcherOpen`,\n    '[class.ant-select-tree-node-content-wrapper-close]': `selectMode && isSwitcherClose`,\n    '[class.ant-select-tree-node-selected]': `selectMode && isSelected`,\n    '[class.ant-tree-node-content-wrapper]': `!selectMode`,\n    '[class.ant-tree-node-content-wrapper-open]': `!selectMode && isSwitcherOpen`,\n    '[class.ant-tree-node-content-wrapper-close]': `!selectMode && isSwitcherClose`,\n    '[class.ant-tree-node-selected]': `!selectMode && isSelected`\n  }\n})\nexport class NzTreeNodeTitleComponent implements OnChanges {\n  @Input() searchValue!: string;\n  @Input() treeTemplate: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }> | null = null;\n  @Input() draggable!: boolean;\n  @Input() showIcon!: boolean;\n  @Input() selectMode = false;\n  @Input() context!: NzTreeNode;\n  @Input() icon!: string;\n  @Input() title!: string;\n  @Input() isLoading!: boolean;\n  @Input() isSelected!: boolean;\n  @Input() isDisabled!: boolean;\n  @Input() isMatched!: boolean;\n  @Input() isExpanded!: boolean;\n  @Input() isLeaf!: boolean;\n  // Drag indicator\n  @Input() showIndicator = true;\n  @Input() dragPosition?: number;\n\n  get canDraggable(): boolean | null {\n    return this.draggable && !this.isDisabled ? true : null;\n  }\n\n  get matchedValue(): string {\n    return this.isMatched ? this.searchValue : '';\n  }\n\n  get isSwitcherOpen(): boolean {\n    return this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { showIndicator, dragPosition } = changes;\n    if (showIndicator || dragPosition) {\n      this.cdr.markForCheck();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChange,\n  TemplateRef\n} from '@angular/core';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport {\n  NzFormatBeforeDropEvent,\n  NzFormatEmitEvent,\n  NzTreeBaseService,\n  NzTreeNode,\n  NzTreeNodeOptions\n} from 'ng-zorro-antd/core/tree';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n@Component({\n  selector: 'nz-tree-node[builtin]',\n  exportAs: 'nzTreeBuiltinNode',\n  template: `\n    <nz-tree-indent\n      [nzTreeLevel]=\"nzTreeNode.level\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [nzIsStart]=\"isStart\"\n      [nzIsEnd]=\"isEnd\"\n    ></nz-tree-indent>\n    <nz-tree-node-switcher\n      *ngIf=\"nzShowExpand\"\n      [nzShowExpand]=\"nzShowExpand\"\n      [nzShowLine]=\"nzShowLine\"\n      [nzExpandedIcon]=\"nzExpandedIcon\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      [isLeaf]=\"isLeaf\"\n      [isExpanded]=\"isExpanded\"\n      [isLoading]=\"isLoading\"\n      (click)=\"clickExpand($event)\"\n    ></nz-tree-node-switcher>\n    <nz-tree-node-checkbox\n      builtin\n      *ngIf=\"nzCheckable\"\n      (click)=\"clickCheckBox($event)\"\n      [nzSelectMode]=\"nzSelectMode\"\n      [isChecked]=\"isChecked\"\n      [isHalfChecked]=\"isHalfChecked\"\n      [isDisabled]=\"isDisabled\"\n      [isDisableCheckbox]=\"isDisableCheckbox\"\n    ></nz-tree-node-checkbox>\n    <nz-tree-node-title\n      [icon]=\"icon\"\n      [title]=\"title\"\n      [isLoading]=\"isLoading\"\n      [isSelected]=\"isSelected\"\n      [isDisabled]=\"isDisabled\"\n      [isMatched]=\"isMatched\"\n      [isExpanded]=\"isExpanded\"\n      [isLeaf]=\"isLeaf\"\n      [searchValue]=\"nzSearchValue\"\n      [treeTemplate]=\"nzTreeTemplate\"\n      [draggable]=\"nzDraggable\"\n      [showIcon]=\"nzShowIcon\"\n      [selectMode]=\"nzSelectMode\"\n      [context]=\"nzTreeNode\"\n      [showIndicator]=\"showIndicator\"\n      [dragPosition]=\"dragPos\"\n      (dblclick)=\"dblClick($event)\"\n      (click)=\"clickSelect($event)\"\n      (contextmenu)=\"contextMenu($event)\"\n    ></nz-tree-node-title>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  host: {\n    '[class.ant-select-tree-treenode]': `nzSelectMode`,\n    '[class.ant-select-tree-treenode-disabled]': `nzSelectMode && isDisabled`,\n    '[class.ant-select-tree-treenode-switcher-open]': `nzSelectMode && isSwitcherOpen`,\n    '[class.ant-select-tree-treenode-switcher-close]': `nzSelectMode && isSwitcherClose`,\n    '[class.ant-select-tree-treenode-checkbox-checked]': `nzSelectMode && isChecked`,\n    '[class.ant-select-tree-treenode-checkbox-indeterminate]': `nzSelectMode && isHalfChecked`,\n    '[class.ant-select-tree-treenode-selected]': `nzSelectMode && isSelected`,\n    '[class.ant-select-tree-treenode-loading]': `nzSelectMode && isLoading`,\n    '[class.ant-tree-treenode]': `!nzSelectMode`,\n    '[class.ant-tree-treenode-disabled]': `!nzSelectMode && isDisabled`,\n    '[class.ant-tree-treenode-switcher-open]': `!nzSelectMode && isSwitcherOpen`,\n    '[class.ant-tree-treenode-switcher-close]': `!nzSelectMode && isSwitcherClose`,\n    '[class.ant-tree-treenode-checkbox-checked]': `!nzSelectMode && isChecked`,\n    '[class.ant-tree-treenode-checkbox-indeterminate]': `!nzSelectMode && isHalfChecked`,\n    '[class.ant-tree-treenode-selected]': `!nzSelectMode && isSelected`,\n    '[class.ant-tree-treenode-loading]': `!nzSelectMode && isLoading`,\n    '[style.display]': 'displayStyle',\n    '(mousedown)': 'onMousedown($event)'\n  }\n})\nexport class NzTreeNodeBuiltinComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_nzShowLine: BooleanInput;\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzCheckable: BooleanInput;\n  static ngAcceptInputType_nzAsyncData: BooleanInput;\n  static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n  static ngAcceptInputType_nzNoAnimation: BooleanInput;\n  static ngAcceptInputType_nzSelectMode: BooleanInput;\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n\n  /**\n   * for global property\n   */\n  @Input() icon: string = '';\n  @Input() title: string = '';\n  @Input() isLoading: boolean = false;\n  @Input() isSelected: boolean = false;\n  @Input() isDisabled: boolean = false;\n  @Input() isMatched: boolean = false;\n  @Input() isExpanded!: boolean;\n  @Input() isLeaf!: boolean;\n  @Input() isChecked?: boolean;\n  @Input() isHalfChecked?: boolean;\n  @Input() isDisableCheckbox?: boolean;\n  @Input() isSelectable?: boolean;\n  @Input() canHide?: boolean;\n  @Input() isStart: boolean[] = [];\n  @Input() isEnd: boolean[] = [];\n  @Input() nzTreeNode!: NzTreeNode;\n  @Input() @InputBoolean() nzShowLine?: boolean;\n  @Input() @InputBoolean() nzShowExpand?: boolean;\n  @Input() @InputBoolean() nzCheckable?: boolean;\n  @Input() @InputBoolean() nzAsyncData?: boolean;\n  @Input() @InputBoolean() nzHideUnMatched = false;\n  @Input() @InputBoolean() nzNoAnimation = false;\n  @Input() @InputBoolean() nzSelectMode = false;\n  @Input() @InputBoolean() nzShowIcon = false;\n  @Input() nzExpandedIcon?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }> | null = null;\n  @Input() nzBeforeDrop?: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\n  @Input() nzSearchValue = '';\n  @Input() nzDraggable: boolean = false;\n  @Output() readonly nzClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzDblClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzContextMenu = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragStart = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnter = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragOver = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragLeave = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDrop = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnd = new EventEmitter<NzFormatEmitEvent>();\n\n  /**\n   * drag var\n   */\n  destroy$ = new Subject();\n  dragPos = 2;\n  dragPosClass: { [key: string]: string } = {\n    0: 'drag-over',\n    1: 'drag-over-gap-bottom',\n    '-1': 'drag-over-gap-top'\n  };\n  showIndicator = false;\n  /**\n   * default set\n   */\n  get displayStyle(): string {\n    // to hide unmatched nodes\n    return this.nzSearchValue && this.nzHideUnMatched && !this.isMatched && !this.isExpanded && this.canHide\n      ? 'none'\n      : '';\n  }\n\n  get isSwitcherOpen(): boolean {\n    return this.isExpanded && !this.isLeaf;\n  }\n\n  get isSwitcherClose(): boolean {\n    return !this.isExpanded && !this.isLeaf;\n  }\n\n  onMousedown(event: MouseEvent): void {\n    if (this.nzSelectMode) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * collapse node\n   *\n   * @param event\n   */\n  clickExpand(event: MouseEvent): void {\n    event.preventDefault();\n    if (!this.isLoading && !this.isLeaf) {\n      // set async state\n      if (this.nzAsyncData && this.nzTreeNode.children.length === 0 && !this.isExpanded) {\n        this.nzTreeNode.isLoading = true;\n      }\n      this.nzTreeNode.setExpanded(!this.isExpanded);\n    }\n    this.nzTreeService.setExpandedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('expand', this.nzTreeNode, event);\n    this.nzExpandChange.emit(eventNext);\n  }\n\n  clickSelect(event: MouseEvent): void {\n    event.preventDefault();\n    if (this.isSelectable && !this.isDisabled) {\n      this.nzTreeNode.isSelected = !this.nzTreeNode.isSelected;\n    }\n    this.nzTreeService.setSelectedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('click', this.nzTreeNode, event);\n    this.nzClick.emit(eventNext);\n  }\n\n  dblClick(event: MouseEvent): void {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('dblclick', this.nzTreeNode, event);\n    this.nzDblClick.emit(eventNext);\n  }\n\n  contextMenu(event: MouseEvent): void {\n    event.preventDefault();\n    const eventNext = this.nzTreeService.formatEvent('contextmenu', this.nzTreeNode, event);\n    this.nzContextMenu.emit(eventNext);\n  }\n\n  /**\n   * check node\n   *\n   * @param event\n   */\n  clickCheckBox(event: MouseEvent): void {\n    event.preventDefault();\n    // return if node is disabled\n    if (this.isDisabled || this.isDisableCheckbox) {\n      return;\n    }\n    this.nzTreeNode.isChecked = !this.nzTreeNode.isChecked;\n    this.nzTreeNode.isHalfChecked = false;\n    this.nzTreeService.setCheckedNodeList(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('check', this.nzTreeNode, event);\n    this.nzCheckBoxChange.emit(eventNext);\n  }\n\n  clearDragClass(): void {\n    const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over', 'drop-target'];\n    dragClass.forEach(e => {\n      this.renderer.removeClass(this.elementRef.nativeElement, e);\n    });\n  }\n\n  /**\n   * drag event\n   *\n   * @param e\n   */\n  handleDragStart(e: DragEvent): void {\n    try {\n      // ie throw error\n      // firefox-need-it\n      e.dataTransfer!.setData('text/plain', this.nzTreeNode.key!);\n    } catch (error) {\n      // empty\n    }\n    this.nzTreeService.setSelectedNode(this.nzTreeNode);\n    const eventNext = this.nzTreeService.formatEvent('dragstart', this.nzTreeNode, e);\n    this.nzOnDragStart.emit(eventNext);\n  }\n\n  handleDragEnter(e: DragEvent): void {\n    e.preventDefault();\n    // reset position\n    this.showIndicator = this.nzTreeNode.key !== this.nzTreeService.getSelectedNode()?.key;\n    this.renderIndicator(2);\n    this.ngZone.run(() => {\n      const eventNext = this.nzTreeService.formatEvent('dragenter', this.nzTreeNode, e);\n      this.nzOnDragEnter.emit(eventNext);\n    });\n  }\n\n  handleDragOver(e: DragEvent): void {\n    e.preventDefault();\n    const dropPosition = this.nzTreeService.calcDropPosition(e);\n    if (this.dragPos !== dropPosition) {\n      this.clearDragClass();\n      this.renderIndicator(dropPosition);\n      // leaf node will pass\n      if (!(this.dragPos === 0 && this.isLeaf)) {\n        this.renderer.addClass(this.elementRef.nativeElement, this.dragPosClass[this.dragPos]);\n        this.renderer.addClass(this.elementRef.nativeElement, 'drop-target');\n      }\n    }\n    const eventNext = this.nzTreeService.formatEvent('dragover', this.nzTreeNode, e);\n    this.nzOnDragOver.emit(eventNext);\n  }\n\n  handleDragLeave(e: DragEvent): void {\n    e.preventDefault();\n    this.renderIndicator(2);\n    this.clearDragClass();\n    const eventNext = this.nzTreeService.formatEvent('dragleave', this.nzTreeNode, e);\n    this.nzOnDragLeave.emit(eventNext);\n  }\n\n  handleDragDrop(e: DragEvent): void {\n    e.preventDefault();\n    e.stopPropagation();\n    this.ngZone.run(() => {\n      this.showIndicator = false;\n      this.clearDragClass();\n      const node = this.nzTreeService.getSelectedNode();\n      if (!node || (node && node.key === this.nzTreeNode.key) || (this.dragPos === 0 && this.isLeaf)) {\n        return;\n      }\n      // pass if node is leafNo\n      const dropEvent = this.nzTreeService.formatEvent('drop', this.nzTreeNode, e);\n      const dragEndEvent = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n      if (this.nzBeforeDrop) {\n        this.nzBeforeDrop({\n          dragNode: this.nzTreeService.getSelectedNode()!,\n          node: this.nzTreeNode,\n          pos: this.dragPos\n        }).subscribe((canDrop: boolean) => {\n          if (canDrop) {\n            this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n          }\n          this.nzOnDrop.emit(dropEvent);\n          this.nzOnDragEnd.emit(dragEndEvent);\n        });\n      } else if (this.nzTreeNode) {\n        this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\n        this.nzOnDrop.emit(dropEvent);\n      }\n    });\n  }\n\n  handleDragEnd(e: DragEvent): void {\n    e.preventDefault();\n    this.ngZone.run(() => {\n      // if user do not custom beforeDrop\n      if (!this.nzBeforeDrop) {\n        const eventNext = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\n        this.nzOnDragEnd.emit(eventNext);\n      }\n    });\n  }\n\n  /**\n   * Listening to dragging events.\n   */\n  handDragEvent(): void {\n    this.ngZone.runOutsideAngular(() => {\n      if (this.nzDraggable) {\n        const nativeElement = this.elementRef.nativeElement;\n        this.destroy$ = new Subject();\n        fromEvent<DragEvent>(nativeElement, 'dragstart')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragStart(e));\n        fromEvent<DragEvent>(nativeElement, 'dragenter')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragEnter(e));\n        fromEvent<DragEvent>(nativeElement, 'dragover')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragOver(e));\n        fromEvent<DragEvent>(nativeElement, 'dragleave')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragLeave(e));\n        fromEvent<DragEvent>(nativeElement, 'drop')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragDrop(e));\n        fromEvent<DragEvent>(nativeElement, 'dragend')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((e: DragEvent) => this.handleDragEnd(e));\n      } else {\n        this.destroy$.next();\n        this.destroy$.complete();\n      }\n    });\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n\n  constructor(\n    public nzTreeService: NzTreeBaseService,\n    private ngZone: NgZone,\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  ngOnInit(): void {\n    this.nzTreeNode.component = this;\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n    const { nzDraggable } = changes;\n    if (nzDraggable) {\n      this.handDragEvent();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private renderIndicator(dropPosition: number): void {\n    this.ngZone.run(() => {\n      this.showIndicator = dropPosition !== 2;\n      if (this.nzTreeNode.key === this.nzTreeService.getSelectedNode()?.key || (dropPosition === 0 && this.isLeaf)) {\n        return;\n      }\n      this.dragPos = dropPosition;\n      this.cdr.markForCheck();\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { NzTreeBaseService } from 'ng-zorro-antd/core/tree';\n\n@Injectable()\nexport class NzTreeService extends NzTreeBaseService {\n  constructor() {\n    super();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChange,\n  SkipSelf,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { treeCollapseMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigKey, NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport {\n  flattenTreeData,\n  NzFormatBeforeDropEvent,\n  NzFormatEmitEvent,\n  NzTreeBase,\n  NzTreeBaseService,\n  NzTreeHigherOrderServiceToken,\n  NzTreeNode,\n  NzTreeNodeKey,\n  NzTreeNodeOptions\n} from 'ng-zorro-antd/core/tree';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzTreeService } from './tree.service';\n\nexport function NzTreeServiceFactory(\n  higherOrderService: NzTreeBaseService,\n  treeService: NzTreeService\n): NzTreeBaseService {\n  return higherOrderService ? higherOrderService : treeService;\n}\n\nconst NZ_CONFIG_MODULE_NAME: NzConfigKey = 'tree';\n\n@Component({\n  selector: 'nz-tree',\n  exportAs: 'nzTree',\n  animations: [treeCollapseMotion],\n  template: `\n    <div role=\"tree\">\n      <input [ngStyle]=\"HIDDEN_STYLE\" />\n    </div>\n    <div class=\"ant-tree-list\" [class.ant-select-tree-list]=\"nzSelectMode\">\n      <div>\n        <cdk-virtual-scroll-viewport\n          *ngIf=\"nzVirtualHeight\"\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"!nzSelectMode\"\n          [itemSize]=\"nzVirtualItemSize\"\n          [minBufferPx]=\"nzVirtualMinBufferPx\"\n          [maxBufferPx]=\"nzVirtualMaxBufferPx\"\n          [style.height]=\"nzVirtualHeight\"\n        >\n          <ng-container *cdkVirtualFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n            <ng-template\n              [ngTemplateOutlet]=\"nodeTemplate\"\n              [ngTemplateOutletContext]=\"{ $implicit: node }\"\n            ></ng-template>\n          </ng-container>\n        </cdk-virtual-scroll-viewport>\n\n        <div\n          *ngIf=\"!nzVirtualHeight\"\n          [class.ant-select-tree-list-holder-inner]=\"nzSelectMode\"\n          [class.ant-tree-list-holder-inner]=\"!nzSelectMode\"\n          [@.disabled]=\"beforeInit || noAnimation?.nzNoAnimation\"\n          [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n          [@treeCollapseMotion]=\"nzFlattenNodes.length\"\n        >\n          <ng-container *ngFor=\"let node of nzFlattenNodes; trackBy: trackByFlattenNode\">\n            <ng-template\n              [ngTemplateOutlet]=\"nodeTemplate\"\n              [ngTemplateOutletContext]=\"{ $implicit: node }\"\n            ></ng-template>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n    <ng-template #nodeTemplate let-treeNode>\n      <nz-tree-node\n        builtin\n        [icon]=\"treeNode.icon\"\n        [title]=\"treeNode.title\"\n        [isLoading]=\"treeNode.isLoading\"\n        [isSelected]=\"treeNode.isSelected\"\n        [isDisabled]=\"treeNode.isDisabled\"\n        [isMatched]=\"treeNode.isMatched\"\n        [isExpanded]=\"treeNode.isExpanded\"\n        [isLeaf]=\"treeNode.isLeaf\"\n        [isStart]=\"treeNode.isStart\"\n        [isEnd]=\"treeNode.isEnd\"\n        [isChecked]=\"treeNode.isChecked\"\n        [isHalfChecked]=\"treeNode.isHalfChecked\"\n        [isDisableCheckbox]=\"treeNode.isDisableCheckbox\"\n        [isSelectable]=\"treeNode.isSelectable\"\n        [canHide]=\"treeNode.canHide\"\n        [nzTreeNode]=\"treeNode\"\n        [nzSelectMode]=\"nzSelectMode\"\n        [nzShowLine]=\"nzShowLine\"\n        [nzExpandedIcon]=\"nzExpandedIcon\"\n        [nzDraggable]=\"nzDraggable\"\n        [nzCheckable]=\"nzCheckable\"\n        [nzShowExpand]=\"nzShowExpand\"\n        [nzAsyncData]=\"nzAsyncData\"\n        [nzSearchValue]=\"nzSearchValue\"\n        [nzHideUnMatched]=\"nzHideUnMatched\"\n        [nzBeforeDrop]=\"nzBeforeDrop\"\n        [nzShowIcon]=\"nzShowIcon\"\n        [nzTreeTemplate]=\"nzTreeTemplate || nzTreeTemplateChild\"\n        (nzExpandChange)=\"eventTriggerChanged($event)\"\n        (nzClick)=\"eventTriggerChanged($event)\"\n        (nzDblClick)=\"eventTriggerChanged($event)\"\n        (nzContextMenu)=\"eventTriggerChanged($event)\"\n        (nzCheckBoxChange)=\"eventTriggerChanged($event)\"\n        (nzOnDragStart)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnter)=\"eventTriggerChanged($event)\"\n        (nzOnDragOver)=\"eventTriggerChanged($event)\"\n        (nzOnDragLeave)=\"eventTriggerChanged($event)\"\n        (nzOnDragEnd)=\"eventTriggerChanged($event)\"\n        (nzOnDrop)=\"eventTriggerChanged($event)\"\n      ></nz-tree-node>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    NzTreeService,\n    {\n      provide: NzTreeBaseService,\n      useFactory: NzTreeServiceFactory,\n      deps: [[new SkipSelf(), new Optional(), NzTreeHigherOrderServiceToken], NzTreeService]\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzTreeComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.ant-select-tree]': `nzSelectMode`,\n    '[class.ant-select-tree-show-line]': `nzSelectMode && nzShowLine`,\n    '[class.ant-select-tree-icon-hide]': `nzSelectMode && !nzShowIcon`,\n    '[class.ant-select-tree-block-node]': `nzSelectMode && nzBlockNode`,\n    '[class.ant-tree]': `!nzSelectMode`,\n    '[class.ant-tree-rtl]': `dir === 'rtl'`,\n    '[class.ant-tree-show-line]': `!nzSelectMode && nzShowLine`,\n    '[class.ant-tree-icon-hide]': `!nzSelectMode && !nzShowIcon`,\n    '[class.ant-tree-block-node]': `!nzSelectMode && nzBlockNode`,\n    '[class.draggable-tree]': `nzDraggable`\n  }\n})\nexport class NzTreeComponent\n  extends NzTreeBase\n  implements OnInit, OnDestroy, ControlValueAccessor, OnChanges, AfterViewInit\n{\n  readonly _nzModuleName: NzConfigKey = NZ_CONFIG_MODULE_NAME;\n\n  static ngAcceptInputType_nzShowIcon: BooleanInput;\n  static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n  static ngAcceptInputType_nzBlockNode: BooleanInput;\n  static ngAcceptInputType_nzExpandAll: BooleanInput;\n  static ngAcceptInputType_nzSelectMode: BooleanInput;\n  static ngAcceptInputType_nzCheckStrictly: BooleanInput;\n  static ngAcceptInputType_nzShowExpand: BooleanInput;\n  static ngAcceptInputType_nzShowLine: BooleanInput;\n  static ngAcceptInputType_nzCheckable: BooleanInput;\n  static ngAcceptInputType_nzAsyncData: BooleanInput;\n  static ngAcceptInputType_nzDraggable: BooleanInput;\n  static ngAcceptInputType_nzMultiple: BooleanInput;\n\n  @Input() @InputBoolean() @WithConfig() nzShowIcon: boolean = false;\n  @Input() @InputBoolean() @WithConfig() nzHideUnMatched: boolean = false;\n  @Input() @InputBoolean() @WithConfig() nzBlockNode: boolean = false;\n  @Input() @InputBoolean() nzExpandAll = false;\n  @Input() @InputBoolean() nzSelectMode = false;\n  @Input() @InputBoolean() nzCheckStrictly = false;\n  @Input() @InputBoolean() nzShowExpand: boolean = true;\n  @Input() @InputBoolean() nzShowLine = false;\n  @Input() @InputBoolean() nzCheckable = false;\n  @Input() @InputBoolean() nzAsyncData = false;\n  @Input() @InputBoolean() nzDraggable: boolean = false;\n  @Input() @InputBoolean() nzMultiple = false;\n  @Input() nzExpandedIcon?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzVirtualItemSize = 28;\n  @Input() nzVirtualMaxBufferPx = 500;\n  @Input() nzVirtualMinBufferPx = 28;\n  @Input() nzVirtualHeight: string | null = null;\n  @Input() nzTreeTemplate?: TemplateRef<{ $implicit: NzTreeNode; origin: NzTreeNodeOptions }>;\n  @Input() nzBeforeDrop?: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\n  @Input() nzData: NzTreeNodeOptions[] | NzTreeNode[] = [];\n  @Input() nzExpandedKeys: NzTreeNodeKey[] = [];\n  @Input() nzSelectedKeys: NzTreeNodeKey[] = [];\n  @Input() nzCheckedKeys: NzTreeNodeKey[] = [];\n  @Input() nzSearchValue: string = '';\n  @Input() nzSearchFunc?: (node: NzTreeNodeOptions) => boolean;\n  @ContentChild('nzTreeTemplate', { static: true }) nzTreeTemplateChild!: TemplateRef<{\n    $implicit: NzTreeNode;\n    origin: NzTreeNodeOptions;\n  }>;\n  @ViewChild(CdkVirtualScrollViewport, { read: CdkVirtualScrollViewport })\n  cdkVirtualScrollViewport!: CdkVirtualScrollViewport;\n  nzFlattenNodes: NzTreeNode[] = [];\n  beforeInit = true;\n  dir: Direction = 'ltr';\n\n  @Output() readonly nzExpandedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzSelectedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzCheckedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n  @Output() readonly nzSearchValueChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzDblClick = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzContextMenu = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragStart = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnter = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragOver = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragLeave = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDrop = new EventEmitter<NzFormatEmitEvent>();\n  @Output() readonly nzOnDragEnd = new EventEmitter<NzFormatEmitEvent>();\n\n  HIDDEN_STYLE = {\n    width: 0,\n    height: 0,\n    display: 'flex',\n    overflow: 'hidden',\n    opacity: 0,\n    border: 0,\n    padding: 0,\n    margin: 0\n  };\n\n  destroy$ = new Subject();\n\n  onChange: (value: NzTreeNode[]) => void = () => null;\n  onTouched: () => void = () => null;\n\n  writeValue(value: NzTreeNode[]): void {\n    this.handleNzData(value);\n  }\n\n  registerOnChange(fn: (_: NzTreeNode[]) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Render all properties of nzTree\n   *\n   * @param changes: all changes from @Input\n   */\n  renderTreeProperties(changes: { [propertyName: string]: SimpleChange }): void {\n    let useDefaultExpandedKeys = false;\n    let expandAll = false;\n    const {\n      nzData,\n      nzExpandedKeys,\n      nzSelectedKeys,\n      nzCheckedKeys,\n      nzCheckStrictly,\n      nzExpandAll,\n      nzMultiple,\n      nzSearchValue\n    } = changes;\n\n    if (nzExpandAll) {\n      useDefaultExpandedKeys = true;\n      expandAll = this.nzExpandAll;\n    }\n\n    if (nzMultiple) {\n      this.nzTreeService.isMultiple = this.nzMultiple;\n    }\n\n    if (nzCheckStrictly) {\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\n    }\n\n    if (nzData) {\n      this.handleNzData(this.nzData);\n    }\n\n    if (nzCheckedKeys) {\n      this.handleCheckedKeys(this.nzCheckedKeys);\n    }\n\n    if (nzCheckStrictly) {\n      this.handleCheckedKeys(null);\n    }\n\n    if (nzExpandedKeys || nzExpandAll) {\n      useDefaultExpandedKeys = true;\n      this.handleExpandedKeys(expandAll || this.nzExpandedKeys);\n    }\n\n    if (nzSelectedKeys) {\n      this.handleSelectedKeys(this.nzSelectedKeys, this.nzMultiple);\n    }\n\n    if (nzSearchValue) {\n      if (!(nzSearchValue.firstChange && !this.nzSearchValue)) {\n        useDefaultExpandedKeys = false;\n        this.handleSearchValue(nzSearchValue.currentValue, this.nzSearchFunc);\n        this.nzSearchValueChange.emit(this.nzTreeService.formatEvent('search', null, null));\n      }\n    }\n\n    // flatten data\n    const currentExpandedKeys = this.getExpandedNodeList().map(v => v.key);\n    const newExpandedKeys = useDefaultExpandedKeys ? expandAll || this.nzExpandedKeys : currentExpandedKeys;\n    this.handleFlattenNodes(this.nzTreeService.rootNodes, newExpandedKeys);\n  }\n\n  trackByFlattenNode(_: number, node: NzTreeNode): string {\n    return node.key;\n  }\n  // Deal with properties\n  /**\n   * nzData\n   *\n   * @param value\n   */\n  handleNzData(value: NzSafeAny[]): void {\n    if (Array.isArray(value)) {\n      const data = this.coerceTreeNodes(value);\n      this.nzTreeService.initTree(data);\n    }\n  }\n\n  handleFlattenNodes(data: NzTreeNode[], expandKeys: NzTreeNodeKey[] | true = []): void {\n    this.nzTreeService.flattenTreeData(data, expandKeys);\n  }\n\n  handleCheckedKeys(keys: NzTreeNodeKey[] | null): void {\n    this.nzTreeService.conductCheck(keys, this.nzCheckStrictly);\n  }\n\n  handleExpandedKeys(keys: NzTreeNodeKey[] | true = []): void {\n    this.nzTreeService.conductExpandedKeys(keys);\n  }\n\n  handleSelectedKeys(keys: NzTreeNodeKey[], isMulti: boolean): void {\n    this.nzTreeService.conductSelectedKeys(keys, isMulti);\n  }\n\n  handleSearchValue(value: string, searchFunc?: (node: NzTreeNodeOptions) => boolean): void {\n    const dataList = flattenTreeData(this.nzTreeService.rootNodes, true).map(v => v.data);\n    const checkIfMatched = (node: NzTreeNode): boolean => {\n      if (searchFunc) {\n        return searchFunc(node.origin);\n      }\n      return !value || !node.title.toLowerCase().includes(value.toLowerCase()) ? false : true;\n    };\n    dataList.forEach(v => {\n      v.isMatched = checkIfMatched(v);\n      v.canHide = !v.isMatched;\n      if (!v.isMatched) {\n        v.setExpanded(false);\n        this.nzTreeService.setExpandedNodeList(v);\n      } else {\n        // expand\n        this.nzTreeService.expandNodeAllParentBySearch(v);\n      }\n      this.nzTreeService.setMatchedNodeList(v);\n    });\n  }\n\n  /**\n   * Handle emit event\n   *\n   * @param event\n   * handle each event\n   */\n  eventTriggerChanged(event: NzFormatEmitEvent): void {\n    const node = event.node!;\n    switch (event.eventName) {\n      case 'expand':\n        this.renderTree();\n        this.nzExpandChange.emit(event);\n        break;\n      case 'click':\n        this.nzClick.emit(event);\n        break;\n      case 'dblclick':\n        this.nzDblClick.emit(event);\n        break;\n      case 'contextmenu':\n        this.nzContextMenu.emit(event);\n        break;\n      case 'check':\n        // Render checked state with nodes' property `isChecked`\n        this.nzTreeService.setCheckedNodeList(node);\n        if (!this.nzCheckStrictly) {\n          this.nzTreeService.conduct(node);\n        }\n        // Cause check method will rerender list, so we need recover it and next the new event to user\n        const eventNext = this.nzTreeService.formatEvent('check', node, event.event!);\n        this.nzCheckBoxChange.emit(eventNext);\n        break;\n      case 'dragstart':\n        // if node is expanded\n        if (node.isExpanded) {\n          node.setExpanded(!node.isExpanded);\n          this.renderTree();\n        }\n        this.nzOnDragStart.emit(event);\n        break;\n      case 'dragenter':\n        const selectedNode = this.nzTreeService.getSelectedNode();\n        if (selectedNode && selectedNode.key !== node.key && !node.isExpanded && !node.isLeaf) {\n          node.setExpanded(true);\n          this.renderTree();\n        }\n        this.nzOnDragEnter.emit(event);\n        break;\n      case 'dragover':\n        this.nzOnDragOver.emit(event);\n        break;\n      case 'dragleave':\n        this.nzOnDragLeave.emit(event);\n        break;\n      case 'dragend':\n        this.nzOnDragEnd.emit(event);\n        break;\n      case 'drop':\n        this.renderTree();\n        this.nzOnDrop.emit(event);\n        break;\n    }\n  }\n\n  /**\n   * Click expand icon\n   */\n  renderTree(): void {\n    this.handleFlattenNodes(\n      this.nzTreeService.rootNodes,\n      this.getExpandedNodeList().map(v => v.key)\n    );\n    this.cdr.markForCheck();\n  }\n  // Handle emit event end\n\n  constructor(\n    nzTreeService: NzTreeBaseService,\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    @Optional() private directionality: Directionality,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    super(nzTreeService);\n  }\n\n  ngOnInit(): void {\n    this.nzTreeService.flattenNodes$.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      this.nzFlattenNodes = data;\n      this.cdr.markForCheck();\n    });\n\n    this.dir = this.directionality.value;\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction: Direction) => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n    this.renderTreeProperties(changes);\n  }\n\n  ngAfterViewInit(): void {\n    this.beforeInit = false;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzTreeDropIndicatorComponent } from './tree-drop-indicator.component';\nimport { NzTreeIndentComponent } from './tree-indent.component';\nimport { NzTreeNodeBuiltinCheckboxComponent } from './tree-node-checkbox.component';\nimport { NzTreeNodeSwitcherComponent } from './tree-node-switcher.component';\nimport { NzTreeNodeTitleComponent } from './tree-node-title.component';\nimport { NzTreeNodeBuiltinComponent } from './tree-node.component';\nimport { NzTreeComponent } from './tree.component';\n\n@NgModule({\n  imports: [\n    BidiModule,\n    CommonModule,\n    NzOutletModule,\n    NzIconModule,\n    NzNoAnimationModule,\n    NzHighlightModule,\n    ScrollingModule\n  ],\n  declarations: [\n    NzTreeComponent,\n    NzTreeNodeBuiltinComponent,\n    NzTreeIndentComponent,\n    NzTreeNodeSwitcherComponent,\n    NzTreeNodeBuiltinCheckboxComponent,\n    NzTreeNodeTitleComponent,\n    NzTreeDropIndicatorComponent\n  ],\n  exports: [NzTreeComponent, NzTreeNodeBuiltinComponent, NzTreeIndentComponent]\n})\nexport class NzTreeModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './tree.module';\nexport * from './tree.component';\nexport * from './tree-node.component';\nexport * from './tree-indent.component';\nexport * from './tree.service';\nexport * from './tree-node-switcher.component';\nexport * from './tree-node-checkbox.component';\nexport * from './tree-node-title.component';\nexport { NzTreeNodeOptions, NzFormatEmitEvent, NzFormatBeforeDropEvent, NzTreeNode } from 'ng-zorro-antd/core/tree';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NzTreeDropIndicatorComponent as ɵa} from './tree-drop-indicator.component';"]}