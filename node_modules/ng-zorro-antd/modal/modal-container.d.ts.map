{"version":3,"file":"modal-container.d.ts","sources":["modal-container.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { AnimationEvent } from '@angular/animations';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Direction } from '@angular/cdk/bidi';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { ChangeDetectorRef, ComponentRef, ElementRef, EmbeddedViewRef, EventEmitter, OnDestroy, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzModalRef } from './modal-ref';\nimport { ModalOptions } from './modal-types';\nexport declare function throwNzModalContentAlreadyAttachedError(): never;\nexport declare class BaseModalContainerComponent extends BasePortalOutlet implements OnDestroy {\n    protected elementRef: ElementRef;\n    protected focusTrapFactory: FocusTrapFactory;\n    cdr: ChangeDetectorRef;\n    protected render: Renderer2;\n    protected overlayRef: OverlayRef;\n    protected nzConfigService: NzConfigService;\n    config: ModalOptions;\n    protected animationType?: string | undefined;\n    portalOutlet: CdkPortalOutlet;\n    modalElementRef: ElementRef<HTMLDivElement>;\n    animationStateChanged: EventEmitter<AnimationEvent>;\n    containerClick: EventEmitter<void>;\n    cancelTriggered: EventEmitter<void>;\n    okTriggered: EventEmitter<void>;\n    state: 'void' | 'enter' | 'exit';\n    document: Document;\n    modalRef: NzModalRef;\n    isStringContent: boolean;\n    dir: Direction;\n    private elementFocusedBeforeModalWasOpened;\n    private focusTrap;\n    private mouseDown;\n    private oldMaskStyle;\n    protected destroy$: Subject<unknown>;\n    get showMask(): boolean;\n    get maskClosable(): boolean;\n    constructor(elementRef: ElementRef, focusTrapFactory: FocusTrapFactory, cdr: ChangeDetectorRef, render: Renderer2, overlayRef: OverlayRef, nzConfigService: NzConfigService, config: ModalOptions, document?: NzSafeAny, animationType?: string | undefined);\n    onContainerClick(e: MouseEvent): void;\n    onMousedown(): void;\n    onMouseup(): void;\n    onCloseClick(): void;\n    onOkClick(): void;\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C>;\n    attachStringContent(): void;\n    getNativeElement(): HTMLElement;\n    private animationDisabled;\n    private setModalTransformOrigin;\n    private savePreviouslyFocusedElement;\n    private trapFocus;\n    private restoreFocus;\n    private setEnterAnimationClass;\n    private setExitAnimationClass;\n    private setMaskExitAnimationClass;\n    private cleanAnimationClass;\n    private setZIndexForBackdrop;\n    bindBackdropStyle(): void;\n    updateMaskClassname(): void;\n    onAnimationDone(event: AnimationEvent): void;\n    onAnimationStart(event: AnimationEvent): void;\n    startExitAnimation(): void;\n    ngOnDestroy(): void;\n}\n"]}