{"version":3,"file":"modal.service.d.ts","sources":["modal.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Injector, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzModalRef } from './modal-ref';\nimport { ConfirmType, ModalOptions } from './modal-types';\nexport declare class NzModalService implements OnDestroy {\n    private overlay;\n    private injector;\n    private nzConfigService;\n    private parentModal;\n    private directionality;\n    private openModalsAtThisLevel;\n    private readonly afterAllClosedAtThisLevel;\n    get openModals(): NzModalRef[];\n    get _afterAllClosed(): Subject<void>;\n    readonly afterAllClose: Observable<void>;\n    constructor(overlay: Overlay, injector: Injector, nzConfigService: NzConfigService, parentModal: NzModalService, directionality: Directionality);\n    create<T, R = NzSafeAny>(config: ModalOptions<T, R>): NzModalRef<T, R>;\n    closeAll(): void;\n    confirm<T>(options?: ModalOptions<T>, confirmType?: ConfirmType): NzModalRef<T>;\n    info<T>(options?: ModalOptions<T>): NzModalRef<T>;\n    success<T>(options?: ModalOptions<T>): NzModalRef<T>;\n    error<T>(options?: ModalOptions<T>): NzModalRef<T>;\n    warning<T>(options?: ModalOptions<T>): NzModalRef<T>;\n    private open;\n    private removeOpenModal;\n    private closeModals;\n    private createOverlay;\n    private attachModalContainer;\n    private attachModalContent;\n    private createInjector;\n    private confirmFactory;\n    ngOnDestroy(): void;\n}\n"]}