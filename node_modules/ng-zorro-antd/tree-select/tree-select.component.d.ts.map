{"version":3,"file":"tree-select.component.d.ts","sources":["tree-select.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange } from '@angular/cdk/overlay';\nimport { ChangeDetectorRef, ElementRef, EventEmitter, Injector, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { NzFormatEmitEvent, NzTreeBase, NzTreeBaseService, NzTreeNode, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\nimport { BooleanInput, NgStyleInterface, NzSizeLDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { NzSelectSearchComponent } from 'ng-zorro-antd/select';\nimport { NzTreeComponent } from 'ng-zorro-antd/tree';\nimport { NzTreeSelectService } from './tree-select.service';\nexport declare function higherOrderServiceFactory(injector: Injector): NzTreeBaseService;\nexport declare class NzTreeSelectComponent extends NzTreeBase implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\n    nzConfigService: NzConfigService;\n    private renderer;\n    private cdr;\n    private elementRef;\n    private directionality;\n    private focusMonitor;\n    noAnimation?: NzNoAnimationDirective | undefined;\n    readonly _nzModuleName: NzConfigKey;\n    static ngAcceptInputType_nzAllowClear: BooleanInput;\n    static ngAcceptInputType_nzShowExpand: BooleanInput;\n    static ngAcceptInputType_nzShowLine: BooleanInput;\n    static ngAcceptInputType_nzDropdownMatchSelectWidth: BooleanInput;\n    static ngAcceptInputType_nzCheckable: BooleanInput;\n    static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n    static ngAcceptInputType_nzShowIcon: BooleanInput;\n    static ngAcceptInputType_nzShowSearch: BooleanInput;\n    static ngAcceptInputType_nzDisabled: BooleanInput;\n    static ngAcceptInputType_nzAsyncData: BooleanInput;\n    static ngAcceptInputType_nzMultiple: BooleanInput;\n    static ngAcceptInputType_nzDefaultExpandAll: BooleanInput;\n    static ngAcceptInputType_nzCheckStrictly: BooleanInput;\n    nzId: string | null;\n    nzAllowClear: boolean;\n    nzShowExpand: boolean;\n    nzShowLine: boolean;\n    nzDropdownMatchSelectWidth: boolean;\n    nzCheckable: boolean;\n    nzHideUnMatched: boolean;\n    nzShowIcon: boolean;\n    nzShowSearch: boolean;\n    nzDisabled: boolean;\n    nzAsyncData: boolean;\n    nzMultiple: boolean;\n    nzDefaultExpandAll: boolean;\n    nzCheckStrictly: boolean;\n    nzVirtualItemSize: number;\n    nzVirtualMaxBufferPx: number;\n    nzVirtualMinBufferPx: number;\n    nzVirtualHeight: string | null;\n    nzExpandedIcon?: TemplateRef<{\n        $implicit: NzTreeNode;\n        origin: NzTreeNodeOptions;\n    }>;\n    nzNotFoundContent?: string;\n    nzNodes: Array<NzTreeNode | NzTreeNodeOptions>;\n    nzOpen: boolean;\n    nzSize: NzSizeLDSType;\n    nzPlaceHolder: string;\n    nzDropdownStyle: NgStyleInterface | null;\n    nzDropdownClassName?: string;\n    nzBackdrop: boolean;\n    set nzExpandedKeys(value: string[]);\n    get nzExpandedKeys(): string[];\n    nzDisplayWith: (node: NzTreeNode) => string | undefined;\n    nzMaxTagCount: number;\n    nzMaxTagPlaceholder: TemplateRef<{\n        $implicit: NzTreeNode[];\n    }> | null;\n    readonly nzOpenChange: EventEmitter<boolean>;\n    readonly nzCleared: EventEmitter<void>;\n    readonly nzRemoved: EventEmitter<NzTreeNode>;\n    readonly nzExpandChange: EventEmitter<NzFormatEmitEvent>;\n    readonly nzTreeClick: EventEmitter<NzFormatEmitEvent>;\n    readonly nzTreeCheckBoxChange: EventEmitter<NzFormatEmitEvent>;\n    nzSelectSearchComponent: NzSelectSearchComponent;\n    treeRef: NzTreeComponent;\n    cdkOverlayOrigin: CdkOverlayOrigin;\n    cdkConnectedOverlay: CdkConnectedOverlay;\n    nzTreeTemplate: TemplateRef<{\n        $implicit: NzTreeNode;\n        origin: NzTreeNodeOptions;\n    }>;\n    nzTreeTemplateChild: TemplateRef<{\n        $implicit: NzTreeNode;\n        origin: NzTreeNodeOptions;\n    }>;\n    get treeTemplate(): TemplateRef<{\n        $implicit: NzTreeNode;\n        origin: NzTreeNodeOptions;\n    }>;\n    dropdownClassName: string;\n    triggerWidth?: number;\n    isComposing: boolean;\n    isDestroy: boolean;\n    isNotFound: boolean;\n    focused: boolean;\n    inputValue: string;\n    dropDownPosition: 'top' | 'center' | 'bottom';\n    selectedNodes: NzTreeNode[];\n    expandedKeys: string[];\n    value: string[];\n    dir: Direction;\n    private destroy$;\n    onChange: OnChangeType;\n    onTouched: OnTouchedType;\n    get placeHolderDisplay(): string;\n    get isMultiple(): boolean;\n    constructor(nzTreeService: NzTreeSelectService, nzConfigService: NzConfigService, renderer: Renderer2, cdr: ChangeDetectorRef, elementRef: ElementRef, directionality: Directionality, focusMonitor: FocusMonitor, noAnimation?: NzNoAnimationDirective | undefined);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    isComposingChange(isComposing: boolean): void;\n    setDisabledState(isDisabled: boolean): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    writeValue(value: string[] | string): void;\n    registerOnChange(fn: (_: string[] | string | null) => void): void;\n    registerOnTouched(fn: () => void): void;\n    onKeydown(event: KeyboardEvent): void;\n    trigger(): void;\n    openDropdown(): void;\n    closeDropDown(): void;\n    onKeyDownInput(e: KeyboardEvent): void;\n    onExpandedKeysChange(value: NzFormatEmitEvent): void;\n    setInputValue(value: string): void;\n    removeSelected(node: NzTreeNode, emit?: boolean): void;\n    focusOnInput(): void;\n    subscribeSelectionChange(): void;\n    updateSelectedNodes(init?: boolean): void;\n    updatePosition(): void;\n    onPositionChange(position: ConnectedOverlayPositionChange): void;\n    onClearSelection(): void;\n    onClickOutside(event: MouseEvent): void;\n    setSearchValues($event: NzFormatEmitEvent): void;\n    updateCdkConnectedOverlayStatus(): void;\n    trackValue(_index: number, option: NzTreeNode): string;\n}\n"]}