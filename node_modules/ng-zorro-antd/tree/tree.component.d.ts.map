{"version":3,"file":"tree.component.d.ts","sources":["tree.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { AfterViewInit, ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChange, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { NzFormatBeforeDropEvent, NzFormatEmitEvent, NzTreeBase, NzTreeBaseService, NzTreeNode, NzTreeNodeKey, NzTreeNodeOptions } from 'ng-zorro-antd/core/tree';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzTreeService } from './tree.service';\nexport declare function NzTreeServiceFactory(higherOrderService: NzTreeBaseService, treeService: NzTreeService): NzTreeBaseService;\nexport declare class NzTreeComponent extends NzTreeBase implements OnInit, OnDestroy, ControlValueAccessor, OnChanges, AfterViewInit {\n    nzConfigService: NzConfigService;\n    private cdr;\n    private directionality;\n    noAnimation?: NzNoAnimationDirective | undefined;\n    readonly _nzModuleName: NzConfigKey;\n    static ngAcceptInputType_nzShowIcon: BooleanInput;\n    static ngAcceptInputType_nzHideUnMatched: BooleanInput;\n    static ngAcceptInputType_nzBlockNode: BooleanInput;\n    static ngAcceptInputType_nzExpandAll: BooleanInput;\n    static ngAcceptInputType_nzSelectMode: BooleanInput;\n    static ngAcceptInputType_nzCheckStrictly: BooleanInput;\n    static ngAcceptInputType_nzShowExpand: BooleanInput;\n    static ngAcceptInputType_nzShowLine: BooleanInput;\n    static ngAcceptInputType_nzCheckable: BooleanInput;\n    static ngAcceptInputType_nzAsyncData: BooleanInput;\n    static ngAcceptInputType_nzDraggable: BooleanInput;\n    static ngAcceptInputType_nzMultiple: BooleanInput;\n    nzShowIcon: boolean;\n    nzHideUnMatched: boolean;\n    nzBlockNode: boolean;\n    nzExpandAll: boolean;\n    nzSelectMode: boolean;\n    nzCheckStrictly: boolean;\n    nzShowExpand: boolean;\n    nzShowLine: boolean;\n    nzCheckable: boolean;\n    nzAsyncData: boolean;\n    nzDraggable: boolean;\n    nzMultiple: boolean;\n    nzExpandedIcon?: TemplateRef<{\n        $implicit: NzTreeNode;\n        origin: NzTreeNodeOptions;\n    }>;\n    nzVirtualItemSize: number;\n    nzVirtualMaxBufferPx: number;\n    nzVirtualMinBufferPx: number;\n    nzVirtualHeight: string | null;\n    nzTreeTemplate?: TemplateRef<{\n        $implicit: NzTreeNode;\n        origin: NzTreeNodeOptions;\n    }>;\n    nzBeforeDrop?: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\n    nzData: NzTreeNodeOptions[] | NzTreeNode[];\n    nzExpandedKeys: NzTreeNodeKey[];\n    nzSelectedKeys: NzTreeNodeKey[];\n    nzCheckedKeys: NzTreeNodeKey[];\n    nzSearchValue: string;\n    nzSearchFunc?: (node: NzTreeNodeOptions) => boolean;\n    nzTreeTemplateChild: TemplateRef<{\n        $implicit: NzTreeNode;\n        origin: NzTreeNodeOptions;\n    }>;\n    cdkVirtualScrollViewport: CdkVirtualScrollViewport;\n    nzFlattenNodes: NzTreeNode[];\n    beforeInit: boolean;\n    dir: Direction;\n    readonly nzExpandedKeysChange: EventEmitter<string[]>;\n    readonly nzSelectedKeysChange: EventEmitter<string[]>;\n    readonly nzCheckedKeysChange: EventEmitter<string[]>;\n    readonly nzSearchValueChange: EventEmitter<NzFormatEmitEvent>;\n    readonly nzClick: EventEmitter<NzFormatEmitEvent>;\n    readonly nzDblClick: EventEmitter<NzFormatEmitEvent>;\n    readonly nzContextMenu: EventEmitter<NzFormatEmitEvent>;\n    readonly nzCheckBoxChange: EventEmitter<NzFormatEmitEvent>;\n    readonly nzExpandChange: EventEmitter<NzFormatEmitEvent>;\n    readonly nzOnDragStart: EventEmitter<NzFormatEmitEvent>;\n    readonly nzOnDragEnter: EventEmitter<NzFormatEmitEvent>;\n    readonly nzOnDragOver: EventEmitter<NzFormatEmitEvent>;\n    readonly nzOnDragLeave: EventEmitter<NzFormatEmitEvent>;\n    readonly nzOnDrop: EventEmitter<NzFormatEmitEvent>;\n    readonly nzOnDragEnd: EventEmitter<NzFormatEmitEvent>;\n    HIDDEN_STYLE: {\n        width: number;\n        height: number;\n        display: string;\n        overflow: string;\n        opacity: number;\n        border: number;\n        padding: number;\n        margin: number;\n    };\n    destroy$: Subject<unknown>;\n    onChange: (value: NzTreeNode[]) => void;\n    onTouched: () => void;\n    writeValue(value: NzTreeNode[]): void;\n    registerOnChange(fn: (_: NzTreeNode[]) => void): void;\n    registerOnTouched(fn: () => void): void;\n    /**\n     * Render all properties of nzTree\n     *\n     * @param changes: all changes from @Input\n     */\n    renderTreeProperties(changes: {\n        [propertyName: string]: SimpleChange;\n    }): void;\n    trackByFlattenNode(_: number, node: NzTreeNode): string;\n    /**\n     * nzData\n     *\n     * @param value\n     */\n    handleNzData(value: NzSafeAny[]): void;\n    handleFlattenNodes(data: NzTreeNode[], expandKeys?: NzTreeNodeKey[] | true): void;\n    handleCheckedKeys(keys: NzTreeNodeKey[] | null): void;\n    handleExpandedKeys(keys?: NzTreeNodeKey[] | true): void;\n    handleSelectedKeys(keys: NzTreeNodeKey[], isMulti: boolean): void;\n    handleSearchValue(value: string, searchFunc?: (node: NzTreeNodeOptions) => boolean): void;\n    /**\n     * Handle emit event\n     *\n     * @param event\n     * handle each event\n     */\n    eventTriggerChanged(event: NzFormatEmitEvent): void;\n    /**\n     * Click expand icon\n     */\n    renderTree(): void;\n    constructor(nzTreeService: NzTreeBaseService, nzConfigService: NzConfigService, cdr: ChangeDetectorRef, directionality: Directionality, noAnimation?: NzNoAnimationDirective | undefined);\n    ngOnInit(): void;\n    ngOnChanges(changes: {\n        [propertyName: string]: SimpleChange;\n    }): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n}\n"]}