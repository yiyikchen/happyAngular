{"version":3,"file":"mention.component.d.ts","sources":["mention.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzMentionTriggerDirective } from './mention-trigger';\nimport { NzMentionService } from './mention.service';\nexport interface MentionOnSearchTypes {\n    value: string;\n    prefix: string;\n}\nexport interface Mention {\n    startPos: number;\n    endPos: number;\n    mention: string;\n}\nexport declare type MentionPlacement = 'top' | 'bottom';\nexport declare class NzMentionComponent implements OnDestroy, OnInit, OnChanges {\n    private ngDocument;\n    private cdr;\n    private overlay;\n    private viewContainerRef;\n    private nzMentionService;\n    static ngAcceptInputType_nzLoading: BooleanInput;\n    nzValueWith: (value: NzSafeAny) => string;\n    nzPrefix: string | string[];\n    nzLoading: boolean;\n    nzNotFoundContent: string;\n    nzPlacement: MentionPlacement;\n    nzSuggestions: NzSafeAny[];\n    readonly nzOnSelect: EventEmitter<NzSafeAny>;\n    readonly nzOnSearchChange: EventEmitter<MentionOnSearchTypes>;\n    trigger: NzMentionTriggerDirective;\n    suggestionsTemp?: TemplateRef<void>;\n    items: QueryList<ElementRef>;\n    set suggestionChild(value: TemplateRef<{\n        $implicit: NzSafeAny;\n    }>);\n    isOpen: boolean;\n    filteredSuggestions: string[];\n    suggestionTemplate: TemplateRef<{\n        $implicit: NzSafeAny;\n    }> | null;\n    activeIndex: number;\n    private previousValue;\n    private cursorMention;\n    private cursorMentionStart?;\n    private cursorMentionEnd?;\n    private overlayRef;\n    private portal?;\n    private positionStrategy;\n    private overlayOutsideClickSubscription;\n    private get triggerNativeElement();\n    private get focusItemElement();\n    constructor(ngDocument: NzSafeAny, cdr: ChangeDetectorRef, overlay: Overlay, viewContainerRef: ViewContainerRef, nzMentionService: NzMentionService);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    closeDropdown(): void;\n    openDropdown(): void;\n    getMentions(): string[];\n    selectSuggestion(suggestion: string | {}): void;\n    private handleInput;\n    private handleKeydown;\n    private handleClick;\n    private bindTriggerEvents;\n    private suggestionsFilter;\n    private resetDropdown;\n    private setNextItemActive;\n    private setPreviousItemActive;\n    private scrollToFocusItem;\n    private canOpen;\n    private resetCursorMention;\n    private updatePositions;\n    private subscribeOverlayOutsideClick;\n    private attachOverlay;\n    private getOverlayConfig;\n    private getOverlayPosition;\n}\n"]}