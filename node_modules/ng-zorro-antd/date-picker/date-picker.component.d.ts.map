{"version":3,"file":"date-picker.component.d.ts","sources":["date-picker.component.d.ts"],"names":[],"mappingssourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange, ConnectionPositionPair, HorizontalConnectionPos, VerticalConnectionPos } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { NzResizeObserver } from 'ng-zorro-antd/cdk/resize-observer';\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { CandyDate, CompatibleValue } from 'ng-zorro-antd/core/time';\nimport { BooleanInput, FunctionProp, NzSafeAny, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { DateHelperService, NzDatePickerI18nInterface, NzI18nService } from 'ng-zorro-antd/i18n';\nimport { DatePickerService } from './date-picker.service';\nimport { DateRangePopupComponent } from './date-range-popup.component';\nimport { CompatibleDate, DisabledTimeFn, NzDateMode, PresetRanges, RangePartType, SupportTimeOptions } from './standard-types';\nexport declare type NzDatePickerSizeType = 'large' | 'default' | 'small';\n/**\n * The base picker for all common APIs\n */\nexport declare class NzDatePickerComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit, ControlValueAccessor {\n    nzConfigService: NzConfigService;\n    datePickerService: DatePickerService;\n    protected i18n: NzI18nService;\n    protected cdr: ChangeDetectorRef;\n    private renderer;\n    private elementRef;\n    private dateHelper;\n    private nzResizeObserver;\n    private platform;\n    private directionality;\n    noAnimation?: NzNoAnimationDirective | undefined;\n    readonly _nzModuleName: NzConfigKey;\n    static ngAcceptInputType_nzAllowClear: BooleanInput;\n    static ngAcceptInputType_nzAutoFocus: BooleanInput;\n    static ngAcceptInputType_nzDisabled: BooleanInput;\n    static ngAcceptInputType_nzBorderless: BooleanInput;\n    static ngAcceptInputType_nzInputReadOnly: BooleanInput;\n    static ngAcceptInputType_nzInline: BooleanInput;\n    static ngAcceptInputType_nzOpen: BooleanInput;\n    static ngAcceptInputType_nzShowToday: BooleanInput;\n    static ngAcceptInputType_nzShowNow: BooleanInput;\n    static ngAcceptInputType_nzMode: NzDateMode | NzDateMode[] | string | string[] | null | undefined;\n    static ngAcceptInputType_nzShowTime: BooleanInput | SupportTimeOptions | null | undefined;\n    isRange: boolean;\n    extraFooter?: TemplateRef<NzSafeAny> | string;\n    dir: Direction;\n    panelMode: NzDateMode | NzDateMode[];\n    private destroyed$;\n    private isCustomPlaceHolder;\n    private isCustomFormat;\n    private showTime;\n    nzAllowClear: boolean;\n    nzAutoFocus: boolean;\n    nzDisabled: boolean;\n    nzBorderless: boolean;\n    nzInputReadOnly: boolean;\n    nzInline: boolean;\n    nzOpen?: boolean;\n    nzDisabledDate?: (d: Date) => boolean;\n    nzLocale: NzDatePickerI18nInterface;\n    nzPlaceHolder: string | string[];\n    nzPopupStyle: object;\n    nzDropdownClassName?: string;\n    nzSize: NzDatePickerSizeType;\n    nzFormat: string;\n    nzDateRender?: TemplateRef<NzSafeAny> | string | FunctionProp<TemplateRef<Date> | string>;\n    nzDisabledTime?: DisabledTimeFn;\n    nzRenderExtraFooter?: TemplateRef<NzSafeAny> | string | FunctionProp<TemplateRef<NzSafeAny> | string>;\n    nzShowToday: boolean;\n    nzMode: NzDateMode;\n    nzShowNow: boolean;\n    nzRanges?: PresetRanges;\n    nzDefaultPickerValue: CompatibleDate | null;\n    nzSeparator?: string;\n    nzSuffixIcon: string | TemplateRef<NzSafeAny>;\n    nzBackdrop: boolean;\n    nzId: string | null;\n    readonly nzOnPanelChange: EventEmitter<string | NzDateMode[] | string[]>;\n    readonly nzOnCalendarChange: EventEmitter<(Date | null)[]>;\n    readonly nzOnOk: EventEmitter<CompatibleDate | null>;\n    readonly nzOnOpenChange: EventEmitter<boolean>;\n    get nzShowTime(): SupportTimeOptions | boolean;\n    set nzShowTime(value: SupportTimeOptions | boolean);\n    cdkConnectedOverlay?: CdkConnectedOverlay;\n    panel: DateRangePopupComponent;\n    separatorElement?: ElementRef;\n    pickerInput?: ElementRef<HTMLInputElement>;\n    rangePickerInputs?: QueryList<ElementRef<HTMLInputElement>>;\n    origin: CdkOverlayOrigin;\n    document: Document;\n    inputSize: number;\n    inputWidth?: number;\n    destroy$: Subject<unknown>;\n    prefixCls: string;\n    inputValue: NzSafeAny;\n    activeBarStyle: object;\n    overlayOpen: boolean;\n    overlayPositions: ConnectionPositionPair[];\n    currentPositionX: HorizontalConnectionPos;\n    currentPositionY: VerticalConnectionPos;\n    get realOpenState(): boolean;\n    ngAfterViewInit(): void;\n    updateInputWidthAndArrowLeft(): void;\n    getInput(partType?: RangePartType): HTMLInputElement | undefined;\n    focus(): void;\n    onFocus(event: FocusEvent, partType?: RangePartType): void;\n    onFocusout(event: FocusEvent): void;\n    open(): void;\n    close(): void;\n    showClear(): boolean;\n    checkAndClose(): void;\n    onClickInputBox(event: MouseEvent): void;\n    onOverlayKeydown(event: KeyboardEvent): void;\n    onPositionChange(position: ConnectedOverlayPositionChange): void;\n    onClickClear(event: MouseEvent): void;\n    updateInputValue(): void;\n    formatValue(value: CandyDate): string;\n    onInputChange(value: string, isEnter?: boolean): void;\n    onKeyupEnter(event: Event): void;\n    private checkValidDate;\n    getPlaceholder(partType?: RangePartType): string;\n    isEmptyValue(value: CompatibleValue): boolean;\n    isOpenHandledByUser(): boolean;\n    constructor(nzConfigService: NzConfigService, datePickerService: DatePickerService, i18n: NzI18nService, cdr: ChangeDetectorRef, renderer: Renderer2, elementRef: ElementRef, dateHelper: DateHelperService, nzResizeObserver: NzResizeObserver, platform: Platform, doc: NzSafeAny, directionality: Directionality, noAnimation?: NzNoAnimationDirective | undefined);\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    setModeAndFormat(): void;\n    /**\n     * Triggered when overlayOpen changes (different with realOpenState)\n     *\n     * @param open The overlayOpen in picker component\n     */\n    onOpenChange(open: boolean): void;\n    onChangeFn: OnChangeType;\n    onTouchedFn: OnTouchedType;\n    writeValue(value: CompatibleDate): void;\n    registerOnChange(fn: OnChangeType): void;\n    registerOnTouched(fn: OnTouchedType): void;\n    setDisabledState(isDisabled: boolean): void;\n    private setLocale;\n    private setDefaultPlaceHolder;\n    private getPropertyOfLocale;\n    private setValue;\n    renderClass(value: boolean): void;\n    onPanelModeChange(panelMode: NzDateMode | NzDateMode[]): void;\n    onCalendarChange(value: CompatibleValue): void;\n    onResultOk(): void;\n}\n"]}