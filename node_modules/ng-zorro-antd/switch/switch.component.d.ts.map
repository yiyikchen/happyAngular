{"version":3,"file":"switch.component.d.ts","sources":["switch.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { AfterViewInit, ChangeDetectorRef, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { NzConfigKey, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, NzSizeDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nexport declare class NzSwitchComponent implements ControlValueAccessor, AfterViewInit, OnDestroy, OnInit {\n    nzConfigService: NzConfigService;\n    private cdr;\n    private focusMonitor;\n    private directionality;\n    readonly _nzModuleName: NzConfigKey;\n    static ngAcceptInputType_nzLoading: BooleanInput;\n    static ngAcceptInputType_nzDisabled: BooleanInput;\n    static ngAcceptInputType_nzControl: BooleanInput;\n    isChecked: boolean;\n    onChange: OnChangeType;\n    onTouched: OnTouchedType;\n    private switchElement?;\n    nzLoading: boolean;\n    nzDisabled: boolean;\n    nzControl: boolean;\n    nzCheckedChildren: string | TemplateRef<void> | null;\n    nzUnCheckedChildren: string | TemplateRef<void> | null;\n    nzSize: NzSizeDSType;\n    dir: Direction;\n    private destroy$;\n    onHostClick(e: MouseEvent): void;\n    updateValue(value: boolean): void;\n    onKeyDown(e: KeyboardEvent): void;\n    focus(): void;\n    blur(): void;\n    constructor(nzConfigService: NzConfigService, cdr: ChangeDetectorRef, focusMonitor: FocusMonitor, directionality: Directionality);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    writeValue(value: boolean): void;\n    registerOnChange(fn: OnChangeType): void;\n    registerOnTouched(fn: OnTouchedType): void;\n    setDisabledState(disabled: boolean): void;\n}\n"]}