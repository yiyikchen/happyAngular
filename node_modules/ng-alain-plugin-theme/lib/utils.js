"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.d = exports.getJSON = exports.deepMergeKey = void 0;
const json_1 = require("@angular-devkit/core/src/json");
const fs_1 = require("fs");
function deepMergeKey(original, ingoreArray, ...objects) {
    if (Array.isArray(original) || typeof original !== 'object')
        return original;
    const isObject = (v) => typeof v === 'object' || typeof v === 'function';
    const merge = (target, obj) => {
        Object.keys(obj)
            .filter(key => key !== '__proto__' && Object.prototype.hasOwnProperty.call(obj, key))
            .forEach(key => {
            const oldValue = obj[key];
            const newValue = target[key];
            if (!ingoreArray && Array.isArray(newValue)) {
                target[key] = [...newValue, ...oldValue];
            }
            else if (oldValue != null && isObject(oldValue) && newValue != null && isObject(newValue)) {
                target[key] = merge(newValue, oldValue);
            }
            else {
                target[key] = oldValue;
            }
        });
        return target;
    };
    objects.filter(v => isObject(v)).forEach(v => merge(original, v));
    return original;
}
exports.deepMergeKey = deepMergeKey;
function getJSON(jsonFile) {
    const content = fs_1.readFileSync(jsonFile, 'utf-8');
    try {
        return json_1.parseJson(content, json_1.JsonParseMode.Loose);
    }
    catch (ex) {
        console.log(`Can't parse json file (${jsonFile}), pls check for comments or trailing commas, or validate json via https://jsonlint.com/`);
        throw ex;
    }
}
exports.getJSON = getJSON;
function d(config, message, data) {
    if (config.debug === true) {
        console.log(`[debug] ${message}`);
        if (data) {
            console.log(JSON.stringify(data));
        }
    }
}
exports.d = d;
